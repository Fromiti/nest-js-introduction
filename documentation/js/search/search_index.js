var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Animal.html",[0,0.029,1,1.936]],["body/classes/Animal.html",[0,0.027,1,2.528,2,1.183,3,0.178,4,0.155,5,0.155,6,2.541,7,0.275,8,1.125,9,2.161,10,1.394,11,4.596,12,0.828,13,0.021,14,1.399,15,1.48,16,2.541,17,0.992,18,3.351,19,1.006,20,2.863,21,3.992,22,3.543,23,3.992,24,3.351,25,1.443,26,2.863,27,2.301,28,3.351,29,4.933,30,3.351,31,4.642,32,3.351,33,0.323,34,2.899,35,2.941,36,2.541,37,1.119,38,4.08,39,3.543,40,3.992,41,3.543,42,1.491,43,2.863,44,0.248,45,2.863,46,2.863,47,2.863,48,3.351,49,2.109,50,3.351,51,0.01,52,0.013,53,0.01]],["title/modules/AnimalsModule.html",[54,1.195,55,2.252]],["body/modules/AnimalsModule.html",[0,0.031,1,2.015,3,0.198,4,0.173,5,0.173,13,0.021,25,1.144,33,0.409,44,0.198,51,0.011,52,0.014,53,0.011,54,1.899,55,4.121,56,1.658,57,1.764,58,2.015,59,2.015,60,1.764,61,3.076,62,2.015,63,3.183,64,3.183,65,3.809,66,2.718,67,2.015,68,2.015,69,3.725,70,0.674,71,3.183,72,3.45,73,3.725,74,2.345,75,1.315,76,2.558,77,1.561,78,5.024,79,2.825,80,3.81,81,3.183,82,3.183,83,2.015,84,3.725,85,3.725,86,3.725,87,3.725,88,3.076,89,3.725,90,5.024,91,3.163,92,3.725]],["title/classes/AnimalsResolver.html",[0,0.029,72,2.457]],["body/classes/AnimalsResolver.html",[0,0.016,1,3.194,2,0.669,3,0.101,4,0.088,5,0.088,7,0.156,9,1.802,10,1.31,11,3.73,12,0.659,13,0.021,14,1.528,15,1.418,17,0.981,19,0.408,27,2.091,33,0.322,37,0.633,44,0.101,49,3.009,51,0.005,52,0.009,53,0.005,65,2.97,70,0.343,71,1.62,72,2.091,76,1.302,93,1.62,94,1.075,95,4.366,96,2.575,97,4.781,98,4.366,99,2.601,100,2.362,101,3.044,102,4.366,103,3.044,104,0.75,105,1.896,106,5.364,107,1.896,108,1.785,109,1.512,110,3.044,111,4.366,112,1.896,113,1.968,114,1.896,115,2.748,116,3.258,117,1.916,118,1.697,119,1.896,120,3.814,121,1.896,122,1.62,123,1.896,124,1.896,125,1.896,126,1.896,127,1.896,128,1.896,129,3.683,130,1.896,131,1.62,132,2.619,133,3.73,134,3.311,135,2.601,136,3.814,137,1.896,138,2.601,139,1.896,140,1.62,141,1.438,142,1.103,143,1.438,144,0.844,145,0.75,146,1.896,147,1.103,148,1.896,149,1.599,150,2.416,151,1.896,152,1.806,153,1.026,154,3.044,155,1.896,156,1.896,157,1.438,158,1.896,159,1.896,160,1.896,161,1.896,162,1.896,163,1.896,164,1.896,165,1.896,166,3.73,167,1.896,168,1.62,169,1.896,170,1.896,171,1.896,172,1.896,173,1.896,174,3.044,175,1.896,176,1.896,177,1.896,178,1.62,179,1.896,180,1.302,181,1.896,182,1.896,183,1.896]],["title/injectables/AnimalsService.html",[65,2.082,184,0.728]],["body/injectables/AnimalsService.html",[0,0.029,1,1.906,3,0.187,4,0.163,5,0.163,7,0.289,8,1.164,10,0.802,12,0.73,13,0.021,15,1.23,17,1.014,25,0.802,33,0.387,42,1.568,44,0.187,51,0.01,52,0.014,53,0.01,65,2.814,70,0.638,75,1.244,76,2.419,77,1.476,104,1.912,108,1.315,109,1.114,145,2.694,184,0.984,185,1.393,186,3.009,187,4.289,188,5.946,189,4.011,190,4.726,191,3.523,192,3.964,193,3.523,194,4.837,195,3.523,196,3.523,197,3.045,198,3.523,199,2.217,200,1.78]],["title/modules/AppModule.html",[54,1.195,201,2.457]],["body/modules/AppModule.html",[0,0.025,3,0.161,4,0.14,5,0.14,13,0.021,33,0.411,37,1.011,42,1.348,44,0.161,51,0.009,52,0.012,53,0.009,54,1.7,55,3.86,56,1.936,57,1.434,58,1.638,59,1.638,60,1.434,61,1.638,62,1.638,66,2.353,67,1.638,68,1.638,70,0.548,74,1.906,75,1.069,79,2.297,83,2.753,118,1.348,144,1.348,200,1.53,201,4.83,202,2.587,203,2.587,204,3.86,205,3.86,206,3.86,207,3.86,208,3.86,209,3.028,210,2.587,211,3.028,212,3.028,213,2.587,214,2.587,215,3.028,216,4.349,217,5.089,218,2.738,219,2.587,220,2.297,221,3.028,222,3.028,223,2.738,224,3.028,225,3.028,226,3.028,227,3.028,228,3.028,229,3.028,230,2.587,231,3.028,232,3.028,233,3.028,234,3.028,235,3.028,236,3.028,237,2.587]],["title/interfaces/AuthContext.html",[238,1.263,239,2.082]],["body/interfaces/AuthContext.html",[3,0.22,4,0.192,5,0.192,7,0.34,8,1.298,9,1.464,12,0.509,13,0.021,14,1.241,19,1.417,25,1.499,33,0.324,44,0.337,51,0.012,52,0.015,53,0.012,142,2.412,153,2.243,238,2.241,239,3.138,240,2.243,241,2.61,242,2.261,243,3.029,244,2.758,245,3.395,246,4.117,247,1.639,248,2.095,249,2.847,250,2.412,251,2.847,252,2.847,253,2.847,254,2.847]],["title/modules/AuthModule.html",[54,1.195,204,2.252]],["body/modules/AuthModule.html",[0,0.031,3,0.201,4,0.175,5,0.175,13,0.021,25,0.86,33,0.415,44,0.201,51,0.011,52,0.015,53,0.011,54,1.912,56,1.681,57,1.789,58,2.043,59,2.043,60,1.789,61,3.097,62,2.043,66,2.743,67,2.043,68,2.043,70,0.684,74,2.377,75,1.333,77,1.583,83,2.043,204,4.296,219,3.226,237,3.226,255,3.226,256,3.226,257,3.321,258,4.137,259,3.776,260,2.864,261,3.482,262,3.776,263,5.071,264,2.197,265,3.776,266,2.197,267,3.776,268,3.192,269,3.226,270,3.776]],["title/classes/AuthResolver.html",[0,0.029,261,2.457]],["body/classes/AuthResolver.html",[0,0.019,2,0.799,3,0.12,4,0.105,5,0.105,7,0.186,9,0.799,10,1.185,12,0.64,13,0.021,15,1.224,17,0.888,19,1.185,25,1.499,33,0.366,37,0.756,44,0.12,49,1.424,51,0.006,52,0.01,53,0.006,70,0.41,77,0.948,88,1.224,94,1.235,96,2.551,104,0.895,108,1.944,109,1.646,113,1.7,116,2.989,131,1.933,133,3.655,134,2.654,135,2.989,144,1.007,145,0.895,149,2.018,150,2.162,152,1.441,157,1.716,244,2.018,247,2.058,248,1.768,257,2.781,260,1.716,261,2.403,271,1.933,272,2.403,273,2.989,274,3.499,275,1.933,276,2.263,277,2.263,278,4.278,279,2.263,280,2.263,281,3.202,282,2.263,283,2.801,284,2.263,285,2.263,286,2.263,287,2.263,288,3.031,289,2.263,290,3.655,291,2.263,292,2.263,293,1.424,294,1.424,295,1.716,296,2.403,297,2.263,298,1.424,299,1.424,300,2.263,301,1.716,302,1.716,303,2.263,304,1.933,305,2.263,306,3.499,307,2.263,308,2.263,309,2.263,310,3.499,311,2.263,312,2.263,313,2.263,314,2.263,315,2.263,316,2.263,317,1.554,318,2.263,319,3.499,320,2.263,321,2.263,322,1.424,323,1.716,324,2.263,325,2.263,326,1.933,327,2.263,328,2.263,329,1.143,330,2.263,331,1.933,332,2.263,333,2.263,334,2.263,335,3.499,336,2.263,337,2.263,338,1.424,339,2.263,340,2.263]],["title/injectables/AuthService.html",[184,0.728,257,1.808]],["body/injectables/AuthService.html",[0,0.017,3,0.109,4,0.095,5,0.095,7,0.169,8,0.782,9,1.148,10,1.134,12,0.726,13,0.021,15,0.524,17,0.945,19,1.273,25,1.205,33,0.345,42,0.917,44,0.109,51,0.006,52,0.009,53,0.006,70,0.373,75,0.727,77,0.863,88,2.179,94,1.148,96,2.477,104,1.285,108,1.859,109,1.574,113,1.615,145,2.191,147,1.198,149,1.363,150,2.312,152,1.37,180,1.414,184,0.661,185,0.814,187,4.213,189,3.439,192,2.897,197,2.046,199,1.296,200,1.041,238,0.727,244,1.917,247,1.969,248,1.643,257,1.643,266,1.198,281,2.897,283,3.079,293,1.296,294,1.296,298,1.296,322,2.535,323,2.466,341,1.562,342,3.251,343,3.441,344,3.441,345,3.441,346,1.562,347,4.734,348,2.06,349,2.777,350,2.897,351,2.516,352,2.06,353,1.562,354,1.414,355,2.166,356,2.06,357,2.06,358,2.06,359,3.251,360,2.06,361,2.06,362,3.141,363,2.06,364,2.06,365,2.06,366,2.466,367,3.441,368,3.908,369,3.441,370,1.76,371,2.233,372,2.777,373,2.777,374,2.777,375,2.777,376,1.76,377,1.76,378,1.76,379,1.76,380,1.76,381,1.76,382,2.777,383,1.76,384,1.76,385,4.254,386,1.76,387,1.76,388,1.76,389,1.562,390,1.76,391,1.76]],["title/interfaces/AuthUser.html",[238,1.263,244,1.499]],["body/interfaces/AuthUser.html",[3,0.211,4,0.184,5,0.184,7,0.325,8,1.261,9,2.203,12,0.721,13,0.021,14,1.756,19,1.503,25,1.193,33,0.315,44,0.332,51,0.011,52,0.015,53,0.011,142,2.308,153,2.146,238,2.203,239,2.308,240,2.146,241,2.497,242,1.663,243,2.648,244,2.616,245,3.298,246,4.029,247,2.467,248,3.154,249,2.724,250,2.308,251,2.724,252,2.724,253,2.724,254,2.724]],["title/interfaces/Context.html",[238,1.263,243,1.808]],["body/interfaces/Context.html",[3,0.213,4,0.186,5,0.186,7,0.329,8,1.27,9,1.416,12,0.648,13,0.021,14,1.201,19,1.402,25,1.483,33,0.317,44,0.333,51,0.011,52,0.015,53,0.011,142,2.333,153,3.191,238,2.212,239,2.333,240,2.17,241,2.524,242,1.681,243,2.981,244,2.729,245,3.945,246,4.05,247,1.585,248,2.026,249,4.304,250,2.333,251,2.754,252,2.754,253,2.754,254,2.754]],["title/classes/CreateAnimalInput.html",[0,0.029,115,2.252]],["body/classes/CreateAnimalInput.html",[0,0.042,2,1.347,3,0.203,4,0.177,5,0.177,7,0.313,8,1.229,10,1.31,12,0.827,13,0.021,14,1.84,15,1.562,17,1.048,19,1.099,29,4.66,33,0.346,34,3.034,37,1.274,44,0.203,51,0.011,52,0.015,53,0.011,76,2.62,115,3.214,132,3.506,272,3.952,392,5.472,393,2.894,394,5.754,395,3.816,396,3.816,397,3.816,398,3.816,399,3.214,400,3.816,401,3.816,402,3.872,403,3.816,404,3.816,405,2.402,406,3.816,407,3.816]],["title/classes/CreateProductDto.html",[0,0.029,408,2.457]],["body/classes/CreateProductDto.html",[0,0.045,2,1.498,3,0.225,4,0.197,5,0.197,7,0.348,8,1.317,10,1.38,12,0.672,13,0.021,14,1.639,15,1.392,17,0.933,19,1.179,33,0.329,44,0.225,51,0.012,52,0.016,53,0.012,180,3.759,329,2.766,405,2.67,408,3.759,409,3.624,410,5.663,411,4.242,412,5.474,413,4.242,414,4.242,415,4.242,416,5.474,417,4.242,418,6.061,419,2.913,420,5.474,421,5.474,422,4.242]],["title/classes/CreateUserDto.html",[0,0.029,423,2.713]],["body/classes/CreateUserDto.html",[0,0.039,2,1.693,3,0.255,4,0.222,5,0.222,7,0.394,8,1.424,10,1.461,12,0.727,13,0.02,14,1.771,17,1.008,19,1.274,44,0.255,51,0.014,52,0.017,53,0.014,145,2.769,272,4.404,423,4.486,424,4.098,425,4.797,426,4.797]],["title/injectables/DatabaseConfig.html",[184,0.728,218,2.252]],["body/injectables/DatabaseConfig.html",[0,0.042,3,0.208,4,0.181,5,0.181,7,0.321,10,0.89,12,0.48,13,0.021,17,0.885,33,0.373,44,0.276,51,0.011,52,0.015,53,0.011,70,0.708,75,1.38,94,1.832,104,1.546,108,1.46,109,1.236,113,1.38,144,2.31,152,1.554,184,1.185,185,1.546,189,4.002,200,1.976,218,3.267,266,2.275,268,2.462,346,2.966,427,2.966,428,5.301,429,3.91,430,3.91,431,4.434,432,4.434,433,4.434,434,3.341,435,3.341,436,3.341,437,3.341,438,3.341,439,3.341,440,3.341]],["title/interfaces/GlobalConfig.html",[223,2.252,238,1.263]],["body/interfaces/GlobalConfig.html",[3,0.191,4,0.166,5,0.166,7,0.295,8,1.18,12,0.796,13,0.021,14,1.67,19,1.516,33,0.216,44,0.191,51,0.01,52,0.014,53,0.01,75,1.268,91,2.261,118,2.181,149,1.505,223,3.773,238,1.268,240,1.943,355,1.701,441,2.724,442,5.36,443,5.36,444,5.36,445,5.36,446,4.447,447,5.994,448,4.187,449,3.717,450,3.068,451,2.724,452,3.068,453,3.068,454,3.068,455,3.068,456,2.724,457,2.466,458,3.068,459,3.068,460,3.068,461,3.068,462,3.068,463,3.068]],["title/injectables/GoogleStrategy.html",[184,0.728,464,2.713]],["body/injectables/GoogleStrategy.html",[0,0.03,3,0.193,4,0.168,5,0.168,7,0.298,10,1.124,12,0.446,13,0.021,17,0.841,19,1.398,33,0.337,44,0.193,51,0.01,52,0.014,53,0.01,70,0.657,94,1.742,96,2.35,104,2.217,108,1.354,109,1.147,113,1.28,149,1.52,152,1.086,184,1.004,185,1.434,242,1.52,247,1.951,264,2.11,273,3.099,283,2.871,351,2.834,464,3.742,465,3.099,466,4.215,467,3.627,468,4.934,469,5.608,470,6.296,471,3.627,472,4.934,473,3.099,474,4.215,475,2.751,476,3.099,477,3.099,478,3.099,479,3.627,480,3.627,481,3.627,482,3.627,483,3.627,484,3.627,485,3.627,486,2.491,487,3.627,488,3.627,489,3.627,490,3.627,491,3.627,492,3.627,493,3.627,494,3.627,495,3.627,496,3.627]],["title/controllers/HealthController.html",[497,1.694,498,2.457]],["body/controllers/HealthController.html",[0,0.035,3,0.229,4,0.2,5,0.2,7,0.353,13,0.021,15,1.095,17,0.735,33,0.367,44,0.229,51,0.012,52,0.016,53,0.012,70,0.78,94,1.952,113,1.521,144,1.918,147,3.217,152,1.29,189,3.552,200,2.177,451,3.267,497,2.041,498,3.797,499,2.041,500,3.681,501,3.267,502,5.529,503,6.441,504,4.308,505,4.308,506,5.529,507,5.529,508,5.529,509,3.267,510,4.308,511,4.308,512,4.308,513,4.308,514,4.308]],["title/modules/HealthModule.html",[54,1.195,205,2.252]],["body/modules/HealthModule.html",[0,0.04,3,0.261,4,0.227,5,0.227,13,0.021,33,0.389,44,0.261,51,0.014,52,0.017,53,0.014,54,2.003,56,2.182,70,0.888,83,2.653,205,3.774,498,4.448,499,2.84,509,3.719,515,4.903,516,4.903,517,5.996]],["title/interfaces/IVerifyPassword.html",[238,1.263,362,2.457]],["body/interfaces/IVerifyPassword.html",[0,0.022,3,0.14,4,0.122,5,0.122,7,0.217,8,0.948,9,1.39,12,0.484,13,0.021,19,1.394,25,0.897,33,0.374,42,1.176,44,0.14,51,0.008,52,0.011,53,0.008,70,0.479,75,0.933,77,1.108,88,2.546,96,1.972,104,1.045,145,1.86,147,1.538,149,1.65,150,2.635,152,1.561,180,1.815,184,0.801,187,3.679,189,2.738,192,2.291,197,1.664,199,1.664,200,1.336,238,0.933,240,1.43,244,1.65,247,2.204,248,1.99,257,1.336,266,1.538,281,3.033,283,2.738,293,1.664,294,1.664,298,1.664,322,2.962,323,2.986,341,2.004,343,2.258,344,2.258,345,2.258,347,4.02,349,2.258,350,2.738,351,2.378,355,1.865,362,3.231,366,2.986,367,4.994,368,5.173,369,4.02,370,2.258,371,2.704,372,3.364,373,3.364,374,3.364,375,3.364,376,2.258,377,2.258,378,2.258,379,2.258,380,2.258,381,2.258,382,3.364,383,2.258,384,2.258,385,4.763,386,2.258,387,2.258,388,2.258,389,2.004,390,2.258,391,2.258]],["title/injectables/JWTConfig.html",[184,0.728,268,2.252]],["body/injectables/JWTConfig.html",[0,0.042,3,0.202,4,0.176,5,0.176,7,0.312,10,0.866,12,0.467,13,0.021,17,0.868,19,0.819,33,0.369,44,0.271,51,0.011,52,0.015,53,0.011,70,0.688,75,1.342,94,1.798,104,1.503,108,1.42,109,1.202,113,1.342,144,2.267,152,1.525,184,1.169,185,1.503,189,3.977,200,1.921,218,2.394,266,2.212,268,3.207,346,2.884,427,2.884,428,3.249,431,4.352,432,4.352,433,4.352,434,5.242,435,4.352,436,4.352,437,3.249,438,4.352,439,3.249,440,3.249,518,3.802,519,3.802]],["title/injectables/JwtAuth.html",[184,0.728,520,2.082]],["body/injectables/JwtAuth.html",[0,0.047,3,0.244,4,0.213,5,0.213,13,0.021,33,0.378,37,1.535,44,0.306,51,0.013,52,0.017,53,0.013,70,0.832,149,1.926,152,1.376,184,1.28,185,1.817,242,2.414,264,2.674,299,2.893,520,3.352,521,3.486,522,3.486,523,4.369,524,3.927,525,3.927,526,4.921,527,3.927,528,3.486,529,3.486,530,3.927]],["title/injectables/JwtAuthGraphQL.html",[184,0.728,299,2.252]],["body/injectables/JwtAuthGraphQL.html",[0,0.045,3,0.226,4,0.197,5,0.197,7,0.349,10,0.97,12,0.523,13,0.021,17,0.726,33,0.365,37,1.422,44,0.292,51,0.012,52,0.016,53,0.012,70,0.771,94,1.937,108,1.59,109,1.346,113,1.503,149,1.785,152,1.275,184,1.235,185,1.684,242,2.3,243,2.152,264,2.478,299,3.454,520,2.478,521,4.162,522,3.229,523,4.864,524,3.638,525,3.638,526,4.688,527,4.688,528,3.229,529,3.229,530,3.638,531,5.488,532,4.258]],["title/injectables/JwtStrategy.html",[184,0.728,258,2.252]],["body/injectables/JwtStrategy.html",[0,0.029,3,0.191,4,0.166,5,0.166,7,0.295,9,1.268,10,1.116,12,0.602,13,0.021,17,0.836,25,1.116,33,0.377,44,0.191,51,0.01,52,0.014,53,0.01,70,0.65,88,1.943,94,1.73,96,2.338,104,1.42,108,1.83,109,1.55,113,1.268,144,1.598,145,1.42,149,1.505,150,1.815,152,1.075,166,3.068,184,0.997,185,1.42,242,1.505,244,2.512,247,1.42,248,1.815,257,3.272,258,3.085,260,2.724,264,2.09,275,3.068,293,2.261,294,2.261,298,2.261,322,2.261,338,2.261,355,1.701,456,2.724,466,4.187,473,3.068,474,3.068,475,2.724,477,3.068,478,3.068,533,3.068,534,3.592,535,4.901,536,3.592,537,3.592,538,3.068,539,3.592,540,3.592,541,3.592,542,3.592,543,3.592,544,3.592,545,3.592,546,3.592,547,3.592,548,3.592]],["title/classes/LoginResponse.html",[0,0.029,296,2.457]],["body/classes/LoginResponse.html",[0,0.035,2,1.521,3,0.229,4,0.2,5,0.2,7,0.353,8,1.331,12,0.679,13,0.021,15,1.406,17,0.943,19,1.19,25,1.552,33,0.332,34,2.892,35,3.48,37,1.439,44,0.229,51,0.012,52,0.016,53,0.012,77,1.806,109,2.037,117,3.48,118,2.867,296,3.797,338,3.843,549,3.681,550,4.193,551,4.308,552,4.308]],["title/controllers/MicroController.html",[497,1.694,553,2.457]],["body/controllers/MicroController.html",[0,0.037,3,0.242,4,0.211,5,0.211,7,0.374,13,0.021,15,1.159,17,0.777,33,0.344,44,0.242,51,0.013,52,0.016,53,0.013,70,0.825,94,2.023,96,2.627,100,3.391,113,1.609,144,2.029,145,1.802,152,1.365,497,2.159,499,2.159,501,3.457,553,3.935,554,3.894,555,4.558,556,6.576,557,4.558,558,3.894,559,4.558,560,4.558]],["title/modules/MicroModule.html",[54,1.195,206,2.252]],["body/modules/MicroModule.html",[0,0.033,3,0.215,4,0.188,5,0.188,10,0.923,13,0.021,33,0.378,44,0.215,51,0.012,52,0.015,53,0.012,54,1.981,56,1.805,57,1.92,58,2.194,59,2.194,60,1.92,61,3.208,62,2.194,66,2.876,67,2.194,68,2.194,70,0.734,83,2.194,91,2.552,100,3.628,206,4.221,446,2.784,457,2.784,499,2.517,553,4.072,558,3.464,561,3.464,562,3.464,563,4.055,564,4.055,565,5.315,566,3.075,567,4.055,568,4.055,569,4.055,570,4.055,571,4.055]],["title/injectables/MicroService.html",[100,1.936,184,0.728]],["body/injectables/MicroService.html",[0,0.036,3,0.233,4,0.203,5,0.203,7,0.359,10,0.997,12,0.538,13,0.021,17,0.952,33,0.336,44,0.233,51,0.013,52,0.016,53,0.013,70,0.792,94,1.972,96,2.578,100,3.022,104,1.73,108,1.634,109,1.384,113,1.545,143,3.319,147,2.547,152,1.31,178,4.771,184,1.136,185,1.73,566,3.319,572,3.739,573,6.479,574,4.377,575,6.479,576,4.377,577,4.377,578,4.377,579,4.377,580,4.377]],["title/classes/Product.html",[0,0.029,581,1.936]],["body/classes/Product.html",[0,0.029,2,1.256,3,0.189,4,0.165,5,0.165,7,0.292,8,1.172,9,2.207,10,1.359,12,0.768,13,0.021,14,1.787,15,1.518,16,2.697,17,1.018,19,1.048,20,3.039,21,4.159,22,3.692,25,1.555,26,3.039,27,2.442,33,0.334,34,2.961,35,3.065,37,1.188,38,4.21,39,3.692,40,4.159,41,3.692,42,1.583,43,3.039,44,0.189,51,0.01,52,0.014,53,0.01,242,2.041,317,2.442,410,4.743,581,2.634,582,3.039,583,4.743,584,3.557,585,4.159,586,3.557,587,3.557,588,3.557,589,3.557,590,3.557]],["title/controllers/ProductsController.html",[497,1.694,591,2.457]],["body/controllers/ProductsController.html",[0,0.017,3,0.108,4,0.094,5,0.094,7,0.166,9,1.943,10,1.254,12,0.676,13,0.021,14,1.872,15,1.4,17,0.939,19,1.266,25,1.032,33,0.343,44,0.108,51,0.006,52,0.009,53,0.006,70,0.367,88,2.156,94,1.133,96,2.723,99,2.741,108,2.056,109,1.741,113,1.943,118,1.428,122,1.73,134,1.536,144,0.901,145,0.801,149,1.345,150,2.29,152,1.648,244,1.899,245,1.275,283,2.637,293,1.275,294,1.275,295,1.536,298,1.275,301,1.536,304,1.73,322,2.508,326,1.73,331,1.73,354,3.112,389,1.536,408,3.781,419,1.391,497,1.52,499,0.959,520,1.178,581,2.843,591,2.203,592,1.73,593,3.208,594,3.208,595,3.208,596,3.208,597,2.741,598,2.741,599,2.025,600,2.025,601,2.025,602,2.025,603,2.025,604,2.025,605,2.025,606,2.025,607,2.025,608,3.208,609,2.025,610,2.025,611,3.208,612,2.025,613,3.984,614,1.73,615,3.208,616,2.025,617,3.872,618,1.73,619,3.208,620,2.025,621,2.025,622,2.025,623,2.025,624,4.94,625,2.025,626,2.025,627,2.318,628,1.73,629,2.025,630,1.536,631,1.73,632,1.73,633,1.73,634,2.433,635,2.025,636,2.025,637,2.025,638,2.025,639,2.025,640,2.025,641,2.025,642,2.025,643,2.025,644,2.025,645,2.025,646,2.025,647,3.208,648,2.741,649,3.208,650,3.404,651,2.025,652,3.404,653,2.025,654,2.025,655,2.025,656,2.025,657,2.025,658,2.025,659,2.025,660,1.73,661,2.025,662,2.025,663,2.025,664,2.025,665,2.025,666,2.025]],["title/modules/ProductsModule.html",[54,1.195,207,2.252]],["body/modules/ProductsModule.html",[0,0.032,3,0.206,4,0.18,5,0.18,13,0.021,25,1.176,33,0.406,44,0.206,51,0.011,52,0.015,53,0.011,54,1.939,56,1.728,57,1.839,58,2.101,59,2.101,60,1.839,61,3.141,62,2.101,66,2.795,67,2.101,68,2.101,70,0.703,74,2.444,75,1.371,77,1.627,80,2.945,83,2.101,91,2.444,207,4.17,446,2.666,457,2.666,499,2.447,581,2.101,591,3.986,627,3.855,628,3.317,630,2.945,667,3.317,668,3.317,669,3.883,670,3.883,671,3.883,672,5.166,673,2.945,674,2.945,675,4.413,676,3.883,677,3.883]],["title/injectables/ProductsService.html",[184,0.728,627,2.082]],["body/injectables/ProductsService.html",[0,0.022,3,0.146,4,0.127,5,0.127,7,0.225,8,0.974,10,1.095,12,0.695,13,0.021,14,1.439,15,1.029,17,0.965,19,1.382,25,0.624,33,0.356,42,1.22,44,0.146,51,0.008,52,0.012,53,0.008,70,0.496,75,0.968,77,1.149,94,1.428,96,2.483,104,1.599,108,1.795,109,1.52,113,1.428,118,1.22,143,2.079,145,2.422,147,1.595,150,1.385,152,1.589,184,0.823,185,1.084,187,3.729,190,4.293,192,3.736,197,2.547,199,1.726,283,3.088,354,3.645,355,1.299,581,1.483,597,3.456,598,3.456,614,3.456,617,4.535,618,3.456,627,2.354,630,2.079,648,2.342,673,4.769,674,2.079,678,2.342,679,5.308,680,2.742,681,2.742,682,2.742,683,5.308,684,2.742,685,4.046,686,2.742,687,2.742,688,2.742,689,2.742,690,4.046,691,2.742,692,4.046,693,4.046,694,3.456,695,2.742,696,2.742]],["title/classes/RegisterArgs.html",[0,0.029,288,2.252]],["body/classes/RegisterArgs.html",[0,0.041,2,1.052,3,0.158,4,0.138,5,0.138,7,0.244,8,1.035,10,1.257,12,0.749,13,0.021,15,1.488,17,0.998,19,1.433,31,2.259,33,0.258,34,3.048,36,2.259,37,0.995,44,0.268,51,0.009,52,0.012,53,0.009,109,0.942,117,3.957,118,2.457,153,2.326,247,1.994,281,2.934,288,2.706,329,2.958,338,1.875,350,2.934,351,2.548,355,2.888,371,2.046,399,1.875,402,3.26,405,1.875,550,4.187,697,2.046,698,3.824,699,3.26,700,2.979,701,2.979,702,2.979,703,2.979,704,2.979,705,2.979,706,3.26,707,3.672,708,3.824,709,2.545,710,2.545,711,3.672,712,2.545,713,2.545,714,2.545,715,2.545,716,2.545,717,2.545,718,2.545,719,2.545,720,2.545,721,2.545,722,2.545,723,2.545,724,2.545,725,2.046]],["title/classes/SocialRegisterInput.html",[0,0.029,725,2.457]],["body/classes/SocialRegisterInput.html",[0,0.044,2,1.169,3,0.176,4,0.153,5,0.153,7,0.272,8,1.115,10,1.055,12,0.749,13,0.021,15,1.178,17,0.79,19,1.396,31,2.511,33,0.278,34,3.133,36,2.511,37,1.106,44,0.284,51,0.009,52,0.013,53,0.009,109,1.047,117,3.975,118,2.062,153,1.791,247,1.309,281,1.926,288,2.084,329,2.701,338,3.364,350,3.11,351,2.701,355,2.886,371,2.273,399,2.084,402,3.514,405,2.084,550,2.511,697,2.273,698,2.511,699,2.511,706,3.514,707,3.958,708,4.39,709,2.828,710,2.828,711,3.958,712,2.828,713,2.828,714,2.828,715,2.828,716,2.828,717,2.828,718,2.828,719,2.828,720,2.828,721,2.828,722,2.828,723,2.828,724,2.828,725,3.182,726,3.311,727,3.311]],["title/classes/Todo.html",[0,0.029,486,2.457]],["body/classes/Todo.html",[0,0.038,2,1.629,3,0.245,4,0.214,5,0.214,7,0.379,8,1.39,12,0.567,13,0.021,14,1.729,15,1.174,17,0.787,33,0.277,34,3.128,35,3.636,37,1.542,44,0.245,51,0.013,52,0.017,53,0.013,132,3.966,329,2.919,399,2.905,486,3.966,728,3.943,729,6.304,730,5.776,731,5.776,732,4.616]],["title/classes/UpdateAnimalInput.html",[0,0.029,129,2.457]],["body/classes/UpdateAnimalInput.html",[0,0.038,2,1.623,3,0.244,4,0.213,5,0.213,7,0.377,8,1.386,9,2.221,12,0.565,13,0.021,14,1.725,15,1.169,17,0.784,33,0.346,34,2.728,37,1.535,44,0.244,51,0.013,52,0.017,53,0.013,115,2.893,129,3.956,132,3.956,138,3.927,242,1.926,393,3.486,399,2.893,660,3.927,706,4.369,733,4.921,734,4.596,735,4.596,736,4.596]],["title/interfaces/Upload.html",[238,1.263,250,2.082]],["body/interfaces/Upload.html",[3,0.206,4,0.179,5,0.179,7,0.317,8,1.24,9,1.366,12,0.759,13,0.021,14,1.158,19,1.523,25,1.174,33,0.31,44,0.328,51,0.011,52,0.015,53,0.011,142,2.251,153,2.093,238,2.181,239,2.251,240,2.093,241,2.436,242,1.622,243,2.604,244,2.429,245,3.244,246,3.979,247,1.53,248,1.955,249,2.657,250,2.999,251,4.243,252,4.243,253,4.243,254,4.243,737,4.403]],["title/classes/User.html",[0,0.029,25,0.815]],["body/classes/User.html",[0,0.017,1,2.694,2,0.727,3,0.109,4,0.095,5,0.095,7,0.169,8,0.782,9,1.758,10,1.042,12,0.758,13,0.021,14,1.37,15,1.57,16,1.562,17,1.053,19,1.273,22,3.469,23,2.777,25,0.917,27,2.233,33,0.345,34,3.118,35,2.046,37,0.688,38,4.59,39,2.466,41,2.466,42,0.917,44,0.109,49,2.535,51,0.006,52,0.009,53,0.006,117,2.879,118,1.447,168,3.908,242,1.363,247,1.592,272,2.766,281,2.344,317,2.766,329,2.312,350,2.344,351,2.035,353,3.055,355,2.72,581,2.694,583,3.441,585,2.777,698,3.055,699,2.466,738,1.76,739,2.06,740,3.251,741,2.06,742,2.06,743,2.06,744,2.777,745,2.06,746,3.251,747,3.251,748,2.06,749,3.251,750,2.06,751,2.06,752,2.06,753,2.06,754,2.06,755,2.06,756,5.911,757,2.06,758,2.06,759,4.734,760,2.06,761,4.98,762,4.98,763,2.06,764,4.98,765,2.06,766,2.777,767,2.06,768,2.06,769,2.06,770,3.251,771,3.251,772,2.06,773,3.251,774,3.251,775,2.06,776,2.06,777,2.06,778,2.06,779,3.251,780,2.06,781,2.06,782,2.06,783,2.06]],["title/controllers/UsersController.html",[497,1.694,784,2.457]],["body/controllers/UsersController.html",[0,0.032,3,0.209,4,0.183,5,0.183,7,0.323,13,0.021,15,1.001,17,0.671,33,0.374,44,0.209,49,2.479,51,0.011,52,0.015,53,0.011,70,0.713,94,1.841,96,2.45,113,1.39,144,1.753,145,1.557,150,1.99,152,1.179,157,2.987,295,2.987,301,2.987,317,2.705,329,2.635,419,2.705,497,1.865,499,1.865,501,2.987,520,2.292,631,3.365,632,3.365,633,3.365,650,3.365,652,3.365,766,4.455,784,3.581,785,3.365,786,6.223,787,3.938,788,3.938,789,5.215,790,3.938,791,3.938,792,3.401,793,3.365,794,5.215,795,5.215,796,3.938,797,3.938,798,3.938,799,3.938,800,3.938,801,3.938]],["title/modules/UsersModule.html",[54,1.195,208,2.252]],["body/modules/UsersModule.html",[0,0.033,3,0.215,4,0.187,5,0.187,13,0.021,25,0.92,33,0.392,44,0.215,51,0.012,52,0.015,53,0.012,54,1.977,56,1.798,57,1.913,58,2.186,59,2.186,60,1.913,61,3.203,62,3.203,66,2.869,67,2.186,68,2.186,70,0.731,74,2.543,75,1.426,77,1.693,83,2.186,208,4.298,269,3.451,499,2.511,784,4.065,792,4.172,793,3.451,802,3.451,803,3.451,804,3.451,805,4.04,806,5.303,807,4.04]],["title/injectables/UsersService.html",[184,0.728,792,2.082]],["body/injectables/UsersService.html",[0,0.035,3,0.225,4,0.196,5,0.196,7,0.347,8,1.314,10,0.962,12,0.671,13,0.021,15,1.074,17,0.931,25,0.962,33,0.384,42,1.881,44,0.225,51,0.012,52,0.016,53,0.012,70,0.765,75,1.492,77,1.771,104,2.159,108,1.578,109,1.336,145,2.392,184,1.111,185,1.671,187,3.808,190,4.849,192,3.852,197,3.437,199,2.66,792,3.177,808,3.61,809,4.226,810,4.226,811,4.226]],["title/coverage.html",[812,3.707]],["body/coverage.html",[0,0.054,1,1.328,5,0.114,6,1.861,12,0.302,13,0.021,25,0.559,51,0.007,52,0.011,53,0.007,60,1.162,65,1.428,72,1.685,88,1.328,93,2.097,100,1.328,115,1.545,129,1.685,184,1.313,186,2.097,218,1.545,220,1.861,223,2.344,230,2.097,238,2.007,239,1.428,241,3.162,243,1.24,244,1.029,250,1.428,257,1.24,258,1.545,261,1.685,268,1.545,271,2.097,288,1.545,296,1.685,299,1.545,302,1.861,341,2.824,362,1.685,392,2.097,393,2.824,408,1.685,409,2.097,423,1.861,424,2.097,427,2.824,441,2.824,464,1.861,465,2.097,486,1.685,497,2.379,498,1.685,500,2.097,520,1.428,521,2.824,522,2.824,533,2.097,549,2.097,553,1.685,554,2.097,572,2.097,581,1.328,582,2.097,591,1.685,592,2.097,627,1.428,634,1.861,678,2.097,697,2.557,725,1.685,728,2.097,733,2.097,737,2.097,738,2.097,784,1.685,785,2.097,792,1.428,808,2.097,812,1.861,813,2.454,814,2.454,815,3.182,816,3.182,817,5.4,818,7.322,819,5.906,820,2.097,821,5.023,822,6.545,823,5.4,824,5.906,825,2.454,826,2.097,827,2.454,828,3.724,829,3.182,830,3.182,831,2.454,832,2.454,833,2.454]],["title/dependencies.html",[57,2.039,834,2.985]],["body/dependencies.html",[0,0.04,13,0.021,37,1.184,42,1.578,51,0.01,52,0.014,53,0.01,57,1.679,70,0.642,75,1.252,79,4.203,80,4.203,81,3.029,82,3.029,140,3.029,141,2.689,142,3.225,200,1.792,213,3.029,214,3.029,264,2.063,266,2.063,351,1.792,366,2.689,405,2.232,419,2.435,475,4.203,476,3.029,509,2.689,538,3.029,566,2.689,673,3.684,674,3.684,675,3.029,835,5.542,836,3.545,837,3.545,838,3.545,839,3.545,840,3.545,841,4.858,842,3.545,843,3.545,844,3.545,845,3.545,846,3.545,847,3.545,848,3.545,849,4.858,850,3.545,851,3.545,852,3.545,853,3.545,854,3.545,855,3.545,856,3.545,857,3.545,858,3.545,859,4.858,860,3.545,861,3.545,862,3.545,863,4.858,864,3.545,865,3.545,866,3.545,867,3.545,868,3.545,869,3.545,870,3.545,871,3.545,872,3.545,873,3.545]],["title/miscellaneous/enumerations.html",[874,1.737,875,3.677]],["body/miscellaneous/enumerations.html",[6,4.023,7,0.435,13,0.018,29,4.768,45,4.532,46,4.532,47,4.532,51,0.015,52,0.018,53,0.015,350,3.087,351,2.681,697,3.643,708,4.768,874,3.087,875,4.532,876,5.305,877,5.305]],["title/miscellaneous/functions.html",[874,1.737,878,3.677]],["body/miscellaneous/functions.html",[7,0.453,13,0.018,51,0.016,52,0.018,53,0.016,60,3.226,826,4.714,874,3.21,878,4.714,879,5.518]],["title/index.html",[7,0.245,880,2.985,881,2.985]],["body/index.html",[4,0.18,13,0.021,51,0.011,52,0.015,53,0.011,141,2.945,192,2.259,210,3.317,329,1.962,449,2.945,812,2.945,882,3.883,883,3.883,884,5.166,885,3.883,886,3.883,887,3.883,888,3.883,889,3.883,890,5.805,891,3.883,892,3.883,893,3.883,894,6.761,895,3.883,896,3.883,897,3.883,898,6.625,899,3.883,900,3.883,901,5.166,902,3.883,903,3.883,904,3.883,905,5.166,906,5.166,907,3.883,908,3.883,909,3.883,910,5.166,911,5.166,912,3.883,913,3.883,914,3.883,915,3.883,916,3.883,917,3.317,918,3.883,919,3.883,920,3.883,921,3.883,922,3.883,923,3.883,924,3.883,925,3.883,926,3.883,927,3.883,928,3.883,929,3.883,930,3.883,931,3.883,932,3.883,933,3.883,934,3.883]],["title/modules.html",[56,2.176]],["body/modules.html",[13,0.017,51,0.014,52,0.017,53,0.014,55,3.059,56,2.163,201,3.337,204,3.059,205,3.059,206,3.059,207,3.059,208,3.059,917,6.003,935,7.027,936,7.027,937,7.117,938,4.86,939,4.86]],["title/overview.html",[940,4.176]],["body/overview.html",[2,1.268,13,0.021,51,0.01,52,0.014,53,0.01,54,1.2,55,3.949,56,1.598,57,1.701,58,1.943,59,1.943,60,1.701,61,1.943,62,1.943,63,3.068,64,3.068,65,3.246,66,2.652,67,1.943,68,1.943,100,3.019,185,1.42,201,4.896,202,3.068,203,3.068,204,4.172,205,3.512,206,3.949,207,3.949,208,4.076,240,1.943,255,3.068,256,3.068,257,2.819,258,3.512,499,1.701,561,3.068,562,3.068,627,3.246,667,3.068,668,3.068,792,3.856,802,3.068,803,3.068,804,3.068,940,3.068,941,3.592,942,3.592,943,3.592,944,3.592,945,3.592]],["title/miscellaneous/variables.html",[874,1.737,946,3.677]],["body/miscellaneous/variables.html",[7,0.251,12,0.538,13,0.021,14,0.914,19,1.101,51,0.009,52,0.013,53,0.009,91,1.922,118,2.63,149,1.834,152,1.769,220,3.318,223,3.218,243,2.211,290,3.738,302,3.318,353,4.482,354,4.059,355,1.446,441,2.316,442,2.609,443,2.609,444,2.609,445,2.609,446,3.005,448,3.738,449,3.318,450,2.609,451,2.316,452,2.609,453,2.609,454,2.609,455,2.609,456,2.316,457,2.097,458,2.609,459,2.609,460,2.609,461,2.609,462,2.609,463,2.609,523,3.318,528,2.316,529,2.316,634,3.318,694,3.738,744,2.609,759,3.738,815,2.609,816,4.368,820,3.738,829,2.609,830,4.368,874,1.777,946,2.609,947,4.375,948,4.375,949,3.054,950,3.054,951,3.054,952,3.054,953,3.054,954,3.054,955,3.054,956,3.054,957,3.054,958,3.054,959,3.054,960,3.054,961,4.375,962,4.375,963,3.054,964,3.054,965,3.054,966,3.054,967,3.054,968,3.054,969,4.375,970,3.054,971,3.054]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":389,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"controllers/ProductsController.html":{}}}],["100",{"_index":23,"title":{},"body":{"classes/Animal.html":{},"classes/User.html":{}}}],["1000",{"_index":309,"title":{},"body":{"classes/AuthResolver.html":{}}}],["10000",{"_index":644,"title":{},"body":{"controllers/ProductsController.html":{}}}],["11",{"_index":943,"title":{},"body":{"overview.html":{}}}],["13",{"_index":944,"title":{},"body":{"overview.html":{}}}],["15.4.0",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["150",{"_index":585,"title":{},"body":{"classes/Product.html":{},"classes/User.html":{}}}],["1h",{"_index":437,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["2.0.0",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["2.1.4",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["2.19.0",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":789,"title":{},"body":{"controllers/UsersController.html":{}}}],["22",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":311,"title":{},"body":{"classes/AuthResolver.html":{}}}],["3.0.2",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["3.4.0",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":455,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["365.25",{"_index":313,"title":{},"body":{"classes/AuthResolver.html":{}}}],["4",{"_index":942,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["4.19.4",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":744,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":945,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":310,"title":{},"body":{"classes/AuthResolver.html":{}}}],["7",{"_index":941,"title":{},"body":{"overview.html":{}}}],["7.0.1",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["7.6.5",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["7.9.1",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["a.owner",{"_index":769,"title":{},"body":{"classes/User.html":{}}}],["accesstoken",{"_index":472,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["actual",{"_index":416,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["admin",{"_index":337,"title":{},"body":{"classes/AuthResolver.html":{}}}],["age",{"_index":272,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["age(@root",{"_index":305,"title":{},"body":{"classes/AuthResolver.html":{}}}],["age(user",{"_index":277,"title":{},"body":{"classes/AuthResolver.html":{}}}],["amazing",{"_index":918,"title":{},"body":{"index.html":{}}}],["animal",{"_index":1,"title":{"classes/Animal.html":{}},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/User.html":{},"coverage.html":{}}}],["animal.entity",{"_index":758,"title":{},"body":{"classes/User.html":{}}}],["animal.input",{"_index":138,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/UpdateAnimalInput.html":{}}}],["animal.input.ts",{"_index":393,"title":{},"body":{"classes/CreateAnimalInput.html":{},"classes/UpdateAnimalInput.html":{},"coverage.html":{}}}],["animal.input.ts:13",{"_index":396,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["animal.input.ts:16",{"_index":401,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["animal.input.ts:19",{"_index":400,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["animal.input.ts:7",{"_index":734,"title":{},"body":{"classes/UpdateAnimalInput.html":{}}}],["animal.input.ts:9",{"_index":398,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["animal_type",{"_index":29,"title":{},"body":{"classes/Animal.html":{},"classes/CreateAnimalInput.html":{},"miscellaneous/enumerations.html":{}}}],["animaladded",{"_index":95,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["animalrepo",{"_index":188,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animals",{"_index":49,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["animals.resolver",{"_index":73,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["animals.service",{"_index":71,"title":{},"body":{"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{}}}],["animalsmodule",{"_index":55,"title":{"modules/AnimalsModule.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["animalsresolver",{"_index":72,"title":{"classes/AnimalsResolver.html":{}},"body":{"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"coverage.html":{}}}],["animalsservice",{"_index":65,"title":{"injectables/AnimalsService.html":{}},"body":{"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"coverage.html":{},"overview.html":{}}}],["api",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["api.herokuapp.com",{"_index":452,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":631,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth('bearerjwt",{"_index":652,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":794,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":418,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apiproperty({description",{"_index":411,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apiresponse",{"_index":795,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":632,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apitags('products",{"_index":636,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apitags('users",{"_index":796,"title":{},"body":{"controllers/UsersController.html":{}}}],["aplicacion",{"_index":722,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["apollo",{"_index":140,"title":{},"body":{"classes/AnimalsResolver.html":{},"dependencies.html":{}}}],["apolloconfig",{"_index":220,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":896,"title":{},"body":{"index.html":{}}}],["applications",{"_index":889,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":201,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":715,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["args",{"_index":131,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{}}}],["args('password",{"_index":333,"title":{},"body":{"classes/AuthResolver.html":{}}}],["argstype",{"_index":402,"title":{},"body":{"classes/CreateAnimalInput.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["array.isarray(data",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":96,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/MicroController.html":{},"injectables/MicroService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{}}}],["auth",{"_index":714,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["auth.guard",{"_index":301,"title":{},"body":{"classes/AuthResolver.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":522,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"coverage.html":{}}}],["auth.guard.ts:10",{"_index":532,"title":{},"body":{"injectables/JwtAuthGraphQL.html":{}}}],["auth.resolver",{"_index":262,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":260,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/JwtStrategy.html":{}}}],["auth/decorators/current",{"_index":635,"title":{},"body":{"controllers/ProductsController.html":{}}}],["auth/guards/jwt",{"_index":633,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["auth_apps",{"_index":708,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"miscellaneous/enumerations.html":{}}}],["authcontext",{"_index":239,"title":{"interfaces/AuthContext.html":{}},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["authguard",{"_index":524,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{}}}],["authguard('jwt",{"_index":526,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{}}}],["authmodule",{"_index":204,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":927,"title":{},"body":{"index.html":{}}}],["authresolver",{"_index":261,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":257,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authuser",{"_index":244,"title":{"interfaces/AuthUser.html":{}},"body":{"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["autoloadentities",{"_index":462,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["autoschemafile",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":939,"title":{},"body":{"modules.html":{}}}],["await",{"_index":150,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{}}}],["backers",{"_index":919,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":583,"title":{},"body":{"classes/Product.html":{},"classes/User.html":{}}}],["bcrypt",{"_index":366,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"dependencies.html":{}}}],["bcrypt.compare(inputpassword",{"_index":390,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["bcrypt.hash(finalpass",{"_index":388,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["body",{"_index":621,"title":{},"body":{"controllers/ProductsController.html":{}}}],["boolean",{"_index":168,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["borndate",{"_index":698,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{}}}],["bro",{"_index":658,"title":{},"body":{"controllers/ProductsController.html":{}}}],["browse",{"_index":937,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":935,"title":{},"body":{"modules.html":{}}}],["building",{"_index":885,"title":{},"body":{"index.html":{}}}],["cache",{"_index":673,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":688,"title":{},"body":{"injectables/ProductsService.html":{}}}],["cachemodule",{"_index":670,"title":{},"body":{"modules/ProductsModule.html":{}}}],["cachemodule.register",{"_index":677,"title":{},"body":{"modules/ProductsModule.html":{}}}],["callbackurl",{"_index":483,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["cat",{"_index":45,"title":{},"body":{"classes/Animal.html":{},"miscellaneous/enumerations.html":{}}}],["catch",{"_index":692,"title":{},"body":{"injectables/ProductsService.html":{}}}],["check",{"_index":503,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":0,"title":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{}},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{},"overview.html":{}}}],["client",{"_index":178,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/MicroService.html":{}}}],["clientid",{"_index":479,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["clientproxy",{"_index":575,"title":{},"body":{"injectables/MicroService.html":{}}}],["clientsecret",{"_index":481,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["clientsmodule",{"_index":564,"title":{},"body":{"modules/MicroModule.html":{}}}],["clientsmodule.register",{"_index":568,"title":{},"body":{"modules/MicroModule.html":{}}}],["cluster_animalsmodule",{"_index":63,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_animalsmodule_providers",{"_index":64,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":255,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":256,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_micromodule",{"_index":561,"title":{},"body":{"modules/MicroModule.html":{},"overview.html":{}}}],["cluster_micromodule_providers",{"_index":562,"title":{},"body":{"modules/MicroModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":667,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":668,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":802,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":804,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":803,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":38,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["como",{"_index":724,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["config/apollo",{"_index":221,"title":{},"body":{"modules/AppModule.html":{}}}],["config/global.config",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["config/services.config",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":189,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"controllers/HealthController.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{}}}],["connection",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":149,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":104,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/MicroService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["constructor(@inject('hello_service",{"_index":578,"title":{},"body":{"injectables/MicroService.html":{}}}],["constructor(animalrepo",{"_index":191,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["constructor(animalsservice",{"_index":105,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["constructor(authservice",{"_index":275,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(client",{"_index":574,"title":{},"body":{"injectables/MicroService.html":{}}}],["constructor(configservice",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["constructor(private",{"_index":144,"title":{},"body":{"classes/AnimalsResolver.html":{},"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/DatabaseConfig.html":{},"controllers/HealthController.html":{},"injectables/JWTConfig.html":{},"injectables/JwtStrategy.html":{},"controllers/MicroController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["constructor(productsrepo",{"_index":680,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(usersrepo",{"_index":809,"title":{},"body":{"injectables/UsersService.html":{}}}],["context",{"_index":243,"title":{"interfaces/Context.html":{}},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"injectables/JwtAuthGraphQL.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contraseña",{"_index":372,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["controller",{"_index":497,"title":{"controllers/HealthController.html":{},"controllers/MicroController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/MicroController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('health",{"_index":510,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('micro",{"_index":559,"title":{},"body":{"controllers/MicroController.html":{}}}],["controller('users",{"_index":797,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":499,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":812,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":660,"title":{},"body":{"controllers/ProductsController.html":{},"classes/UpdateAnimalInput.html":{}}}],["createanimal",{"_index":97,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["createanimal(@args",{"_index":148,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["createanimal(createanimal",{"_index":114,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["createanimalinput",{"_index":115,"title":{"classes/CreateAnimalInput.html":{}},"body":{"classes/AnimalsResolver.html":{},"classes/CreateAnimalInput.html":{},"classes/UpdateAnimalInput.html":{},"coverage.html":{}}}],["createjwtoptions",{"_index":434,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["createone",{"_index":593,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createone(@body",{"_index":653,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createone(createproductdto",{"_index":599,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createparamdecorator((data",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":408,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["createproductdto.name",{"_index":654,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createproductdto.stock",{"_index":655,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createreadstream",{"_index":254,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["createtypeormoptions",{"_index":428,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["createuserdto",{"_index":423,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["ctx",{"_index":528,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"miscellaneous/variables.html":{}}}],["ctx.getcontext().req",{"_index":530,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{}}}],["ctx.getcontext().req.user",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentuser",{"_index":634,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentusergql",{"_index":302,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":290,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["data.description",{"_index":330,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.email",{"_index":321,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.join",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":442,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":218,"title":{"injectables/DatabaseConfig.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{},"coverage.html":{}}}],["date",{"_index":699,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{}}}],["date.now",{"_index":307,"title":{},"body":{"classes/AuthResolver.html":{}}}],["datos",{"_index":716,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["db/models/animal.entity",{"_index":76,"title":{},"body":{"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalInput.html":{}}}],["db/models/product.entity",{"_index":630,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["db/models/user.entity",{"_index":77,"title":{},"body":{"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"classes/LoginResponse.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["de",{"_index":180,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/IVerifyPassword.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"controllers/HealthController.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["decorators/current",{"_index":303,"title":{},"body":{"classes/AuthResolver.html":{}}}],["default",{"_index":353,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["definidas",{"_index":384,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["delete",{"_index":622,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/products/:id",{"_index":662,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteone",{"_index":594,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteone(@param('id",{"_index":663,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteone(id",{"_index":602,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":329,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CreateProductDto.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["desde",{"_index":177,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["development",{"_index":897,"title":{},"body":{"index.html":{}}}],["diff",{"_index":306,"title":{},"body":{"classes/AuthResolver.html":{}}}],["dns",{"_index":511,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":506,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["dog",{"_index":46,"title":{},"body":{"classes/Animal.html":{},"miscellaneous/enumerations.html":{}}}],["dropschema",{"_index":463,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["dto/create",{"_index":137,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["dto/createproduct.dto",{"_index":629,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dto/register.input",{"_index":292,"title":{},"body":{"classes/AuthResolver.html":{}}}],["dto/update",{"_index":139,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["e",{"_index":693,"title":{},"body":{"injectables/ProductsService.html":{}}}],["e2e",{"_index":907,"title":{},"body":{"index.html":{}}}],["editone",{"_index":595,"title":{},"body":{"controllers/ProductsController.html":{}}}],["editone(@param('id",{"_index":666,"title":{},"body":{"controllers/ProductsController.html":{}}}],["editone(id",{"_index":605,"title":{},"body":{"controllers/ProductsController.html":{}}}],["editor.fontsize",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["efficient",{"_index":886,"title":{},"body":{"index.html":{}}}],["email",{"_index":247,"title":{},"body":{"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{}}}],["emails",{"_index":488,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["emails[0].value",{"_index":490,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["encoding",{"_index":253,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["encryptedpassword",{"_index":368,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["entity",{"_index":39,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["entorno",{"_index":381,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["enum",{"_index":31,"title":{},"body":{"classes/Animal.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["enumerations",{"_index":875,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":176,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["error",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('variables",{"_index":380,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["error.extensions?.exception?.response?.statuscode",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.extensions?.exception?.status",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.message",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["es",{"_index":173,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["evento",{"_index":175,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["example",{"_index":730,"title":{},"body":{"classes/Todo.html":{}}}],["examplefield",{"_index":729,"title":{},"body":{"classes/Todo.html":{}}}],["exclude",{"_index":231,"title":{},"body":{"modules/AppModule.html":{}}}],["executioncontext",{"_index":523,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"miscellaneous/variables.html":{}}}],["existe",{"_index":648,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["expiresin",{"_index":436,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["export",{"_index":44,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":142,"title":{},"body":{"classes/AnimalsResolver.html":{},"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{},"dependencies.html":{}}}],["extends",{"_index":242,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/Product.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{}}}],["externa",{"_index":723,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["external",{"_index":713,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["external_auth_apps",{"_index":710,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["extractjwt",{"_index":537,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":540,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":355,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false})@isemail",{"_index":702,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["field",{"_index":34,"title":{},"body":{"classes/Animal.html":{},"classes/CreateAnimalInput.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{}}}],["field()@column",{"_index":587,"title":{},"body":{"classes/Product.html":{}}}],["field()@column({default",{"_index":749,"title":{},"body":{"classes/User.html":{}}}],["field()@column({length",{"_index":746,"title":{},"body":{"classes/User.html":{}}}],["field()@column({type",{"_index":20,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{}}}],["field()@min(18",{"_index":395,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["field()@minlength(4",{"_index":397,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["field(undefined",{"_index":399,"title":{},"body":{"classes/CreateAnimalInput.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{}}}],["field(undefined)@column({default",{"_index":743,"title":{},"body":{"classes/User.html":{}}}],["field(undefined)@column({type",{"_index":30,"title":{},"body":{"classes/Animal.html":{}}}],["field(undefined)@manytoone(undefined",{"_index":26,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{}}}],["field(undefined)@onetomany(undefined",{"_index":740,"title":{},"body":{"classes/User.html":{}}}],["field(undefined)@primarygeneratedcolumn",{"_index":16,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["field({nullable",{"_index":550,"title":{},"body":{"classes/LoginResponse.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filename",{"_index":251,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["finalpass",{"_index":385,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["findall",{"_index":98,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["findone",{"_index":99,"title":{},"body":{"classes/AnimalsResolver.html":{},"controllers/ProductsController.html":{}}}],["findone(@args('id",{"_index":159,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["findone(@param('id",{"_index":645,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findone(id",{"_index":122,"title":{},"body":{"classes/AnimalsResolver.html":{},"controllers/ProductsController.html":{}}}],["firstname",{"_index":491,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["formatederror",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formaterror",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":884,"title":{},"body":{"index.html":{}}}],["friendrequest",{"_index":762,"title":{},"body":{"classes/User.html":{}}}],["friendrequest/friendrequest",{"_index":763,"title":{},"body":{"classes/User.html":{}}}],["friends",{"_index":776,"title":{},"body":{"classes/User.html":{}}}],["fucking",{"_index":657,"title":{},"body":{"controllers/ProductsController.html":{}}}],["function",{"_index":737,"title":{},"body":{"interfaces/Upload.html":{},"coverage.html":{}}}],["functions",{"_index":878,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/getcache",{"_index":615,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('/products",{"_index":611,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('/products/:id",{"_index":608,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get()@healthcheck",{"_index":504,"title":{},"body":{"controllers/HealthController.html":{}}}],["getall",{"_index":596,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getall(@query('limit",{"_index":637,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getall(limit",{"_index":610,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getcache",{"_index":597,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getcache(@param",{"_index":640,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getcache(key",{"_index":614,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["getencryptedcredentials",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{}}}],["getencryptedcredentials(password",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["geterrorsasstring",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["geterrorsasstring(error.extensions?.exception?.response?.message",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrequest",{"_index":531,"title":{},"body":{"injectables/JwtAuthGraphQL.html":{}}}],["getrequest(context",{"_index":527,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{}}}],["getting",{"_index":880,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["gettoken(undefined",{"_index":356,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":786,"title":{},"body":{"controllers/UsersController.html":{}}}],["github",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["global",{"_index":806,"title":{},"body":{"modules/UsersModule.html":{}}}],["globalconfig",{"_index":223,"title":{"interfaces/GlobalConfig.html":{}},"body":{"modules/AppModule.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["google",{"_index":351,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["googlestrategy",{"_index":464,"title":{"injectables/GoogleStrategy.html":{}},"body":{"injectables/GoogleStrategy.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":525,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{}}}],["gqlexecutioncontext.create(context",{"_index":529,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"miscellaneous/variables.html":{}}}],["gqlmoduleoptions",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":938,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":79,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["graphqlerror",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot(apolloconfig",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["grow",{"_index":914,"title":{},"body":{"index.html":{}}}],["guards/jwt",{"_index":300,"title":{},"body":{"classes/AuthResolver.html":{}}}],["health",{"_index":502,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":516,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":507,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":508,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":498,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":205,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["hello",{"_index":556,"title":{},"body":{"controllers/MicroController.html":{}}}],["hello_service",{"_index":569,"title":{},"body":{"modules/MicroModule.html":{}}}],["here",{"_index":924,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":453,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:3000/google/redirect",{"_index":484,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["httpexception",{"_index":293,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{}}}],["httpexception('bad",{"_index":656,"title":{},"body":{"controllers/ProductsController.html":{}}}],["httpexception('invalid",{"_index":544,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["httpexception('producto",{"_index":647,"title":{},"body":{"controllers/ProductsController.html":{}}}],["httpexception('usuario",{"_index":323,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["https://nestjs.com",{"_index":931,"title":{},"body":{"index.html":{}}}],["https://sales",{"_index":450,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":294,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{}}}],["httpstatus.bad_request",{"_index":326,"title":{},"body":{"classes/AuthResolver.html":{},"controllers/ProductsController.html":{}}}],["httpstatus.conflict",{"_index":374,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["httpstatus.not_found",{"_index":649,"title":{},"body":{"controllers/ProductsController.html":{}}}],["httpstatus.unauthorized",{"_index":545,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":9,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{}}}],["identifier",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":541,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":433,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["import",{"_index":33,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":83,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["incorrectos",{"_index":373,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["ingresar",{"_index":719,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["inject",{"_index":143,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/MicroService.html":{},"injectables/ProductsService.html":{}}}],["inject('pub_sub",{"_index":146,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["inject(cache_manager",{"_index":689,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectable",{"_index":184,"title":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"injectables/MicroService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"injectables/MicroService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":185,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"injectables/MicroService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":199,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(animal",{"_index":194,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["injectrepository(product",{"_index":685,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectrepository(user",{"_index":197,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["inputpassword",{"_index":367,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["inputtype",{"_index":706,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/UpdateAnimalInput.html":{}}}],["installation",{"_index":893,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":895,"title":{},"body":{"index.html":{}}}],["installsubscriptionhandlers",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["int",{"_index":132,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/CreateAnimalInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{}}}],["interface",{"_index":238,"title":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"interfaces/Upload.html":{}},"body":{"interfaces/AuthContext.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["interfaces",{"_index":240,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"interfaces/Upload.html":{},"overview.html":{}}}],["introspection",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ioredis",{"_index":82,"title":{},"body":{"modules/AnimalsModule.html":{},"dependencies.html":{}}}],["isemail",{"_index":707,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["isglobal",{"_index":234,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":420,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isint()@apiproperty({description",{"_index":415,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring",{"_index":421,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["iverifypassword",{"_index":362,"title":{"interfaces/IVerifyPassword.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"coverage.html":{}}}],["join",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["join(__dirname",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["jsonwebtoken",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":538,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauth",{"_index":520,"title":{"injectables/JwtAuth.html":{}},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtauthgraphql",{"_index":299,"title":{"injectables/JwtAuthGraphQL.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"coverage.html":{}}}],["jwtconfig",{"_index":268,"title":{"injectables/JWTConfig.html":{}},"body":{"modules/AuthModule.html":{},"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":539,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":265,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":270,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptionsfactory",{"_index":432,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["jwtsecret",{"_index":443,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["jwtservice",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["jwtstrategy",{"_index":258,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":928,"title":{},"body":{"index.html":{}}}],["key",{"_index":617,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["la",{"_index":695,"title":{},"body":{"injectables/ProductsService.html":{}}}],["lastname",{"_index":493,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["legend",{"_index":58,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":22,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["license",{"_index":934,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":911,"title":{},"body":{"index.html":{}}}],["limit",{"_index":613,"title":{},"body":{"controllers/ProductsController.html":{}}}],["literal",{"_index":359,"title":{},"body":{"injectables/AuthService.html":{}}}],["load",{"_index":235,"title":{},"body":{"modules/AppModule.html":{}}}],["logging",{"_index":460,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":273,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GoogleStrategy.html":{}}}],["login(@args('email",{"_index":332,"title":{},"body":{"classes/AuthResolver.html":{}}}],["login(email",{"_index":280,"title":{},"body":{"classes/AuthResolver.html":{}}}],["loginresponse",{"_index":296,"title":{"classes/LoginResponse.html":{}},"body":{"classes/AuthResolver.html":{},"classes/LoginResponse.html":{},"coverage.html":{}}}],["lucas",{"_index":580,"title":{},"body":{"injectables/MicroService.html":{}}}],["lucas.vergara@usm.cl",{"_index":336,"title":{},"body":{"classes/AuthResolver.html":{}}}],["management",{"_index":451,"title":{},"body":{"interfaces/GlobalConfig.html":{},"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["manager",{"_index":674,"title":{},"body":{"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["mandatory",{"_index":712,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["manytoone",{"_index":40,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{}}}],["matching",{"_index":52,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.abs(math.trunc(diff",{"_index":312,"title":{},"body":{"classes/AuthResolver.html":{}}}],["me(@currentusergql",{"_index":315,"title":{},"body":{"classes/AuthResolver.html":{}}}],["me(user",{"_index":284,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mediante",{"_index":720,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["message",{"_index":759,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["message/message",{"_index":760,"title":{},"body":{"classes/User.html":{}}}],["metadata",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":94,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"controllers/MicroController.html":{},"injectables/MicroService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{}}}],["micro",{"_index":555,"title":{},"body":{"controllers/MicroController.html":{}}}],["micro.controller",{"_index":567,"title":{},"body":{"modules/MicroModule.html":{}}}],["micro.service",{"_index":558,"title":{},"body":{"controllers/MicroController.html":{},"modules/MicroModule.html":{}}}],["microcontroller",{"_index":553,"title":{"controllers/MicroController.html":{}},"body":{"controllers/MicroController.html":{},"modules/MicroModule.html":{},"coverage.html":{}}}],["micromodule",{"_index":206,"title":{"modules/MicroModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MicroModule.html":{},"modules.html":{},"overview.html":{}}}],["microservice",{"_index":100,"title":{"injectables/MicroService.html":{}},"body":{"classes/AnimalsResolver.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"coverage.html":{},"overview.html":{}}}],["mimetype",{"_index":252,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["min",{"_index":403,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["min(18",{"_index":407,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["minlength",{"_index":404,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["minlength(4",{"_index":406,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["miscellaneous",{"_index":874,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":910,"title":{},"body":{"index.html":{}}}],["mode",{"_index":901,"title":{},"body":{"index.html":{}}}],["module",{"_index":54,"title":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/micro/micro.module",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":923,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":133,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{}}}],["mutation(undefined",{"_index":116,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{}}}],["myśliwiec",{"_index":929,"title":{},"body":{"index.html":{}}}],["name",{"_index":10,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["name.familyname",{"_index":494,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["name.givenname",{"_index":492,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["necesarios",{"_index":717,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["nest",{"_index":890,"title":{},"body":{"index.html":{}}}],["nest/microservices",{"_index":181,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["nestframework",{"_index":933,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":70,"title":{},"body":{"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":200,"title":{},"body":{"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"controllers/HealthController.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":37,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/CreateAnimalInput.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":266,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"dependencies.html":{}}}],["nestjs/microservices",{"_index":566,"title":{},"body":{"modules/MicroModule.html":{},"injectables/MicroService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":264,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["nestjs/serve",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":419,"title":{},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":509,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":75,"title":{},"body":{"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":88,"title":{},"body":{"modules/AnimalsModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["newanimal",{"_index":154,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["node.js",{"_index":883,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":412,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["npm",{"_index":894,"title":{},"body":{"index.html":{}}}],["null",{"_index":153,"title":{},"body":{"classes/AnimalsResolver.html":{},"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"interfaces/Upload.html":{}}}],["nullable",{"_index":117,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/LoginResponse.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{}}}],["number",{"_index":14,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"interfaces/GlobalConfig.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":371,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["oauth20",{"_index":476,"title":{},"body":{"injectables/GoogleStrategy.html":{},"dependencies.html":{}}}],["objecttype",{"_index":35,"title":{},"body":{"classes/Animal.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"classes/Todo.html":{},"classes/User.html":{}}}],["one",{"_index":711,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["onetomany",{"_index":756,"title":{},"body":{"classes/User.html":{}}}],["open",{"_index":912,"title":{},"body":{"index.html":{}}}],["optional",{"_index":109,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"injectables/MicroService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":571,"title":{},"body":{"modules/MicroModule.html":{}}}],["out",{"_index":68,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":940,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":11,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{}}}],["ownerid",{"_index":394,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["p",{"_index":767,"title":{},"body":{"classes/User.html":{}}}],["p.user",{"_index":768,"title":{},"body":{"classes/User.html":{}}}],["package",{"_index":834,"title":{"dependencies.html":{}},"body":{}}],["para",{"_index":718,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["param",{"_index":623,"title":{},"body":{"controllers/ProductsController.html":{}}}],["parameters",{"_index":108,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"injectables/MicroService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":624,"title":{},"body":{"controllers/ProductsController.html":{}}}],["partialtype",{"_index":735,"title":{},"body":{"classes/UpdateAnimalInput.html":{}}}],["partialtype(createanimalinput",{"_index":736,"title":{},"body":{"classes/UpdateAnimalInput.html":{}}}],["pass",{"_index":382,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["passport",{"_index":475,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":263,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":473,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":477,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["password",{"_index":281,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{}}}],["passwordsmatches",{"_index":375,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["path",{"_index":211,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":166,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/JwtStrategy.html":{}}}],["payload.data",{"_index":182,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["payload.email",{"_index":547,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":546,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.pattern",{"_index":171,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["payload.roles",{"_index":548,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["photos",{"_index":489,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["photos[0].value",{"_index":496,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["picture",{"_index":495,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["placeholder",{"_index":731,"title":{},"body":{"classes/Todo.html":{}}}],["platypus",{"_index":47,"title":{},"body":{"classes/Animal.html":{},"miscellaneous/enumerations.html":{}}}],["playground",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":921,"title":{},"body":{"index.html":{}}}],["port",{"_index":444,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":625,"title":{},"body":{"controllers/ProductsController.html":{}}}],["post('/products",{"_index":651,"title":{},"body":{"controllers/ProductsController.html":{}}}],["post('setcache",{"_index":619,"title":{},"body":{"controllers/ProductsController.html":{}}}],["postgres",{"_index":458,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":501,"title":{},"body":{"controllers/HealthController.html":{},"controllers/MicroController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":41,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["private",{"_index":147,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/AuthService.html":{},"controllers/HealthController.html":{},"interfaces/IVerifyPassword.html":{},"injectables/MicroService.html":{},"injectables/ProductsService.html":{}}}],["process.env.database_url",{"_index":459,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.github_pass",{"_index":386,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["process.env.google_client_id",{"_index":480,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["process.env.google_pass",{"_index":387,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["process.env.google_secret",{"_index":482,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["process.env.jwt_secret",{"_index":456,"title":{},"body":{"interfaces/GlobalConfig.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":448,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":454,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.redis_uri",{"_index":457,"title":{},"body":{"interfaces/GlobalConfig.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"miscellaneous/variables.html":{}}}],["product",{"_index":581,"title":{"classes/Product.html":{}},"body":{"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/User.html":{},"coverage.html":{}}}],["product.entity",{"_index":757,"title":{},"body":{"classes/User.html":{}}}],["production",{"_index":449,"title":{},"body":{"interfaces/GlobalConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["producto",{"_index":422,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["producto'})@isstring",{"_index":413,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["products",{"_index":317,"title":{},"body":{"classes/AuthResolver.html":{},"classes/Product.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["products.controller",{"_index":671,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":628,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["productscontroller",{"_index":591,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":207,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsrepo",{"_index":679,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productsservice",{"_index":627,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["profile",{"_index":470,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["progressive",{"_index":882,"title":{},"body":{"index.html":{}}}],["project",{"_index":913,"title":{},"body":{"index.html":{}}}],["projects",{"_index":783,"title":{},"body":{"classes/User.html":{}}}],["promise",{"_index":283,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"interfaces/AuthContext.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["provide",{"_index":85,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["proxy",{"_index":179,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["pub_sub",{"_index":86,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["public",{"_index":187,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["publisher",{"_index":89,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["pubsub",{"_index":106,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["put",{"_index":626,"title":{},"body":{"controllers/ProductsController.html":{}}}],["put('/products/:id",{"_index":665,"title":{},"body":{"controllers/ProductsController.html":{}}}],["query",{"_index":134,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"controllers/ProductsController.html":{}}}],["query(undefined",{"_index":120,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["read",{"_index":922,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":145,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/MicroController.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["receivedfriendrequests",{"_index":775,"title":{},"body":{"classes/User.html":{}}}],["receivedmessages",{"_index":778,"title":{},"body":{"classes/User.html":{}}}],["receiver",{"_index":773,"title":{},"body":{"classes/User.html":{}}}],["receiver.receiver",{"_index":774,"title":{},"body":{"classes/User.html":{}}}],["redis",{"_index":80,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/ProductsModule.html":{},"dependencies.html":{}}}],["redis(process.env.redis_uri",{"_index":90,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["redis://localhost:6379",{"_index":91,"title":{},"body":{"modules/AnimalsModule.html":{},"interfaces/GlobalConfig.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"miscellaneous/variables.html":{}}}],["redispubsub",{"_index":78,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["redisstore",{"_index":672,"title":{},"body":{"modules/ProductsModule.html":{}}}],["redisuri",{"_index":445,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["refreshtoken",{"_index":469,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["register",{"_index":274,"title":{},"body":{"classes/AuthResolver.html":{}}}],["register(@args",{"_index":318,"title":{},"body":{"classes/AuthResolver.html":{}}}],["register(data",{"_index":287,"title":{},"body":{"classes/AuthResolver.html":{}}}],["registerargs",{"_index":288,"title":{"classes/RegisterArgs.html":{}},"body":{"classes/AuthResolver.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"coverage.html":{}}}],["registered",{"_index":765,"title":{},"body":{"classes/User.html":{}}}],["registerenumtype",{"_index":36,"title":{},"body":{"classes/Animal.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["registerenumtype(animal_type",{"_index":48,"title":{},"body":{"classes/Animal.html":{}}}],["registerenumtype(auth_apps",{"_index":709,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["registrado",{"_index":325,"title":{},"body":{"classes/AuthResolver.html":{}}}],["relations",{"_index":157,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"controllers/UsersController.html":{}}}],["removeanimal",{"_index":101,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["removeanimal(@args('id",{"_index":164,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["removeanimal(id",{"_index":125,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["repository",{"_index":192,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":249,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["request",{"_index":245,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"controllers/ProductsController.html":{},"interfaces/Upload.html":{}}}],["reset",{"_index":67,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolve",{"_index":111,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["resolvefield",{"_index":278,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver",{"_index":135,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{}}}],["result",{"_index":51,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":53,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":152,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"controllers/MicroController.html":{},"injectables/MicroService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":113,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"controllers/MicroController.html":{},"injectables/MicroService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{}}}],["rimraf",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":248,"title":{},"body":{"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"interfaces/Upload.html":{}}}],["root",{"_index":291,"title":{},"body":{"classes/AuthResolver.html":{}}}],["rootpath",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":898,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":331,"title":{},"body":{"classes/AuthResolver.html":{},"controllers/ProductsController.html":{}}}],["sayhello",{"_index":573,"title":{},"body":{"injectables/MicroService.html":{}}}],["scalable",{"_index":887,"title":{},"body":{"index.html":{}}}],["scope",{"_index":485,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["secret",{"_index":438,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["secretorkey",{"_index":542,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sender",{"_index":770,"title":{},"body":{"classes/User.html":{}}}],["sender.sender",{"_index":771,"title":{},"body":{"classes/User.html":{}}}],["sendmicro",{"_index":102,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["sentfriendrequests",{"_index":772,"title":{},"body":{"classes/User.html":{}}}],["sentmessages",{"_index":777,"title":{},"body":{"classes/User.html":{}}}],["server",{"_index":141,"title":{},"body":{"classes/AnimalsResolver.html":{},"dependencies.html":{},"index.html":{}}}],["server.config",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["server.config.ts",{"_index":816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["servestaticmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":227,"title":{},"body":{"modules/AppModule.html":{}}}],["setcache",{"_index":598,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["setcache(@body",{"_index":642,"title":{},"body":{"controllers/ProductsController.html":{}}}],["setcache(key",{"_index":618,"title":{},"body":{"controllers/ProductsController.html":{},"injectables/ProductsService.html":{}}}],["settings",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["si",{"_index":172,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["side",{"_index":888,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":435,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["socialregisterinput",{"_index":725,"title":{"classes/SocialRegisterInput.html":{}},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/MicroController.html":{},"modules/MicroModule.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":916,"title":{},"body":{"index.html":{}}}],["src/.../animal.entity.ts",{"_index":876,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../apollo",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../global.config.ts",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":879,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../register.input.ts",{"_index":877,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/apollo",{"_index":815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/global.config.ts",{"_index":441,"title":{},"body":{"interfaces/GlobalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/services.config.ts",{"_index":427,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{},"coverage.html":{}}}],["src/config/services.config.ts:10",{"_index":519,"title":{},"body":{"injectables/JWTConfig.html":{}}}],["src/config/services.config.ts:21",{"_index":429,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/config/services.config.ts:24",{"_index":430,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/config/services.config.ts:7",{"_index":518,"title":{},"body":{"injectables/JWTConfig.html":{}}}],["src/db/models/animal.entity.ts",{"_index":6,"title":{},"body":{"classes/Animal.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/db/models/animal.entity.ts:20",{"_index":18,"title":{},"body":{"classes/Animal.html":{}}}],["src/db/models/animal.entity.ts:24",{"_index":24,"title":{},"body":{"classes/Animal.html":{}}}],["src/db/models/animal.entity.ts:28",{"_index":32,"title":{},"body":{"classes/Animal.html":{}}}],["src/db/models/animal.entity.ts:32",{"_index":28,"title":{},"body":{"classes/Animal.html":{}}}],["src/db/models/product.entity.ts",{"_index":582,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/db/models/product.entity.ts:10",{"_index":584,"title":{},"body":{"classes/Product.html":{}}}],["src/db/models/product.entity.ts:14",{"_index":586,"title":{},"body":{"classes/Product.html":{}}}],["src/db/models/product.entity.ts:18",{"_index":588,"title":{},"body":{"classes/Product.html":{}}}],["src/db/models/product.entity.ts:22",{"_index":589,"title":{},"body":{"classes/Product.html":{}}}],["src/db/models/todo.entity.ts",{"_index":728,"title":{},"body":{"classes/Todo.html":{},"coverage.html":{}}}],["src/db/models/todo.entity.ts:6",{"_index":732,"title":{},"body":{"classes/Todo.html":{}}}],["src/db/models/user.entity.ts",{"_index":738,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/db/models/user.entity.ts:16",{"_index":752,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:20",{"_index":753,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:23",{"_index":739,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:26",{"_index":742,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:30",{"_index":745,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:34",{"_index":751,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:38",{"_index":750,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:42",{"_index":748,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:45",{"_index":754,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:49",{"_index":755,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:53",{"_index":741,"title":{},"body":{"classes/User.html":{}}}],["src/main.ts",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/animals/animals.module.ts",{"_index":69,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["src/modules/animals/animals.resolver.ts",{"_index":93,"title":{},"body":{"classes/AnimalsResolver.html":{},"coverage.html":{}}}],["src/modules/animals/animals.resolver.ts:10",{"_index":107,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:14",{"_index":119,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:26",{"_index":121,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:35",{"_index":123,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:40",{"_index":130,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:45",{"_index":126,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:54",{"_index":112,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:59",{"_index":127,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:73",{"_index":124,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.service.ts",{"_index":186,"title":{},"body":{"injectables/AnimalsService.html":{},"coverage.html":{}}}],["src/modules/animals/animals.service.ts:11",{"_index":195,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/modules/animals/animals.service.ts:12",{"_index":198,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/modules/animals/animals.service.ts:13",{"_index":196,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/modules/animals/animals.service.ts:9",{"_index":193,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/modules/animals/dto/create",{"_index":392,"title":{},"body":{"classes/CreateAnimalInput.html":{},"coverage.html":{}}}],["src/modules/animals/dto/update",{"_index":733,"title":{},"body":{"classes/UpdateAnimalInput.html":{},"coverage.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":259,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.resolver.ts",{"_index":271,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/modules/auth/auth.resolver.ts:12",{"_index":276,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/modules/auth/auth.resolver.ts:16",{"_index":279,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/modules/auth/auth.resolver.ts:24",{"_index":286,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/modules/auth/auth.resolver.ts:31",{"_index":289,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/modules/auth/auth.resolver.ts:45",{"_index":282,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:16",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:18",{"_index":364,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:20",{"_index":365,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:24",{"_index":360,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:39",{"_index":352,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:50",{"_index":363,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:54",{"_index":357,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/decorators/current",{"_index":829,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/dto/register.input.ts",{"_index":697,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/auth/dto/register.input.ts:18",{"_index":703,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["src/modules/auth/dto/register.input.ts:21",{"_index":704,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["src/modules/auth/dto/register.input.ts:24",{"_index":701,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["src/modules/auth/dto/register.input.ts:27",{"_index":705,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["src/modules/auth/dto/register.input.ts:30",{"_index":700,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["src/modules/auth/dto/register.input.ts:38",{"_index":726,"title":{},"body":{"classes/SocialRegisterInput.html":{}}}],["src/modules/auth/dto/register.input.ts:41",{"_index":727,"title":{},"body":{"classes/SocialRegisterInput.html":{}}}],["src/modules/auth/guards/jwt",{"_index":521,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/google.strategy.ts",{"_index":465,"title":{},"body":{"injectables/GoogleStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/google.strategy.ts:18",{"_index":471,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["src/modules/auth/strategies/google.strategy.ts:7",{"_index":467,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts",{"_index":533,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts:17",{"_index":536,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts:8",{"_index":534,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/types/auth.types.ts",{"_index":549,"title":{},"body":{"classes/LoginResponse.html":{},"coverage.html":{}}}],["src/modules/auth/types/auth.types.ts:10",{"_index":551,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/modules/auth/types/auth.types.ts:7",{"_index":552,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/modules/health/health.controller.ts",{"_index":500,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/health/health.controller.ts:11",{"_index":505,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/modules/health/health.module.ts",{"_index":515,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/modules/micro/micro.controller.ts",{"_index":554,"title":{},"body":{"controllers/MicroController.html":{},"coverage.html":{}}}],["src/modules/micro/micro.controller.ts:9",{"_index":557,"title":{},"body":{"controllers/MicroController.html":{}}}],["src/modules/micro/micro.module.ts",{"_index":563,"title":{},"body":{"modules/MicroModule.html":{}}}],["src/modules/micro/micro.service.ts",{"_index":572,"title":{},"body":{"injectables/MicroService.html":{},"coverage.html":{}}}],["src/modules/micro/micro.service.ts:5",{"_index":576,"title":{},"body":{"injectables/MicroService.html":{}}}],["src/modules/micro/micro.service.ts:8",{"_index":577,"title":{},"body":{"injectables/MicroService.html":{}}}],["src/modules/products/dto/createproduct.dto.ts",{"_index":409,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/dto/createproduct.dto.ts:15",{"_index":417,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/modules/products/dto/createproduct.dto.ts:9",{"_index":414,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/modules/products/products.controller.ts",{"_index":592,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts:29",{"_index":612,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:36",{"_index":616,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:41",{"_index":620,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:46",{"_index":609,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:55",{"_index":601,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:70",{"_index":604,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:81",{"_index":607,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.module.ts",{"_index":669,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/modules/products/products.service.ts",{"_index":678,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/modules/products/products.service.ts:11",{"_index":686,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:12",{"_index":687,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:15",{"_index":682,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:22",{"_index":684,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:9",{"_index":681,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/users/dto/createuser.dto.ts",{"_index":424,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/createuser.dto.ts:2",{"_index":426,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dto/createuser.dto.ts:3",{"_index":425,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/users.controller.ts",{"_index":785,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:16",{"_index":791,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":805,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":808,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:10",{"_index":811,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:7",{"_index":810,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/types/graphql.ts",{"_index":241,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["start",{"_index":899,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":902,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":903,"title":{},"body":{"index.html":{}}}],["started",{"_index":881,"title":{"index.html":{}},"body":{}}],["starter",{"_index":892,"title":{},"body":{"index.html":{}}}],["statements",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["status",{"_index":799,"title":{},"body":{"controllers/UsersController.html":{}}}],["statuscode",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stay",{"_index":925,"title":{},"body":{"index.html":{}}}],["stock",{"_index":410,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["store",{"_index":675,"title":{},"body":{"modules/ProductsModule.html":{},"dependencies.html":{}}}],["strategies/jwt.strategy",{"_index":267,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":474,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["stream",{"_index":246,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["string",{"_index":19,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["subscriber",{"_index":92,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["subscription",{"_index":136,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["subscription(undefined",{"_index":110,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["subscriptions",{"_index":81,"title":{},"body":{"modules/AnimalsModule.html":{},"dependencies.html":{}}}],["success",{"_index":800,"title":{},"body":{"controllers/UsersController.html":{}}}],["success.'})@get()@apibearerauth('bearerjwt",{"_index":790,"title":{},"body":{"controllers/UsersController.html":{}}}],["summary",{"_index":798,"title":{},"body":{"controllers/UsersController.html":{}}}],["super",{"_index":478,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["support",{"_index":917,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":936,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["synchronize",{"_index":461,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":833,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":639,"title":{},"body":{"controllers/ProductsController.html":{}}}],["teams",{"_index":779,"title":{},"body":{"classes/User.html":{}}}],["teams.user",{"_index":780,"title":{},"body":{"classes/User.html":{}}}],["terminar",{"_index":487,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["terminusmodule",{"_index":517,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":906,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":909,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":908,"title":{},"body":{"index.html":{}}}],["tests",{"_index":905,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":915,"title":{},"body":{"index.html":{}}}],["this.animalsservice.animalrepo.delete",{"_index":165,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.animalsservice.animalrepo.find",{"_index":156,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.animalsservice.animalrepo.findone(id",{"_index":160,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.animalsservice.animalrepo.insert(newanimal",{"_index":155,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.animalsservice.animalrepo.update",{"_index":162,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.animalsservice.usersrepo.findone(createanimal.ownerid",{"_index":151,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.authservice.getencryptedcredentials(data.password",{"_index":327,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.gettoken",{"_index":339,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.user.create",{"_index":328,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.user.findone",{"_index":320,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.user.findone(payload.id",{"_index":543,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.user.findone(user.id",{"_index":316,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.validateuser",{"_index":334,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.cache.get('test",{"_index":691,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.cache.set(key",{"_index":696,"title":{},"body":{"injectables/ProductsService.html":{}}}],["this.client.emit('saludando",{"_index":579,"title":{},"body":{"injectables/MicroService.html":{}}}],["this.configservice.get('database",{"_index":440,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["this.configservice.get('github_pass",{"_index":379,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["this.configservice.get('google_pass",{"_index":378,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["this.configservice.get('jwtsecret",{"_index":439,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["this.configservice.get('url",{"_index":514,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck('sales",{"_index":513,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":512,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice.sign",{"_index":391,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["this.microservice.sayhello",{"_index":560,"title":{},"body":{"controllers/MicroController.html":{}}}],["this.productsservice.getcache(key",{"_index":641,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.productsrepo",{"_index":659,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.productsrepo.delete",{"_index":664,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.productsrepo.find",{"_index":638,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.productsrepo.findone(id",{"_index":646,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.setcache(key",{"_index":643,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.usersrepo.findone(user.id",{"_index":661,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.pubsub.asynciterator('animals",{"_index":167,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.pubsub.asynciterator('saludando",{"_index":183,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.pubsub.publish('animals",{"_index":158,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.pubsub.publish('saludando",{"_index":169,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.user.findone",{"_index":370,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["this.usersservice.usersrepo.find",{"_index":801,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.verifypassword",{"_index":376,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["throw",{"_index":322,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{}}}],["todo",{"_index":486,"title":{"classes/Todo.html":{}},"body":{"injectables/GoogleStrategy.html":{},"classes/Todo.html":{},"coverage.html":{}}}],["token",{"_index":338,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["tools",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["touch",{"_index":926,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["transport",{"_index":565,"title":{},"body":{"modules/MicroModule.html":{}}}],["transport.redis",{"_index":570,"title":{},"body":{"modules/MicroModule.html":{}}}],["true",{"_index":118,"title":{},"body":{"classes/AnimalsResolver.html":{},"modules/AppModule.html":{},"interfaces/GlobalConfig.html":{},"classes/LoginResponse.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":690,"title":{},"body":{"injectables/ProductsService.html":{}}}],["try_fast",{"_index":170,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["ttl",{"_index":683,"title":{},"body":{"injectables/ProductsService.html":{}}}],["twitter",{"_index":932,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"injectables/MicroService.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":42,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":74,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([animal",{"_index":84,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["typeormmodule.forfeature([product",{"_index":676,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":269,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":447,"title":{},"body":{"interfaces/GlobalConfig.html":{}}}],["typeormoptionsfactory",{"_index":431,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["types/auth.types",{"_index":297,"title":{},"body":{"classes/AuthResolver.html":{}}}],["typescript",{"_index":891,"title":{},"body":{"index.html":{}}}],["ui",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["un",{"_index":174,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["una",{"_index":721,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["undefined",{"_index":27,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["unique",{"_index":747,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":904,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":694,"title":{},"body":{"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["updateanimal",{"_index":103,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["updateanimal(@args('updateanimalinput",{"_index":161,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["updateanimal(updateanimalinput",{"_index":128,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["updateanimalinput",{"_index":129,"title":{"classes/UpdateAnimalInput.html":{}},"body":{"classes/AnimalsResolver.html":{},"classes/UpdateAnimalInput.html":{},"coverage.html":{}}}],["updateanimalinput.id",{"_index":163,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["upload",{"_index":250,"title":{"interfaces/Upload.html":{}},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["url",{"_index":446,"title":{},"body":{"interfaces/GlobalConfig.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":237,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["usefactory",{"_index":87,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["useguards",{"_index":295,"title":{},"body":{"classes/AuthResolver.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauth",{"_index":650,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauth)@apioperation({summary",{"_index":787,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauth)@delete('/products/:id')@apibearerauth('bearerjwt",{"_index":603,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useguards(jwtauth)@post('/products')@apibearerauth('bearerjwt",{"_index":600,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useguards(jwtauth)@put('/products/:id')@apibearerauth('bearerjwt",{"_index":606,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useguards(jwtauthgraphql",{"_index":314,"title":{},"body":{"classes/AuthResolver.html":{}}}],["useguards(jwtauthgraphql)@query(undefined",{"_index":285,"title":{},"body":{"classes/AuthResolver.html":{}}}],["user",{"_index":25,"title":{"classes/User.html":{}},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.animals",{"_index":50,"title":{},"body":{"classes/Animal.html":{}}}],["user.borndate.gettime",{"_index":308,"title":{},"body":{"classes/AuthResolver.html":{}}}],["user.decorators",{"_index":304,"title":{},"body":{"classes/AuthResolver.html":{},"controllers/ProductsController.html":{}}}],["user.decorators.ts",{"_index":830,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":335,"title":{},"body":{"classes/AuthResolver.html":{}}}],["user.entity",{"_index":43,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{}}}],["user.id",{"_index":340,"title":{},"body":{"classes/AuthResolver.html":{}}}],["user.products",{"_index":590,"title":{},"body":{"classes/Product.html":{}}}],["userdb",{"_index":369,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["userdb.password",{"_index":377,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["userregistered",{"_index":319,"title":{},"body":{"classes/AuthResolver.html":{}}}],["users",{"_index":766,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["users'})@apiresponse({status",{"_index":788,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":807,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":793,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userscontroller",{"_index":784,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":208,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepo",{"_index":190,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":792,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertoproject",{"_index":764,"title":{},"body":{"classes/User.html":{}}}],["usertoteam",{"_index":761,"title":{},"body":{"classes/User.html":{}}}],["utils/types/graphql",{"_index":298,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{}}}],["utp",{"_index":781,"title":{},"body":{"classes/User.html":{}}}],["utp.user",{"_index":782,"title":{},"body":{"classes/User.html":{}}}],["validate",{"_index":466,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["validate(accesstoken",{"_index":468,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["validate(payload",{"_index":535,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["validateuser(undefined",{"_index":358,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":405,"title":{},"body":{"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"dependencies.html":{}}}],["value",{"_index":354,"title":{},"body":{"injectables/AuthService.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":21,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{}}}],["variable",{"_index":817,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":946,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifypassword",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["verifypassword(undefined",{"_index":361,"title":{},"body":{"injectables/AuthService.html":{}}}],["watch",{"_index":900,"title":{},"body":{"index.html":{}}}],["website",{"_index":930,"title":{},"body":{"index.html":{}}}],["y",{"_index":383,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["ya",{"_index":324,"title":{},"body":{"classes/AuthResolver.html":{}}}],["you'd",{"_index":920,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":66,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/MicroModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/animal.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                owner\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/animal.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({type: 'varchar', length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/animal.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/animal.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ANIMAL_TYPE\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@Column({type: 'enum', enum: ANIMAL_TYPE})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/animal.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ID, ObjectType, registerEnumType } from '@nestjs/graphql';\nimport { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { User } from './user.entity';\n\nexport enum ANIMAL_TYPE {\n  CAT,\n  DOG,\n  PLATYPUS,\n}\n\nregisterEnumType(ANIMAL_TYPE, {\n  name: 'ANIMAL_TYPE',\n});\n\n@ObjectType()\n@Entity({ name: 'animals' })\nexport class Animal {\n  @Field(() => ID)\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Field()\n  @Column({ type: 'varchar', length: 100 })\n  name: string;\n\n  @Field(() => ANIMAL_TYPE)\n  @Column({ type: 'enum', enum: ANIMAL_TYPE })\n  type: ANIMAL_TYPE;\n\n  @Field(() => User)\n  @ManyToOne(() => User, user => user.animals)\n  owner: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnimalsModule.html":{"url":"modules/AnimalsModule.html","title":"module - AnimalsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnimalsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnimalsModule\n\n\n\ncluster_AnimalsModule_providers\n\n\n\n\nAnimalsService\n\nAnimalsService\n\n\n\nAnimalsModule\n\nAnimalsModule\n\nAnimalsModule -->\n\nAnimalsService->AnimalsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/animals/animals.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimalsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AnimalsService } from './animals.service';\nimport { AnimalsResolver } from './animals.resolver';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Animal } from '../../db/models/animal.entity';\nimport { User } from '../../db/models/user.entity';\nimport { RedisPubSub } from 'graphql-redis-subscriptions';\nimport * as Redis from 'ioredis';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Animal, User])],\n  providers: [\n    AnimalsResolver,\n    AnimalsService,\n    {\n      provide: 'PUB_SUB',\n      useFactory: () =>\n        new RedisPubSub({\n          publisher: new Redis(process.env.REDIS_URI || 'redis://localhost:6379'),\n          subscriber: new Redis(process.env.REDIS_URI || 'redis://localhost:6379'),\n        }),\n    },\n  ],\n})\nexport class AnimalsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalsResolver.html":{"url":"classes/AnimalsResolver.html","title":"class - AnimalsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/animals/animals.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animalAdded\n                            \n                            \n                                    Async\n                                createAnimal\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                    Async\n                                microservice\n                            \n                            \n                                removeAnimal\n                            \n                            \n                                    Async\n                                sendMicro\n                            \n                            \n                                updateAnimal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animalsService: AnimalsService, pubSub: PubSub)\n                    \n                \n                        \n                            \n                                Defined in src/modules/animals/animals.resolver.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalsService\n                                                  \n                                                        \n                                                                        AnimalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        pubSub\n                                                  \n                                                        \n                                                                    PubSub\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            animalAdded\n                        \n                        \n                    \n                \n            \n            \n                \nanimalAdded()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Subscription(undefined, {resolve: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAnimal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAnimal(createAnimal: CreateAnimalInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAnimal\n                                    \n                                                CreateAnimalInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'animals'})\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'animal'})\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            microservice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    microservice()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Subscription(undefined, {resolve: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAnimal\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAnimal(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sendMicro\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sendMicro()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAnimal\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAnimal(updateAnimalInput: UpdateAnimalInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateAnimalInput\n                                    \n                                                UpdateAnimalInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Int, Mutation, Query, Resolver, Subscription } from '@nestjs/graphql';\nimport { AnimalsService } from './animals.service';\nimport { Animal } from '../../db/models/animal.entity';\nimport { CreateAnimalInput } from './dto/create-animal.input';\nimport { UpdateAnimalInput } from './dto/update-animal.input';\nimport { PubSub } from 'apollo-server-express';\nimport { Inject } from '@nestjs/common';\n\n@Resolver(() => Animal)\nexport class AnimalsResolver {\n  constructor(private readonly animalsService: AnimalsService, @Inject('PUB_SUB') private pubSub: PubSub) {}\n\n  @Mutation(() => Animal, { nullable: true })\n  async createAnimal(@Args() createAnimal: CreateAnimalInput) {\n    const owner = await this.animalsService.usersRepo.findOne(createAnimal.ownerId);\n    if (!owner) return null;\n    const newAnimal = {\n      ...createAnimal,\n      owner,\n    };\n    await this.animalsService.animalRepo.insert(newAnimal);\n    return newAnimal;\n  }\n\n  @Query(() => [Animal], { name: 'animals' })\n  async findAll() {\n    const animals = await this.animalsService.animalRepo.find({\n      relations: ['owner'],\n    });\n    await this.pubSub.publish('animals', animals);\n    return animals;\n  }\n\n  @Query(() => Animal, { name: 'animal' })\n  findOne(@Args('id', { type: () => Int }) id: number) {\n    return this.animalsService.animalRepo.findOne(id);\n  }\n\n  @Mutation(() => Animal)\n  updateAnimal(@Args('updateAnimalInput') updateAnimalInput: UpdateAnimalInput) {\n    return this.animalsService.animalRepo.update({ id: updateAnimalInput.id }, updateAnimalInput);\n  }\n\n  @Mutation(() => Animal)\n  removeAnimal(@Args('id', { type: () => Int }) id: number) {\n    return this.animalsService.animalRepo.delete({\n      id,\n    });\n  }\n\n  @Subscription(() => [Animal], {\n    resolve: payload => payload,\n  })\n  animalAdded() {\n    return this.pubSub.asyncIterator('animals');\n  }\n\n  @Query(() => Boolean)\n  async sendMicro() {\n    await this.pubSub.publish('saludando', 'try_fast');\n    return true;\n  }\n\n  @Subscription(() => String, {\n    resolve: payload => {\n      if (payload.pattern) {\n        // Si es un evento enviado desde un Client proxy de @nest/microservices\n        return payload.data;\n      }\n      return payload;\n    },\n  })\n  async microservice() {\n    return this.pubSub.asyncIterator('saludando');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalsService.html":{"url":"injectables/AnimalsService.html","title":"injectable - AnimalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/animals/animals.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                animalRepo\n                            \n                            \n                                    Public\n                                    Readonly\n                                configService\n                            \n                            \n                                    Public\n                                    Readonly\n                                usersRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animalRepo: Repository, usersRepo: Repository, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/animals/animals.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            animalRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(Animal)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/animals.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/animals.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            usersRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(User)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/animals.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Animal } from '../../db/models/animal.entity';\nimport { User } from '../../db/models/user.entity';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AnimalsService {\n  constructor(\n    @InjectRepository(Animal) public readonly animalRepo: Repository,\n    @InjectRepository(User) public readonly usersRepo: Repository,\n    public readonly configService: ConfigService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAnimalsModule\n\nAnimalsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnimalsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMicroModule\n\nMicroModule\n\nAppModule -->\n\nMicroModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AnimalsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            MicroModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { join } from 'path';\nimport { Module } from '@nestjs/common';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { ConfigModule } from '@nestjs/config';\nimport { Connection } from 'typeorm';\nimport { DatabaseConfig } from './config/services.config';\nimport { apolloConfig } from './config/apollo-server.config';\nimport { globalConfig } from './config/global.config';\nimport { AnimalsModule, AuthModule, HealthModule, ProductsModule, UsersModule } from './modules';\nimport { MicroModule } from './modules/micro/micro.module';\n\n@Module({\n  imports: [\n    ProductsModule,\n    HealthModule,\n    UsersModule,\n    AnimalsModule,\n    AuthModule,\n    MicroModule,\n    GraphQLModule.forRoot(apolloConfig),\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', 'documentation'),\n      exclude: ['/api*', '/graphql'],\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [globalConfig],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: DatabaseConfig,\n    }),\n  ],\n})\nexport class AppModule {\n  constructor(private connection: Connection) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthContext.html":{"url":"interfaces/AuthContext.html","title":"interface - AuthContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/types/graphql.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Context\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         AuthUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { Stream } from 'stream';\n\nexport interface AuthUser {\n  id: number;\n  email: string;\n  roles: string[];\n}\n\nexport interface Context {\n  req: Request;\n  user: AuthUser | null;\n}\n\nexport interface AuthContext extends Context {\n  user: AuthUser;\n}\n\nexport interface Upload {\n  filename: string;\n  mimetype: string;\n  encoding: string;\n  createReadStream: () => Stream;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthResolver } from './auth.resolver';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../../db/models/user.entity';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { JWTConfig } from '../../config/services.config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    PassportModule,\n    JwtModule.registerAsync({\n      useClass: JWTConfig,\n    }),\n  ],\n  providers: [AuthService, AuthResolver, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                me\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.resolver.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            age\n                        \n                        \n                    \n                \n            \n            \n                \nage(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField()\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.resolver.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            me\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    me(user: AuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGraphQL)@Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.resolver.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.resolver.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Mutation, Query, ResolveField, Resolver, Root } from '@nestjs/graphql';\nimport { RegisterArgs } from './dto/register.input';\nimport { HttpException, HttpStatus, UseGuards } from '@nestjs/common';\nimport { User } from '../../db/models/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponse } from './types/auth.types';\nimport { AuthUser } from '../../utils/types/graphql';\nimport { JwtAuthGraphQL } from './guards/jwt-auth.guard';\nimport { CurrentUserGQL } from './decorators/current-user.decorators';\n\n@Resolver(() => User)\nexport class AuthResolver {\n  constructor(private readonly authService: AuthService) {}\n\n  @ResolveField()\n  age(@Root() user: User) {\n    let diff = (Date.now() - user.bornDate.getTime()) / 1000;\n    diff /= 60 * 60 * 24;\n    return Math.abs(Math.trunc(diff / 365.25));\n  }\n\n  @UseGuards(JwtAuthGraphQL)\n  @Query(() => User)\n  async me(@CurrentUserGQL() user: AuthUser) {\n    return this.authService.User.findOne(user.id, {\n      relations: ['products', 'animals'],\n    });\n  }\n\n  @Mutation(() => User)\n  async register(@Args() data: RegisterArgs): Promise {\n    const userRegistered = await this.authService.User.findOne({\n      where: { email: data.email },\n    });\n    if (userRegistered) throw new HttpException('Usuario ya registrado.', HttpStatus.BAD_REQUEST);\n    const password = await this.authService.getEncryptedCredentials(data.password);\n    return this.authService.User.create({\n      ...data,\n      description: data.description || '',\n      password,\n    }).save();\n  }\n\n  @Mutation(() => LoginResponse)\n  async login(@Args('email') email: string, @Args('password') password: string): Promise {\n    const user = await this.authService.validateUser({ email, password });\n    const roles = user.email === 'lucas.vergara@usm.cl' ? ['ADMIN'] : ['USER'];\n    return {\n      token: this.authService.getToken({ id: user.id, email: user.email, roles }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                configService\n                            \n                            \n                                    Public\n                                    Readonly\n                                User\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getEncryptedCredentials\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                validateUser\n                            \n                            \n                                    Public\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, User: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        User\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getEncryptedCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEncryptedCredentials(password: string, github, google)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    github\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    google\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken(undefined: AuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            verifyPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(undefined: IVerifyPassword)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IVerifyPassword\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(User)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../db/models/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { AuthUser } from '../../utils/types/graphql';\n\ninterface IVerifyPassword {\n  inputPassword: string;\n  encryptedPassword: string;\n}\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    public readonly configService: ConfigService,\n    @InjectRepository(User)\n    public readonly User: Repository,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  public async validateUser({ email, password }: { email: string; password: string }): Promise {\n    const userDB = await this.User.findOne({\n      where: {\n        email,\n      },\n    });\n    if (!userDB) throw new HttpException('Usuario o contraseña incorrectos', HttpStatus.CONFLICT);\n    const passwordsMatches = await this.verifyPassword({\n      inputPassword: password,\n      encryptedPassword: userDB.password,\n    });\n    if (!passwordsMatches) throw new HttpException('Usuario o contraseña incorrectos', HttpStatus.CONFLICT);\n    return userDB;\n  }\n\n  public async getEncryptedCredentials(password: string, github = false, google = false): Promise {\n    if (!this.configService.get('GOOGLE_PASS') || !this.configService.get('GITHUB_PASS')) {\n      throw new Error('Variables de entorno google pass y github pass no definidas...');\n    }\n    let finalPass = password;\n    if (github) finalPass = process.env.GITHUB_PASS;\n    else if (google) finalPass = process.env.GOOGLE_PASS;\n    else finalPass = await bcrypt.hash(finalPass, 10);\n    return finalPass;\n  }\n\n  public async verifyPassword({ inputPassword, encryptedPassword }: IVerifyPassword): Promise {\n    return await bcrypt.compare(inputPassword, encryptedPassword);\n  }\n\n  public getToken({ id, email, roles = [] }: AuthUser): string {\n    return this.jwtService.sign({ id, email, roles });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthUser.html":{"url":"interfaces/AuthUser.html","title":"interface - AuthUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/types/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        roles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { Stream } from 'stream';\n\nexport interface AuthUser {\n  id: number;\n  email: string;\n  roles: string[];\n}\n\nexport interface Context {\n  req: Request;\n  user: AuthUser | null;\n}\n\nexport interface AuthContext extends Context {\n  user: AuthUser;\n}\n\nexport interface Upload {\n  filename: string;\n  mimetype: string;\n  encoding: string;\n  createReadStream: () => Stream;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Context.html":{"url":"interfaces/Context.html","title":"interface - Context","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Context\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/types/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        req\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                    \n                                \n                                \n                                    \n                                        req:     Request\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Request\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         AuthUser | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthUser | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { Stream } from 'stream';\n\nexport interface AuthUser {\n  id: number;\n  email: string;\n  roles: string[];\n}\n\nexport interface Context {\n  req: Request;\n  user: AuthUser | null;\n}\n\nexport interface AuthContext extends Context {\n  user: AuthUser;\n}\n\nexport interface Upload {\n  filename: string;\n  mimetype: string;\n  encoding: string;\n  createReadStream: () => Stream;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAnimalInput.html":{"url":"classes/CreateAnimalInput.html","title":"class - CreateAnimalInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAnimalInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/animals/dto/create-animal.input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                name\n                            \n                            \n                                ownerId\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Min(18)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/dto/create-animal.input.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@MinLength(4)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/dto/create-animal.input.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/dto/create-animal.input.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ANIMAL_TYPE\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/dto/create-animal.input.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, Int } from '@nestjs/graphql';\nimport { ANIMAL_TYPE } from '../../../db/models/animal.entity';\nimport { Min, MinLength } from 'class-validator';\n\n@ArgsType()\nexport class CreateAnimalInput {\n  @Field()\n  @MinLength(4)\n  name: string;\n\n  @Field()\n  @Min(18)\n  age: number;\n\n  @Field(() => ANIMAL_TYPE)\n  type: ANIMAL_TYPE;\n\n  @Field(() => Int)\n  ownerId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/createProduct.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Nombre de producto'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/products/dto/createProduct.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@ApiProperty({description: 'Stock actual'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/products/dto/createProduct.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsString } from 'class-validator';\n\nexport class CreateProductDto {\n  @ApiProperty({\n    description: 'Nombre de producto',\n  })\n  @IsString()\n  name: string;\n\n  @IsInt()\n  @ApiProperty({\n    description: 'Stock actual',\n  })\n  stock: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/createUser.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/createUser.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/createUser.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n  readonly name: string;\n  readonly age: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfig.html":{"url":"injectables/DatabaseConfig.html","title":"injectable - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/services.config.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/services.config.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTypeOrmOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/services.config.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtOptionsFactory } from '@nestjs/jwt';\n\n@Injectable()\nexport class JWTConfig implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createJwtOptions() {\n    return {\n      signOptions: {\n        expiresIn: '1h',\n      },\n      secret: this.configService.get('jwtSecret'),\n    };\n  }\n}\n\n@Injectable()\nexport class DatabaseConfig implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createTypeOrmOptions() {\n    return this.configService.get('database');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/global.config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        database\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        port\n                                \n                                \n                                        redisUri\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:     TypeOrmModuleOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TypeOrmModuleOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redisUri\n                                    \n                                \n                                \n                                    \n                                        redisUri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TypeOrmModuleOptions } from '@nestjs/typeorm';\n\ninterface GlobalConfig {\n  port: string | number;\n  url: string;\n  jwtSecret: string;\n  redisUri: string;\n  database: TypeOrmModuleOptions;\n}\n\nexport const globalConfig = (): GlobalConfig => ({\n  url: process.env.NODE_ENV === 'production' ? 'https://sales-management-api.herokuapp.com' : 'http://localhost:3000',\n  port: process.env.PORT || 3000,\n  jwtSecret: process.env.JWT_SECRET,\n  redisUri: process.env.REDIS_URI || 'redis://localhost:6379',\n  database: {\n    type: 'postgres',\n    url: process.env.DATABASE_URL,\n    logging: false,\n    synchronize: true,\n    autoLoadEntities: true,\n    dropSchema: process.env.NODE_ENV !== 'production',\n  },\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleStrategy.html":{"url":"injectables/GoogleStrategy.html","title":"injectable - GoogleStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategies/google.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategies/google.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(accessToken: string, refreshToken: string, profile: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategies/google.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-google-oauth20';\n\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GoogleStrategy extends PassportStrategy(Strategy, 'google') {\n  constructor() {\n    super({\n      clientID: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_SECRET,\n      callbackURL: 'http://localhost:3000/google/redirect',\n      scope: ['email', 'profile'],\n    });\n  }\n\n  // todo: Terminar google login strategy\n  async validate(accessToken: string, refreshToken: string, profile: any): Promise {\n    const { name, emails, photos } = profile;\n    return {\n      email: emails[0].value,\n      firstName: name.givenName,\n      lastName: name.familyName,\n      picture: photos[0].value,\n      accessToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health/health.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DNSHealthIndicator, HealthCheck, HealthCheckService } from '@nestjs/terminus';\nimport { ConfigService } from '@nestjs/config';\n\n@Controller('health')\nexport class HealthController {\n  constructor(private health: HealthCheckService, private dns: DNSHealthIndicator, private configService: ConfigService) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.dns.pingCheck('sales-management', this.configService.get('url'))]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IVerifyPassword.html":{"url":"interfaces/IVerifyPassword.html","title":"interface - IVerifyPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IVerifyPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        encryptedPassword\n                                \n                                \n                                        inputPassword\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encryptedPassword\n                                    \n                                \n                                \n                                    \n                                        encryptedPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputPassword\n                                    \n                                \n                                \n                                    \n                                        inputPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../db/models/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { AuthUser } from '../../utils/types/graphql';\n\ninterface IVerifyPassword {\n  inputPassword: string;\n  encryptedPassword: string;\n}\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    public readonly configService: ConfigService,\n    @InjectRepository(User)\n    public readonly User: Repository,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  public async validateUser({ email, password }: { email: string; password: string }): Promise {\n    const userDB = await this.User.findOne({\n      where: {\n        email,\n      },\n    });\n    if (!userDB) throw new HttpException('Usuario o contraseña incorrectos', HttpStatus.CONFLICT);\n    const passwordsMatches = await this.verifyPassword({\n      inputPassword: password,\n      encryptedPassword: userDB.password,\n    });\n    if (!passwordsMatches) throw new HttpException('Usuario o contraseña incorrectos', HttpStatus.CONFLICT);\n    return userDB;\n  }\n\n  public async getEncryptedCredentials(password: string, github = false, google = false): Promise {\n    if (!this.configService.get('GOOGLE_PASS') || !this.configService.get('GITHUB_PASS')) {\n      throw new Error('Variables de entorno google pass y github pass no definidas...');\n    }\n    let finalPass = password;\n    if (github) finalPass = process.env.GITHUB_PASS;\n    else if (google) finalPass = process.env.GOOGLE_PASS;\n    else finalPass = await bcrypt.hash(finalPass, 10);\n    return finalPass;\n  }\n\n  public async verifyPassword({ inputPassword, encryptedPassword }: IVerifyPassword): Promise {\n    return await bcrypt.compare(inputPassword, encryptedPassword);\n  }\n\n  public getToken({ id, email, roles = [] }: AuthUser): string {\n    return this.jwtService.sign({ id, email, roles });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JWTConfig.html":{"url":"injectables/JWTConfig.html","title":"injectable - JWTConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JWTConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/services.config.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createJwtOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/services.config.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createJwtOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateJwtOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/services.config.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { signOptions: { expiresIn: string; }; secret: any; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtOptionsFactory } from '@nestjs/jwt';\n\n@Injectable()\nexport class JWTConfig implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createJwtOptions() {\n    return {\n      signOptions: {\n        expiresIn: '1h',\n      },\n      secret: this.configService.get('jwtSecret'),\n    };\n  }\n}\n\n@Injectable()\nexport class DatabaseConfig implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createTypeOrmOptions() {\n    return this.configService.get('database');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuth.html":{"url":"injectables/JwtAuth.html","title":"injectable - JwtAuth","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { GqlExecutionContext } from '@nestjs/graphql';\n\n@Injectable()\nexport class JwtAuth extends AuthGuard('jwt') {}\n\n@Injectable()\nexport class JwtAuthGraphQL extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGraphQL.html":{"url":"injectables/JwtAuthGraphQL.html","title":"injectable - JwtAuthGraphQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGraphQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/guards/jwt-auth.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { GqlExecutionContext } from '@nestjs/graphql';\n\n@Injectable()\nexport class JwtAuth extends AuthGuard('jwt') {}\n\n@Injectable()\nexport class JwtAuthGraphQL extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategies/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: AuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategies/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthUser } from '../../../utils/types/graphql';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: AuthUser) {\n    const user = await this.authService.User.findOne(payload.id);\n    if (!user) throw new HttpException('Invalid Token', HttpStatus.UNAUTHORIZED);\n    return { id: payload.id, email: payload.email, roles: payload.roles };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponse.html":{"url":"classes/LoginResponse.html","title":"class - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/types/auth.types.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                token\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/types/auth.types.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/types/auth.types.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { User } from '../../../db/models/user.entity';\n\n@ObjectType()\nexport class LoginResponse {\n  @Field({ nullable: true })\n  user?: User;\n\n  @Field({ nullable: true })\n  token?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MicroController.html":{"url":"controllers/MicroController.html","title":"controller - MicroController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MicroController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/micro/micro.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                micro\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                hello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            hello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/micro/micro.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { MicroService } from './micro.service';\n\n@Controller('micro')\nexport class MicroController {\n  constructor(private readonly microService: MicroService) {}\n\n  @Get()\n  async hello() {\n    return this.microService.sayHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MicroModule.html":{"url":"modules/MicroModule.html","title":"module - MicroModule","body":"\n                   \n\n\n\n\n    Modules\n    MicroModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MicroModule\n\n\n\ncluster_MicroModule_providers\n\n\n\n\nMicroService\n\nMicroService\n\n\n\nMicroModule\n\nMicroModule\n\nMicroModule -->\n\nMicroService->MicroModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/micro/micro.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MicroService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MicroController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { MicroController } from './micro.controller';\nimport { MicroService } from './micro.service';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'HELLO_SERVICE',\n        transport: Transport.REDIS,\n        options: {\n          url: process.env.REDIS_URI || 'redis://localhost:6379',\n        },\n      },\n    ]),\n  ],\n  controllers: [MicroController],\n  providers: [MicroService],\n})\nexport class MicroModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MicroService.html":{"url":"injectables/MicroService.html","title":"injectable - MicroService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MicroService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/micro/micro.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sayHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(client: ClientProxy)\n                    \n                \n                        \n                            \n                                Defined in src/modules/micro/micro.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        client\n                                                  \n                                                        \n                                                                    ClientProxy\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            sayHello\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    sayHello()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/micro/micro.service.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\n@Injectable()\nexport class MicroService {\n  constructor(@Inject('HELLO_SERVICE') private client: ClientProxy) {}\n\n  async sayHello() {\n    return this.client.emit('saludando', 'Lucas!');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/product.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                stock\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/product.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({type: 'varchar', length: 150})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/product.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/product.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/product.entity.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { User } from './user.entity';\nimport { Field, ID, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\n@Entity({ name: 'products' })\nexport class Product extends BaseEntity {\n  @Field(() => ID)\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Field()\n  @Column({ type: 'varchar', length: 150 })\n  name: string;\n\n  @Field()\n  @Column()\n  stock: number;\n\n  @Field(() => User)\n  @ManyToOne(() => User, user => user.products)\n  user: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                editOne\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                            \n                                getCache\n                            \n                            \n                                setCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOne(createProductDto: CreateProductDto, user: AuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuth)@Post('/products')@ApiBearerAuth('BearerJWT')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuth)@Delete('/products/:id')@ApiBearerAuth('BearerJWT')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuth)@Put('/products/:id')@ApiBearerAuth('BearerJWT')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/products/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/products')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCache\n                        \n                        \n                    \n                \n            \n            \n                \ngetCache(key: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/getcache')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCache\n                        \n                        \n                    \n                \n            \n            \n                \nsetCache(key: string, value: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('setcache')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpException,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/createProduct.dto';\nimport { Product } from '../../db/models/product.entity';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { JwtAuth } from '../auth/guards/jwt-auth.guard';\nimport { CurrentUser } from '../auth/decorators/current-user.decorators';\nimport { AuthUser } from '../../utils/types/graphql';\n\n@ApiTags('Products')\n@Controller()\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  @Get('/products')\n  async getAll(@Query('limit', ParseIntPipe) limit: number): Promise {\n    return await this.productsService.productsRepo.find({\n      take: limit || 10,\n    });\n  }\n\n  @Get('/getcache')\n  getCache(@Param() key: string) {\n    return this.productsService.getCache(key);\n  }\n\n  @Post('setcache')\n  setCache(@Body() key: string, value: string) {\n    return this.productsService.setCache(key, value, 10000);\n  }\n\n  @Get('/products/:id')\n  async findOne(@Param('id', ParseIntPipe) id: number) {\n    const product = await this.productsService.productsRepo.findOne(id);\n    if (!product) throw new HttpException('Producto no existe', HttpStatus.NOT_FOUND);\n    return product;\n  }\n\n  @UseGuards(JwtAuth)\n  @Post('/products')\n  @ApiBearerAuth('BearerJWT')\n  async createOne(@Body() createProductDto: CreateProductDto, @CurrentUser() user: AuthUser): Promise {\n    if (!createProductDto.name || !createProductDto.stock) {\n      throw new HttpException('Bad fucking request bro!', HttpStatus.BAD_REQUEST);\n    }\n    return this.productsService.productsRepo\n      .create({\n        ...createProductDto,\n        user: await this.productsService.usersRepo.findOne(user.id),\n      })\n      .save();\n  }\n\n  @UseGuards(JwtAuth)\n  @Delete('/products/:id')\n  @ApiBearerAuth('BearerJWT')\n  async deleteOne(@Param('id', ParseIntPipe) id: number) {\n    const product = await this.productsService.productsRepo.delete({\n      id,\n    });\n    if (!product) throw new HttpException('Producto no existe', HttpStatus.NOT_FOUND);\n    return true;\n  }\n\n  @UseGuards(JwtAuth)\n  @Put('/products/:id')\n  @ApiBearerAuth('BearerJWT')\n  async editOne(@Param('id', ParseIntPipe) id: number) {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductsService\n\nProductsService\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/products/products.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheModule, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { Product } from '../../db/models/product.entity';\nimport { User } from '../../db/models/user.entity';\nimport * as redisStore from 'cache-manager-redis-store';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([Product, User]),\n    CacheModule.register({\n      store: redisStore,\n      url: process.env.REDIS_URI || 'redis://localhost:6379',\n    }),\n  ],\n  providers: [ProductsService],\n  controllers: [ProductsController],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                productsRepo\n                            \n                            \n                                    Public\n                                    Readonly\n                                usersRepo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCache\n                            \n                            \n                                    Async\n                                setCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsRepo: Repository, usersRepo: Repository, cache: Cache)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/products.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cache\n                                                  \n                                                        \n                                                                    Cache\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCache(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/products/products.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            setCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCache(key: string, value: string, ttl: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/products/products.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ttl\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            productsRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(Product)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/products/products.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            usersRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(User)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/products/products.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { CACHE_MANAGER, Inject, Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Product } from '../../db/models/product.entity';\nimport { Repository } from 'typeorm';\nimport { User } from '../../db/models/user.entity';\nimport { Cache } from 'cache-manager';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectRepository(Product) public readonly productsRepo: Repository,\n    @InjectRepository(User) public readonly usersRepo: Repository,\n    @Inject(CACHE_MANAGER) private readonly cache: Cache,\n  ) {}\n  async getCache(key: string): Promise {\n    try {\n      return this.cache.get('test');\n    } catch (e: unknown) {\n      return 'No existe la key' + key;\n    }\n  }\n  async setCache(key: string, value: string, ttl: number): Promise {\n    try {\n      await this.cache.set(key, value, { ttl });\n      return true;\n    } catch (e: unknown) {\n      return false;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterArgs.html":{"url":"classes/RegisterArgs.html","title":"class - RegisterArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bornDate\n                            \n                            \n                                description\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bornDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: false})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, InputType, registerEnumType } from '@nestjs/graphql';\nimport { IsEmail } from 'class-validator';\n\nexport enum AUTH_APPS {\n  Google,\n  GitHub,\n}\n\nregisterEnumType(AUTH_APPS, {\n  name: 'EXTERNAL_AUTH_APPS', // this one is mandatory\n  description: 'External auth apps like GitHub or Google', // this one is optional\n});\n\n@ArgsType()\nexport class RegisterArgs {\n  @Field({ nullable: false })\n  @IsEmail()\n  email: string;\n\n  @Field({ nullable: false })\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  description: string | null;\n\n  @Field({ nullable: true })\n  password: string;\n\n  @Field({ nullable: false })\n  bornDate: Date;\n}\n\n@InputType({\n  description: 'Datos necesarios para ingresar mediante una aplicacion externa como GitHub o Google',\n})\nexport class SocialRegisterInput {\n  @Field({ nullable: false })\n  token!: string;\n\n  @Field(() => AUTH_APPS)\n  type!: AUTH_APPS;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialRegisterInput.html":{"url":"classes/SocialRegisterInput.html","title":"class - SocialRegisterInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialRegisterInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AUTH_APPS\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, InputType, registerEnumType } from '@nestjs/graphql';\nimport { IsEmail } from 'class-validator';\n\nexport enum AUTH_APPS {\n  Google,\n  GitHub,\n}\n\nregisterEnumType(AUTH_APPS, {\n  name: 'EXTERNAL_AUTH_APPS', // this one is mandatory\n  description: 'External auth apps like GitHub or Google', // this one is optional\n});\n\n@ArgsType()\nexport class RegisterArgs {\n  @Field({ nullable: false })\n  @IsEmail()\n  email: string;\n\n  @Field({ nullable: false })\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  description: string | null;\n\n  @Field({ nullable: true })\n  password: string;\n\n  @Field({ nullable: false })\n  bornDate: Date;\n}\n\n@InputType({\n  description: 'Datos necesarios para ingresar mediante una aplicacion externa como GitHub o Google',\n})\nexport class SocialRegisterInput {\n  @Field({ nullable: false })\n  token!: string;\n\n  @Field(() => AUTH_APPS)\n  type!: AUTH_APPS;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Todo.html":{"url":"classes/Todo.html","title":"class - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/todo.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exampleField\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exampleField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Example field (placeholder)'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/todo.entity.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Todo {\n  @Field(() => Int, { description: 'Example field (placeholder)' })\n  exampleField: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnimalInput.html":{"url":"classes/UpdateAnimalInput.html","title":"class - UpdateAnimalInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnimalInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/animals/dto/update-animal.input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/dto/update-animal.input.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateAnimalInput } from './create-animal.input';\nimport { Field, InputType, Int, PartialType } from '@nestjs/graphql';\n\n@InputType()\nexport class UpdateAnimalInput extends PartialType(CreateAnimalInput) {\n  @Field(() => Int)\n  id: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/types/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createReadStream\n                                \n                                \n                                        encoding\n                                \n                                \n                                        filename\n                                \n                                \n                                        mimetype\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createReadStream\n                                    \n                                \n                                \n                                    \n                                        createReadStream:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { Stream } from 'stream';\n\nexport interface AuthUser {\n  id: number;\n  email: string;\n  roles: string[];\n}\n\nexport interface Context {\n  req: Request;\n  user: AuthUser | null;\n}\n\nexport interface AuthContext extends Context {\n  user: AuthUser;\n}\n\nexport interface Upload {\n  filename: string;\n  mimetype: string;\n  encoding: string;\n  createReadStream: () => Stream;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                animals\n                            \n                            \n                                bornDate\n                            \n                            \n                                description\n                            \n                            \n                                email\n                            \n                            \n                                github\n                            \n                            \n                                google\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Animal[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bornDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@Column({default: '', length: 500})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({length: 150, unique: true, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            github\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({length: 100, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Product[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { Field, ID, ObjectType } from '@nestjs/graphql';\nimport { Product } from './product.entity';\nimport { Animal } from './animal.entity';\n\n/*import { Message } from '../Message/Message';\nimport { UserToTeam } from './UserToTeam';\nimport { FriendRequest } from '../FriendRequest/FriendRequest';\nimport { UserToProject } from './UserToProject';*/\n\n@ObjectType({ description: 'Registered users' })\n@Entity({ name: 'users' })\nexport class User extends BaseEntity {\n  @Field(() => ID)\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @Field()\n  @Column({ length: 100, nullable: false })\n  name!: string;\n\n  @Field()\n  age!: number;\n\n  @Column()\n  bornDate!: Date;\n\n  @Field(() => String)\n  @Column({ default: '', length: 500 })\n  description!: string;\n\n  @Field()\n  @Column({ default: false })\n  google!: boolean;\n\n  @Field()\n  @Column({ default: false })\n  github!: boolean;\n\n  @Field()\n  @Column({ length: 150, unique: true, nullable: false })\n  email!: string;\n\n  @Column()\n  password!: string;\n\n  @Field(() => [Product])\n  @OneToMany(() => Product, p => p.user)\n  products: Product[];\n\n  @Field(() => [Animal])\n  @OneToMany(() => Animal, a => a.owner)\n  animals: Animal[];\n\n  /*@OneToMany(() => FriendRequest, sender => sender.sender)\n  sentFriendRequests!: FriendRequest[];\n\n  @OneToMany(() => FriendRequest, receiver => receiver.receiver)\n  receivedFriendRequests!: FriendRequest[];\n\n  @Field(() => [User])\n  friends!: this[];\n\n  @Field(() => [Message])\n  @OneToMany(() => Message, sender => sender.sender)\n  sentMessages!: Message[];\n\n  @Field(() => [Message])\n  @OneToMany(() => Message, receiver => receiver.receiver)\n  receivedMessages!: Message[];\n\n  @Field(() => [UserToTeam])\n  @OneToMany(() => UserToTeam, teams => teams.user)\n  teams!: UserToTeam[];\n\n  @Field(() => [UserToProject])\n  @OneToMany(() => UserToProject, utp => utp.user)\n  projects!: UserToProject[];*/\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuth)@ApiOperation({summary: 'Get all users'})@ApiResponse({status: 200, description: 'Success.'})@Get()@ApiBearerAuth('BearerJWT')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { ApiBearerAuth, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { JwtAuth } from '../auth/guards/jwt-auth.guard';\n\n@ApiTags('Users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @UseGuards(JwtAuth)\n  @ApiOperation({ summary: 'Get all users' })\n  @ApiResponse({ status: 200, description: 'Success.' })\n  @Get()\n  @ApiBearerAuth('BearerJWT')\n  async getUsers() {\n    return await this.usersService.usersRepo.find({\n      relations: ['animals', 'products'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../../db/models/user.entity';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\n\n@Global()\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [UsersService],\n  controllers: [UsersController],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                usersRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            usersRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(User)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/users.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../db/models/user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    public readonly usersRepo: Repository,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/apollo-server.config.ts\n            \n            variable\n            apolloConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/apollo-server.config.ts\n            \n            variable\n            getErrorsAsString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/global.config.ts\n            \n            interface\n            GlobalConfig\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/config/global.config.ts\n            \n            variable\n            globalConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/services.config.ts\n            \n            injectable\n            DatabaseConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/services.config.ts\n            \n            injectable\n            JWTConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/db/models/animal.entity.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/db/models/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/db/models/todo.entity.ts\n            \n            class\n            Todo\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/models/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/animals/animals.resolver.ts\n            \n            class\n            AnimalsResolver\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/animals/animals.service.ts\n            \n            injectable\n            AnimalsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/animals/dto/create-animal.input.ts\n            \n            class\n            CreateAnimalInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/animals/dto/update-animal.input.ts\n            \n            class\n            UpdateAnimalInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            interface\n            IVerifyPassword\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/decorators/current-user.decorators.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/decorators/current-user.decorators.ts\n            \n            variable\n            CurrentUserGQL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.input.ts\n            \n            class\n            RegisterArgs\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.input.ts\n            \n            class\n            SocialRegisterInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGraphQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/strategies/google.strategy.ts\n            \n            injectable\n            GoogleStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/types/auth.types.ts\n            \n            class\n            LoginResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/micro/micro.controller.ts\n            \n            controller\n            MicroController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/micro/micro.service.ts\n            \n            injectable\n            MicroService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/products/dto/createProduct.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/users/dto/createUser.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/types/graphql.ts\n            \n            interface\n            AuthContext\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utils/types/graphql.ts\n            \n            interface\n            AuthUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/utils/types/graphql.ts\n            \n            interface\n            Context\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/types/graphql.ts\n            \n            interface\n            Upload\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/graphql : ^7.9.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/microservices : ^7.6.5\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/serve-static : ^2.1.4\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            apollo-server-express : ^2.19.0\n        \n            bcrypt : ^5.0.0\n        \n            cache-manager : ^3.4.0\n        \n            cache-manager-redis-store : ^2.0.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            graphql : ^15.4.0\n        \n            graphql-redis-subscriptions : ^2.3.1\n        \n            graphql-tools : ^7.0.2\n        \n            ioredis : ^4.19.4\n        \n            jsonwebtoken : ^8.5.1\n        \n            passport : ^0.4.1\n        \n            passport-google-oauth20 : ^2.0.0\n        \n            passport-jwt : ^4.0.0\n        \n            pg : ^8.5.1\n        \n            redis : ^3.0.2\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ANIMAL_TYPE   (src/.../animal.entity.ts)\n                        \n                        \n                            AUTH_APPS   (src/.../register.input.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/db/models/animal.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        ANIMAL_TYPE\n                    \n                \n                        \n                            \n                                 CAT\n                            \n                        \n                        \n                            \n                                 DOG\n                            \n                        \n                        \n                            \n                                 PLATYPUS\n                            \n                        \n            \n        \n\n    src/modules/auth/dto/register.input.ts\n    \n        \n            \n                \n                    \n                        \n                        AUTH_APPS\n                    \n                \n                        \n                            \n                                 Google\n                            \n                        \n                        \n                            \n                                 GitHub\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnimalsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MicroModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnimalsModule\n\n\n\ncluster_AnimalsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_MicroModule\n\n\n\ncluster_MicroModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAnimalsService\n\nAnimalsService\n\n\n\nAnimalsModule\n\nAnimalsModule\n\nAnimalsModule -->\n\nAnimalsService->AnimalsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnimalsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nMicroModule\n\nMicroModule\n\nAppModule -->\n\nMicroModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nMicroService\n\nMicroService\n\nMicroModule -->\n\nMicroService->MicroModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apolloConfig   (src/.../apollo-server.config.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorators.ts)\n                        \n                        \n                            CurrentUserGQL   (src/.../current-user.decorators.ts)\n                        \n                        \n                            getErrorsAsString   (src/.../apollo-server.config.ts)\n                        \n                        \n                            globalConfig   (src/.../global.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/apollo-server.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apolloConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GqlModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  autoSchemaFile: true,\n  introspection: true,\n  installSubscriptionHandlers: true,\n  playground: {\n    settings: { 'editor.fontSize': 22 },\n  },\n  formatError: (error: GraphQLError) => {\n    const formatedError: { message: string; statusCode: number } = {\n      message: getErrorsAsString(error.extensions?.exception?.response?.message || error.message),\n      statusCode: error.extensions?.exception?.response?.statusCode || error.extensions?.exception?.status || 500,\n    };\n    return formatedError;\n  },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getErrorsAsString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: string | string[]) => {\n  if (Array.isArray(data)) {\n    return data.join(', ');\n  }\n  return data;\n}\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/decorators/current-user.decorators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, context: ExecutionContext) => {\n  return context.switchToHttp().getRequest().user;\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUserGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, context: ExecutionContext) => {\n  const ctx = GqlExecutionContext.create(context);\n  return ctx.getContext().req.user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/config/global.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            globalConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): GlobalConfig => ({\n  url: process.env.NODE_ENV === 'production' ? 'https://sales-management-api.herokuapp.com' : 'http://localhost:3000',\n  port: process.env.PORT || 3000,\n  jwtSecret: process.env.JWT_SECRET,\n  redisUri: process.env.REDIS_URI || 'redis://localhost:6379',\n  database: {\n    type: 'postgres',\n    url: process.env.DATABASE_URL,\n    logging: false,\n    synchronize: true,\n    autoLoadEntities: true,\n    dropSchema: process.env.NODE_ENV !== 'production',\n  },\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
