var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/Animal.html",[0,0.031,1,1.875]],["body/classes/Animal.html",[0,0.029,1,2.427,2,1.112,3,0.189,4,0.164,5,0.164,6,2.455,7,0.265,8,1.034,9,2.044,10,1.442,11,4.474,12,0.767,13,0.023,14,1.384,15,1.453,16,2.455,17,1.01,18,3.256,19,1.097,20,2.773,21,3.879,22,3.434,23,3.879,24,3.256,25,1.327,26,2.773,27,2.217,28,3.256,29,4.803,30,3.256,31,4.515,32,3.256,33,0.344,34,2.779,35,2.837,36,2.455,37,1.048,38,3.961,39,3.434,40,3.879,41,3.434,42,1.417,43,2.773,44,0.264,45,2.773,46,2.773,47,2.773,48,3.256,49,2.028,50,3.256,51,0.01,52,0.014,53,0.01]],["title/modules/AnimalsModule.html",[54,1.274,55,2.192]],["body/modules/AnimalsModule.html",[0,0.036,1,2.179,3,0.237,4,0.206,5,0.206,13,0.022,25,1.136,33,0.435,44,0.237,51,0.013,52,0.016,53,0.013,54,2.137,55,4.132,56,1.898,57,2.03,58,2.348,59,2.348,60,2.03,61,3.389,62,2.348,63,3.483,64,3.483,65,3.81,66,3.051,67,2.348,68,2.348,69,4.089,70,0.874,71,3.483,72,3.618,73,4.089,74,2.547,75,1.396,76,2.785,77,1.671,78,2.348,79,4.089]],["title/classes/AnimalsResolver.html",[0,0.031,72,2.397]],["body/classes/AnimalsResolver.html",[0,0.019,1,3.214,2,0.726,3,0.123,4,0.107,5,0.107,7,0.173,9,1.813,10,1.421,11,3.933,12,0.644,13,0.023,14,1.614,15,1.356,17,0.985,27,1.448,33,0.348,37,0.685,44,0.123,49,3.12,51,0.007,52,0.01,53,0.007,65,3.049,71,1.811,72,2.262,76,1.448,80,1.603,81,1.357,82,4.618,83,2.636,84,5.01,85,4.618,86,2.829,87,3.321,88,3.321,89,0.869,90,2.127,91,2.127,92,1.926,93,1.613,94,2.127,95,3.321,96,2.127,97,2.17,98,2.127,99,2.876,100,3.48,101,2.068,102,1.542,103,2.127,104,3.321,105,2.127,106,1.811,107,2.127,108,2.127,109,2.127,110,2.127,111,3.778,112,2.127,113,1.811,114,2.783,115,3.933,116,3.081,117,2.829,118,3.321,119,2.127,120,2.829,121,2.127,122,3.081,123,1.811,124,1.603,125,1.221,126,1.887,127,1.056,128,0.987,129,0.869,130,2.127,131,2.461,132,2.127,133,1.959,134,1.133,135,3.321,136,2.127,137,2.127,138,1.603,139,2.127,140,2.127,141,2.127,142,2.127,143,2.127,144,2.127,145,2.127,146,2.127,147,2.829,148,2.127]],["title/injectables/AnimalsService.html",[65,2.021,149,0.753]],["body/injectables/AnimalsService.html",[0,0.03,1,1.825,3,0.198,4,0.173,5,0.173,7,0.279,8,1.071,10,0.825,12,0.676,13,0.022,15,1.205,17,1.032,25,0.732,33,0.413,42,1.49,44,0.198,51,0.011,52,0.015,53,0.011,65,2.71,70,0.732,75,1.169,76,2.333,77,1.4,89,1.928,92,1.317,93,1.103,129,2.729,149,1.009,150,1.4,151,2.917,152,4.159,153,5.815,154,3.601,155,4.599,156,3.425,157,3.836,158,3.425,159,4.718,160,3.425,161,3.425,162,2.938,163,3.425,164,2.133,165,1.49]],["title/modules/AppModule.html",[54,1.274,166,2.397]],["body/modules/AppModule.html",[0,0.027,3,0.179,4,0.156,5,0.156,13,0.023,33,0.447,37,0.993,42,1.342,44,0.179,51,0.01,52,0.014,53,0.01,54,1.847,55,3.798,56,1.432,57,1.531,58,1.771,59,1.771,60,1.531,61,1.771,62,1.771,66,2.518,67,1.771,68,1.771,70,0.66,74,1.921,75,1.053,78,2.93,102,1.432,128,1.432,165,1.342,166,4.675,167,2.627,168,2.627,169,3.798,170,3.798,171,3.798,172,3.798,173,3.084,174,5.101,175,3.084,176,3.084,177,3.084,178,3.084,179,2.731,180,2.627,181,2.326,182,3.084,183,3.084,184,3.734,185,2.731,186,3.084,187,3.084,188,3.084,189,3.084,190,3.084,191,3.084,192,3.084,193,3.084,194,2.627]],["title/interfaces/AuthContext.html",[195,1.201,196,2.021]],["body/interfaces/AuthContext.html",[3,0.234,4,0.204,5,0.204,7,0.329,8,1.197,9,1.38,12,0.47,13,0.022,14,1.228,19,1.554,25,1.379,33,0.346,44,0.36,51,0.013,52,0.016,53,0.013,125,2.321,134,2.153,195,2.123,196,3.028,197,2.153,198,2.517,199,2.155,200,2.913,201,2.636,202,3.284,203,3.996,204,1.554,205,2.007,206,2.753,207,2.321,208,2.753,209,2.753,210,2.753,211,2.753]],["title/modules/AuthModule.html",[54,1.274,169,2.192]],["body/modules/AuthModule.html",[0,0.032,3,0.208,4,0.181,5,0.181,13,0.023,25,0.767,33,0.447,44,0.208,51,0.011,52,0.015,53,0.011,54,2.002,56,1.665,57,1.781,58,2.061,59,2.061,60,1.781,61,3.175,62,2.061,66,2.797,67,2.061,68,2.061,70,0.767,74,2.235,75,1.225,77,1.466,78,2.797,165,1.561,169,4.144,180,3.056,184,4.148,194,3.056,212,3.056,213,3.056,214,3.174,215,3.982,216,3.588,217,2.706,218,3.317,219,3.588,220,4.87,221,2.061,222,3.588,223,2.061,224,3.588,225,3.033,226,3.056,227,3.588]],["title/classes/AuthResolver.html",[0,0.031,218,2.397]],["body/classes/AuthResolver.html",[0,0.019,2,0.747,3,0.127,4,0.11,5,0.11,7,0.178,9,0.747,10,1.223,12,0.59,13,0.023,15,1.198,17,0.901,19,1.294,25,1.378,33,0.39,37,0.705,44,0.127,49,1.363,51,0.007,52,0.011,53,0.007,70,0.468,77,0.894,81,1.388,83,2.954,89,0.894,92,1.952,93,1.635,97,1.917,100,2.892,113,1.864,115,3.544,116,2.561,117,2.892,126,1.917,127,1.086,128,1.016,129,0.894,131,2.217,133,1.601,138,1.65,201,1.917,204,1.952,205,1.686,214,2.667,217,1.65,218,2.313,228,1.864,229,2.313,230,2.892,231,3.396,232,1.864,233,2.188,234,2.188,235,4.162,236,2.188,237,2.188,238,3.086,239,2.188,240,2.921,241,2.188,242,2.188,243,2.188,244,2.188,245,2.921,246,2.188,247,3.544,248,2.188,249,2.188,250,1.363,251,1.363,252,1.65,253,2.313,254,2.188,255,1.363,256,1.363,257,2.188,258,1.65,259,1.65,260,2.188,261,1.864,262,2.188,263,3.396,264,2.188,265,2.188,266,2.188,267,3.396,268,2.188,269,2.188,270,2.188,271,2.188,272,2.188,273,2.188,274,1.49,275,2.188,276,3.396,277,2.188,278,2.188,279,1.363,280,1.65,281,2.188,282,2.188,283,1.864,284,2.188,285,2.188,286,1.086,287,2.188,288,1.864,289,2.188,290,2.188,291,2.188,292,3.396,293,2.188,294,2.188,295,1.363,296,2.188,297,2.188]],["title/injectables/AuthService.html",[149,0.753,214,1.747]],["body/injectables/AuthService.html",[0,0.018,3,0.115,4,0.1,5,0.1,7,0.162,8,0.716,9,1.076,10,1.169,12,0.671,13,0.023,15,0.508,17,0.96,19,1.391,25,1.104,33,0.368,42,0.866,44,0.115,51,0.006,52,0.01,53,0.006,70,0.426,75,0.679,77,0.813,81,1.288,83,2.868,89,1.288,92,1.866,93,1.563,97,1.82,126,1.288,127,1.943,129,2.21,131,2.372,133,1.52,149,0.674,150,0.813,152,4.083,154,3.077,157,2.787,162,1.963,164,1.239,165,0.866,195,0.679,201,1.82,204,1.866,205,1.565,214,1.565,223,1.143,238,2.787,240,3.215,250,1.239,251,1.239,255,1.239,279,2.438,280,2.377,298,1.501,299,3.152,300,3.334,301,3.334,302,3.334,303,1.501,304,4.607,305,1.99,306,2.685,307,2.787,308,2.409,309,1.99,310,1.501,311,1.695,312,2.21,313,1.99,314,1.99,315,1.99,316,3.152,317,1.99,318,1.99,319,3.033,320,1.99,321,1.99,322,1.99,323,2.377,324,3.334,325,3.792,326,1.501,327,3.334,328,1.695,329,2.147,330,2.685,331,2.685,332,2.685,333,2.685,334,1.695,335,1.695,336,1.695,337,1.695,338,1.695,339,1.501,340,1.695,341,2.685,342,1.695,343,1.695,344,4.133,345,1.695,346,1.695,347,1.695,348,1.355,349,1.695,350,1.695]],["title/interfaces/AuthUser.html",[195,1.201,201,1.438]],["body/interfaces/AuthUser.html",[3,0.224,4,0.195,5,0.195,7,0.315,8,1.162,9,2.086,12,0.667,13,0.022,14,1.744,19,1.649,25,1.095,33,0.336,44,0.354,51,0.012,52,0.016,53,0.012,125,2.219,134,2.059,195,2.086,196,2.219,197,2.059,198,2.407,199,1.579,200,2.541,201,2.497,202,3.188,203,3.909,204,2.349,205,3.033,206,2.632,207,2.219,208,2.632,209,2.632,210,2.632,211,2.632]],["title/interfaces/Context.html",[195,1.201,200,1.747]],["body/interfaces/Context.html",[3,0.226,4,0.197,5,0.197,7,0.318,8,1.171,9,1.334,12,0.599,13,0.023,14,1.187,19,1.537,25,1.364,33,0.338,44,0.355,51,0.012,52,0.016,53,0.012,125,2.244,134,3.075,195,2.095,196,2.244,197,2.082,198,2.433,199,1.597,200,2.865,201,2.607,202,3.822,203,3.93,204,1.502,205,1.94,206,4.18,207,2.244,208,2.661,209,2.661,210,2.661,211,2.661]],["title/classes/CreateAnimalInput.html",[0,0.031,99,2.192]],["body/classes/CreateAnimalInput.html",[0,0.044,2,1.268,3,0.215,4,0.187,5,0.187,7,0.303,8,1.132,10,1.355,12,0.766,13,0.022,14,1.828,15,1.536,17,1.068,19,1.201,29,4.535,33,0.369,34,2.912,37,1.196,44,0.215,51,0.012,52,0.015,53,0.012,76,2.53,99,3.105,114,3.395,229,3.833,351,5.343,352,2.801,353,5.627,354,3.715,355,3.715,356,3.715,357,3.715,358,3.105,359,3.715,360,3.715,361,3.759,362,3.715,363,3.715,364,2.313,365,3.715,366,3.715]],["title/classes/CreateProductDto.html",[0,0.031,367,2.397]],["body/classes/CreateProductDto.html",[0,0.047,2,1.412,3,0.24,4,0.209,5,0.209,7,0.337,8,1.215,10,1.429,12,0.622,13,0.022,14,1.626,15,1.367,17,0.95,19,1.289,33,0.351,44,0.24,51,0.013,52,0.017,53,0.013,286,2.657,339,4.036,364,2.577,367,3.645,368,3.524,369,5.534,370,4.137,371,5.352,372,4.137,373,4.137,374,4.137,375,5.352,376,4.137,377,5.933,378,2.818,379,5.352,380,5.352,381,4.137]],["title/classes/CreateUserDto.html",[0,0.031,382,2.653]],["body/classes/CreateUserDto.html",[0,0.041,2,1.601,3,0.272,4,0.237,5,0.237,7,0.382,8,1.315,10,1.514,12,0.673,13,0.021,14,1.761,17,1.028,19,1.395,44,0.272,51,0.015,52,0.018,53,0.015,129,2.809,229,4.282,382,4.368,383,3.994,384,4.689,385,4.689]],["title/injectables/DatabaseConfig.html",[149,0.753,179,2.192]],["body/injectables/DatabaseConfig.html",[0,0.045,3,0.221,4,0.192,5,0.192,7,0.31,10,0.917,12,0.442,13,0.023,17,0.9,33,0.398,44,0.294,51,0.012,52,0.016,53,0.012,70,0.814,75,1.3,81,2.072,89,1.556,92,1.464,93,1.226,97,1.556,128,2.353,133,1.731,149,1.219,150,1.556,154,3.593,165,1.657,179,3.157,223,2.187,225,2.372,303,2.872,386,2.872,387,5.174,388,3.808,389,3.808,390,4.318,391,4.318,392,4.318,393,3.244,394,3.244,395,3.244,396,3.244,397,3.244,398,3.244,399,3.244]],["title/interfaces/GlobalConfig.html",[185,2.192,195,1.201]],["body/interfaces/GlobalConfig.html",[3,0.211,4,0.184,5,0.184,7,0.297,8,1.119,12,0.724,13,0.023,14,1.695,19,1.63,33,0.239,44,0.211,51,0.011,52,0.015,53,0.011,75,1.246,102,2.287,126,1.492,185,3.719,195,1.246,197,1.945,312,1.812,400,2.752,401,5.311,402,5.311,403,5.311,404,4.845,405,5.972,406,4.197,407,3.715,408,3.109,409,2.752,410,3.109,411,3.109,412,3.109,413,3.109,414,2.752,415,3.109,416,3.109,417,3.109,418,3.109,419,3.109,420,3.109]],["title/injectables/GoogleStrategy.html",[149,0.753,421,2.653]],["body/injectables/GoogleStrategy.html",[0,0.031,3,0.204,4,0.178,5,0.178,7,0.287,10,1.16,12,0.41,13,0.022,17,0.855,19,1.532,33,0.359,44,0.204,51,0.011,52,0.015,53,0.011,70,0.754,81,1.968,83,2.721,89,2.24,92,1.356,93,1.136,97,1.442,126,1.442,133,1.204,149,1.03,150,1.442,199,1.442,204,1.851,221,2.026,230,3.005,240,2.999,308,2.721,421,3.63,422,3.005,423,4.101,424,3.528,425,4.815,426,5.481,427,6.163,428,3.528,429,4.815,430,3.005,431,4.101,432,2.66,433,3.005,434,3.005,435,3.005,436,3.528,437,3.528,438,3.528,439,3.528,440,3.528,441,3.528,442,3.528,443,2.403,444,3.528,445,3.528,446,3.528,447,3.528,448,3.528,449,3.528,450,3.528,451,3.528,452,3.528,453,3.528]],["title/controllers/HealthController.html",[454,1.875,455,2.397]],["body/controllers/HealthController.html",[0,0.037,3,0.243,4,0.212,5,0.212,7,0.342,13,0.022,15,1.073,17,0.746,33,0.392,44,0.243,51,0.013,52,0.017,53,0.013,70,0.899,81,2.21,97,1.718,128,1.951,133,1.435,154,3.185,165,1.829,326,4.077,409,3.169,454,2.239,455,3.683,456,2.239,457,3.58,458,3.58,459,5.407,460,6.311,461,4.203,462,4.203,463,5.407,464,5.407,465,5.407,466,3.169,467,4.203,468,4.203,469,4.203,470,4.203,471,4.203]],["title/modules/HealthModule.html",[54,1.274,170,2.192]],["body/modules/HealthModule.html",[0,0.042,3,0.278,4,0.242,5,0.242,13,0.022,33,0.416,44,0.278,51,0.015,52,0.018,53,0.015,54,2.127,56,2.226,70,1.026,78,2.754,170,3.658,455,4.325,456,3.13,466,3.616,472,4.796,473,4.796,474,5.874]],["title/interfaces/IVerifyPassword.html",[195,1.201,319,2.397]],["body/interfaces/IVerifyPassword.html",[0,0.023,3,0.148,4,0.129,5,0.129,7,0.209,8,0.869,9,1.307,12,0.445,13,0.023,19,1.526,25,0.818,33,0.399,42,1.114,44,0.148,51,0.008,52,0.012,53,0.008,70,0.547,75,0.874,77,1.046,83,2.276,89,1.046,126,1.564,127,2.276,129,1.873,131,2.71,133,1.736,149,0.818,152,3.558,154,2.442,157,2.198,162,1.595,164,1.595,165,1.114,195,0.874,197,1.364,201,1.564,204,2.093,205,1.9,214,1.271,223,1.47,238,2.921,240,2.855,250,1.595,251,1.595,255,1.595,279,2.855,280,2.886,298,1.93,300,2.181,301,2.181,302,2.181,304,3.904,306,2.181,307,2.632,308,2.276,312,1.9,319,3.122,323,2.886,324,4.865,325,5.043,326,1.93,327,3.904,328,2.181,329,2.607,330,3.26,331,3.26,332,3.26,333,3.26,334,2.181,335,2.181,336,2.181,337,2.181,338,2.181,339,1.93,340,2.181,341,3.26,342,2.181,343,2.181,344,4.637,345,2.181,346,2.181,347,2.181,348,1.744,349,2.181,350,2.181]],["title/injectables/JWTConfig.html",[149,0.753,225,2.192]],["body/injectables/JWTConfig.html",[0,0.044,3,0.214,4,0.187,5,0.187,7,0.302,10,0.892,12,0.43,13,0.023,17,0.883,19,0.892,33,0.394,44,0.288,51,0.011,52,0.015,53,0.011,70,0.792,75,1.264,81,2.033,89,1.513,92,1.423,93,1.192,97,1.513,128,2.309,133,1.698,149,1.201,150,1.513,154,3.57,165,1.611,179,2.305,223,2.126,225,3.098,303,2.791,386,2.791,387,3.153,390,4.236,391,4.236,392,4.236,393,5.115,394,4.236,395,4.236,396,3.153,397,4.236,398,3.153,399,3.153,475,3.701,476,3.701]],["title/injectables/JwtAuth.html",[149,0.753,477,2.021]],["body/injectables/JwtAuth.html",[0,0.05,3,0.26,4,0.227,5,0.227,13,0.022,33,0.404,37,1.446,44,0.327,51,0.014,52,0.018,53,0.014,70,0.96,126,1.835,133,1.533,149,1.318,150,1.835,199,2.304,221,2.578,256,2.796,477,3.238,478,3.385,479,3.385,480,4.252,481,3.824,482,3.824,483,4.802,484,3.824,485,3.385,486,3.385,487,3.824]],["title/injectables/JwtAuthGraphQL.html",[149,0.753,256,2.192]],["body/injectables/JwtAuthGraphQL.html",[0,0.047,3,0.241,4,0.21,5,0.21,7,0.338,10,1,12,0.482,13,0.022,17,0.737,33,0.39,37,1.338,44,0.311,51,0.013,52,0.017,53,0.013,70,0.888,81,2.193,92,1.597,93,1.338,97,1.697,126,1.697,133,1.418,149,1.271,150,1.697,199,2.193,200,2.062,221,2.385,256,3.342,477,2.385,478,4.046,479,3.132,480,4.738,481,3.537,482,3.537,483,4.57,484,4.57,485,3.132,486,3.132,487,3.537,488,5.366,489,4.153]],["title/injectables/JwtStrategy.html",[149,0.753,215,2.192]],["body/injectables/JwtStrategy.html",[0,0.031,3,0.202,4,0.176,5,0.176,7,0.285,9,1.193,10,1.152,12,0.556,13,0.023,17,0.849,25,1.023,33,0.403,44,0.202,51,0.011,52,0.015,53,0.011,70,0.747,81,1.954,83,2.707,89,1.428,92,1.839,93,1.54,97,1.428,126,1.428,127,1.734,128,1.621,129,1.428,131,1.861,133,1.193,147,2.975,149,1.023,150,1.428,199,1.428,201,2.396,204,1.343,205,1.734,214,3.148,215,2.978,217,2.634,221,2.006,232,2.975,250,2.176,251,2.176,255,2.176,279,2.176,295,2.176,312,1.734,414,2.634,423,4.073,430,2.975,431,2.975,432,2.634,434,2.975,435,2.975,490,2.975,491,3.493,492,4.782,493,3.493,494,3.493,495,2.975,496,3.493,497,3.493,498,3.493,499,3.493,500,3.493,501,3.493,502,3.493,503,3.493,504,3.493,505,3.493]],["title/classes/LoginResponse.html",[0,0.031,253,2.397]],["body/classes/LoginResponse.html",[0,0.037,2,1.435,3,0.243,4,0.212,5,0.212,7,0.342,8,1.228,12,0.628,13,0.022,15,1.381,17,0.96,19,1.302,25,1.429,33,0.354,34,2.775,35,3.368,37,1.354,44,0.243,51,0.013,52,0.017,53,0.013,77,1.718,93,2.032,101,3.368,102,2.929,253,3.683,295,3.723,506,3.58,507,4.077,508,4.203,509,4.203]],["title/classes/Product.html",[0,0.031,510,1.875]],["body/classes/Product.html",[0,0.031,2,1.181,3,0.2,4,0.175,5,0.175,7,0.282,8,1.078,9,2.089,10,1.407,12,0.711,13,0.022,14,1.775,15,1.491,16,2.608,17,1.037,19,1.144,20,2.946,21,4.045,22,3.581,25,1.431,26,2.946,27,2.356,33,0.356,34,2.841,35,2.958,37,1.114,38,4.09,39,3.581,40,4.045,41,3.581,42,1.505,43,2.946,44,0.2,51,0.011,52,0.015,53,0.011,199,1.941,274,2.356,369,4.62,510,2.531,511,2.946,512,4.62,513,3.459,514,4.045,515,3.459,516,3.459,517,3.459,518,3.459,519,3.459]],["title/controllers/ProductsController.html",[454,1.875,520,2.397]],["body/controllers/ProductsController.html",[0,0.019,3,0.123,4,0.107,5,0.107,7,0.173,9,1.891,10,1.204,12,0.581,13,0.023,14,1.896,15,1.277,17,0.888,25,0.985,33,0.376,44,0.123,51,0.007,52,0.01,53,0.007,70,0.453,81,1.353,83,3.24,86,2.82,92,1.922,93,1.61,97,2.044,102,1.537,106,1.804,116,1.597,126,1.666,127,2.023,128,0.983,129,0.866,131,2.455,133,1.81,201,1.883,202,1.319,240,2.87,250,1.319,251,1.319,252,1.597,255,1.319,258,1.597,261,1.804,279,2.538,283,1.804,288,1.804,348,1.443,367,3.772,378,1.443,404,3.073,454,1.764,456,1.128,477,1.216,510,2.824,520,2.255,521,1.804,522,3.311,523,3.311,524,3.311,525,3.311,526,2.118,527,2.118,528,2.118,529,2.118,530,2.118,531,2.118,532,2.118,533,2.118,534,2.118,535,3.311,536,2.118,537,2.118,538,3.311,539,2.118,540,4.076,541,2.118,542,2.118,543,2.118,544,5,545,2.118,546,2.118,547,2.341,548,1.804,549,2.118,550,1.597,551,1.804,552,1.804,553,1.804,554,2.496,555,2.118,556,2.118,557,2.118,558,2.118,559,1.804,560,2.118,561,2.82,562,2.118,563,2.118,564,2.118,565,2.118,566,2.118,567,3.311,568,3.311,569,3.311,570,3.471,571,2.118,572,3.471,573,2.118,574,2.118,575,2.118,576,2.118,577,2.118,578,2.118,579,2.118,580,1.804,581,2.118,582,2.118,583,2.118,584,2.118,585,2.118,586,2.118]],["title/modules/ProductsModule.html",[54,1.274,171,2.192]],["body/modules/ProductsModule.html",[0,0.036,3,0.234,4,0.204,5,0.204,13,0.022,25,1.127,33,0.434,44,0.234,51,0.013,52,0.016,53,0.013,54,2.125,56,1.876,57,2.007,58,2.321,59,2.321,60,2.007,61,3.37,62,2.321,66,3.028,67,2.321,68,2.321,70,0.864,74,2.517,75,1.38,77,1.652,78,2.321,171,4.119,456,2.809,510,2.153,520,3.996,547,3.798,548,3.443,550,3.048,587,3.443,588,3.443,589,4.042,590,4.042,591,4.042]],["title/injectables/ProductsService.html",[149,0.753,547,2.021]],["body/injectables/ProductsService.html",[0,0.03,3,0.198,4,0.173,5,0.173,7,0.279,8,1.071,10,0.825,12,0.676,13,0.022,15,1.205,17,1.032,25,0.732,33,0.413,42,1.49,44,0.198,51,0.011,52,0.015,53,0.011,70,0.732,75,1.169,77,1.4,89,1.928,92,1.317,93,1.103,129,2.729,149,1.009,150,1.4,152,4.159,154,3.601,155,4.599,157,3.836,162,2.938,164,2.133,165,1.49,510,1.825,547,2.71,550,2.583,592,2.917,593,5.815,594,3.425,595,3.425,596,3.425,597,4.718,598,3.425,599,3.425]],["title/classes/RegisterArgs.html",[0,0.031,245,2.192]],["body/classes/RegisterArgs.html",[0,0.043,2,0.987,3,0.167,4,0.146,5,0.146,7,0.235,8,0.95,10,1.299,12,0.693,13,0.023,15,1.461,17,1.016,19,1.571,31,2.179,33,0.274,34,2.924,36,2.179,37,0.931,44,0.285,51,0.009,52,0.013,53,0.009,93,0.931,101,3.832,102,2.503,134,2.229,204,1.891,238,2.825,245,2.606,286,2.841,295,1.8,307,2.825,308,2.442,312,2.961,329,1.968,358,1.8,361,3.155,364,1.8,507,4.065,600,1.968,601,3.709,602,3.155,603,2.89,604,2.89,605,2.89,606,2.89,607,2.89,608,2.89,609,3.155,610,3.564,611,3.709,612,2.461,613,2.461,614,3.564,615,2.461,616,2.461,617,2.461,618,2.461,619,2.461,620,2.461,621,2.461,622,2.461,623,2.461,624,2.461,625,2.461,626,2.461,627,2.461,628,1.968]],["title/classes/SocialRegisterInput.html",[0,0.031,628,2.397]],["body/classes/SocialRegisterInput.html",[0,0.046,2,1.098,3,0.186,4,0.162,5,0.162,7,0.262,8,1.025,10,1.088,12,0.692,13,0.023,15,1.153,17,0.802,19,1.529,31,2.425,33,0.296,34,3.008,36,2.425,37,1.036,44,0.302,51,0.01,52,0.014,53,0.01,93,1.036,101,3.85,102,2.096,134,1.713,204,1.237,238,1.847,245,2.003,286,2.591,295,3.25,307,2.997,308,2.591,312,2.959,329,2.19,358,2.003,361,3.405,364,2.003,507,2.425,600,2.19,601,2.425,602,2.425,609,3.405,610,3.846,611,4.267,612,2.739,613,2.739,614,3.846,615,2.739,616,2.739,617,2.739,618,2.739,619,2.739,620,2.739,621,2.739,622,2.739,623,2.739,624,2.739,625,2.739,626,2.739,627,2.739,628,3.076,629,3.216,630,3.216]],["title/classes/Todo.html",[0,0.031,443,2.397]],["body/classes/Todo.html",[0,0.04,2,1.539,3,0.261,4,0.228,5,0.228,7,0.367,8,1.284,12,0.524,13,0.022,14,1.718,15,1.151,17,0.8,33,0.296,34,3.006,35,3.521,37,1.452,44,0.261,51,0.014,52,0.018,53,0.014,114,3.851,286,2.807,358,2.808,443,3.851,631,3.84,632,6.177,633,5.654,634,5.654,635,4.509]],["title/classes/UpdateAnimalInput.html",[0,0.031,111,2.397]],["body/classes/UpdateAnimalInput.html",[0,0.04,2,1.533,3,0.26,4,0.227,5,0.227,7,0.366,8,1.28,9,2.105,12,0.522,13,0.022,14,1.713,15,1.147,17,0.797,33,0.37,34,2.617,37,1.446,44,0.26,51,0.014,52,0.018,53,0.014,99,2.796,111,3.84,114,3.84,120,3.824,199,1.835,352,3.385,358,2.796,580,3.824,609,4.252,636,4.802,637,4.489,638,4.489,639,4.489]],["title/interfaces/Upload.html",[195,1.201,207,2.021]],["body/interfaces/Upload.html",[3,0.218,4,0.19,5,0.19,7,0.307,8,1.143,9,1.286,12,0.703,13,0.022,14,1.145,19,1.672,25,1.076,33,0.33,44,0.35,51,0.012,52,0.016,53,0.012,125,2.164,134,2.007,195,2.065,196,2.164,197,2.007,198,2.347,199,1.54,200,2.499,201,2.316,202,3.135,203,3.86,204,1.449,205,1.87,206,2.566,207,2.891,208,4.12,209,4.12,210,4.12,211,4.12,640,4.287]],["title/classes/User.html",[0,0.031,25,0.753]],["body/classes/User.html",[0,0.018,1,2.586,2,0.679,3,0.115,4,0.1,5,0.1,7,0.162,8,0.716,9,1.657,10,1.072,12,0.701,13,0.023,14,1.353,15,1.542,16,1.501,17,1.072,19,1.391,22,3.357,23,2.685,25,0.837,27,2.147,33,0.368,34,2.992,35,1.963,37,0.641,38,4.461,39,2.377,41,2.377,42,0.866,44,0.115,49,2.438,51,0.006,52,0.01,53,0.006,101,2.773,102,1.463,199,1.288,204,1.505,229,2.666,238,2.248,274,2.666,286,2.21,307,2.248,308,1.943,310,2.952,312,2.785,510,2.586,512,3.334,514,2.685,601,2.952,602,2.377,641,1.695,642,1.99,643,3.152,644,1.99,645,1.99,646,1.99,647,2.685,648,1.99,649,3.152,650,3.152,651,1.99,652,4.453,653,3.152,654,1.99,655,1.99,656,1.99,657,1.99,658,1.99,659,1.99,660,5.776,661,1.99,662,1.99,663,4.607,664,1.99,665,4.853,666,4.853,667,1.99,668,4.853,669,1.99,670,2.685,671,1.99,672,1.99,673,1.99,674,3.152,675,3.152,676,1.99,677,3.152,678,3.152,679,1.99,680,1.99,681,1.99,682,1.99,683,3.152,684,1.99,685,1.99,686,1.99,687,1.99]],["title/controllers/UsersController.html",[454,1.875,688,2.397]],["body/controllers/UsersController.html",[0,0.034,3,0.222,4,0.194,5,0.194,7,0.313,13,0.022,15,0.98,17,0.681,33,0.399,44,0.222,49,2.389,51,0.012,52,0.016,53,0.012,70,0.82,81,2.082,83,2.839,97,1.568,128,1.781,129,1.568,131,2.044,133,1.31,138,2.893,252,2.893,258,2.893,274,2.613,286,2.529,378,2.613,454,2.044,456,2.044,458,3.267,477,2.203,551,3.267,552,3.267,553,3.267,570,3.267,572,3.267,670,4.338,688,3.469,689,3.267,690,6.092,691,3.836,692,3.836,693,5.094,694,3.836,695,3.836,696,3.284,697,3.267,698,5.094,699,5.094,700,3.836,701,3.836,702,3.836,703,3.836,704,3.836,705,3.836]],["title/modules/UsersModule.html",[54,1.274,172,2.192]],["body/modules/UsersModule.html",[0,0.035,3,0.228,4,0.199,5,0.199,13,0.022,25,0.842,33,0.419,44,0.228,51,0.012,52,0.016,53,0.012,54,2.098,56,1.827,57,1.954,58,2.261,59,2.261,60,1.954,61,3.326,62,3.326,66,2.976,67,2.261,68,2.261,70,0.842,74,2.452,75,1.344,77,1.609,78,2.261,172,4.169,226,3.353,456,2.761,688,3.945,696,4.041,697,3.353,706,3.353,707,3.353,708,3.353,709,3.936,710,5.181,711,3.936]],["title/injectables/UsersService.html",[149,0.753,696,2.021]],["body/injectables/UsersService.html",[0,0.036,3,0.239,4,0.208,5,0.208,7,0.336,8,1.212,10,0.993,12,0.62,13,0.022,15,1.052,17,0.948,25,0.881,33,0.411,42,1.793,44,0.239,51,0.013,52,0.017,53,0.013,70,0.881,75,1.407,77,1.684,89,2.182,92,1.584,93,1.327,129,2.42,149,1.142,150,1.684,152,3.688,155,4.724,157,3.727,162,3.325,164,2.567,696,3.066,712,3.51,713,4.121,714,4.121,715,4.121]],["title/coverage.html",[716,3.624]],["body/coverage.html",[0,0.058,1,1.283,5,0.122,6,1.816,12,0.28,13,0.022,25,0.515,51,0.007,52,0.011,53,0.007,60,1.196,65,1.383,72,1.64,80,2.756,99,1.5,111,1.64,122,1.816,127,1.196,149,1.334,151,2.051,179,1.5,181,1.816,185,2.276,195,1.905,196,1.383,198,3.071,200,1.196,201,0.984,207,1.383,214,1.196,215,1.5,218,1.64,225,1.5,228,2.051,245,1.5,253,1.64,256,1.5,259,1.816,298,2.756,319,1.64,351,2.051,352,2.756,367,1.64,368,2.051,382,1.816,383,2.051,386,2.756,400,2.756,421,1.816,422,2.051,443,1.64,454,2.353,455,1.64,457,2.051,477,1.383,478,2.756,479,2.756,490,2.051,506,2.051,510,1.283,511,2.051,520,1.64,521,2.051,547,1.383,554,1.816,592,2.051,600,2.489,628,1.64,631,2.051,636,2.051,640,2.051,641,2.051,688,1.64,689,2.051,696,1.383,712,2.051,716,1.816,717,2.408,718,2.408,719,2.408,720,3.113,721,3.113,722,5.581,723,7.183,724,5.975,725,2.051,726,5.8,727,6.341,728,5.581,729,2.408,730,2.051,731,3.655,732,4.417,733,3.113,734,3.113,735,2.408,736,2.408,737,2.408]],["title/dependencies.html",[57,2.102,738,2.937]],["body/dependencies.html",[0,0.044,13,0.023,37,1.188,42,1.605,51,0.011,52,0.015,53,0.011,57,1.831,70,0.789,75,1.259,123,3.142,124,2.781,125,3.22,165,1.605,221,2.118,223,2.118,308,1.831,323,2.781,364,2.297,378,2.512,432,4.522,433,3.142,466,2.781,495,3.142,559,3.142,561,4.226,739,5.607,740,3.689,741,3.689,742,3.689,743,3.689,744,4.962,745,3.689,746,3.689,747,3.689,748,3.689,749,4.962,750,3.689,751,3.689,752,3.689,753,3.689,754,3.689,755,3.689,756,3.689,757,3.689,758,3.689,759,3.689,760,4.962,761,3.689,762,3.689,763,3.689,764,3.689,765,3.689,766,3.689,767,3.689,768,3.689,769,3.689,770,3.689,771,3.689,772,3.689,773,3.689,774,3.689,775,3.689]],["title/miscellaneous/enumerations.html",[776,1.687,777,3.605]],["body/miscellaneous/enumerations.html",[6,3.919,7,0.423,13,0.019,29,4.649,45,4.427,46,4.427,47,4.427,51,0.016,52,0.019,53,0.016,307,2.985,308,2.58,600,3.54,611,4.649,776,2.985,777,4.427,778,5.197,779,5.197]],["title/miscellaneous/functions.html",[776,1.687,780,3.605]],["body/miscellaneous/functions.html",[7,0.441,13,0.02,51,0.017,52,0.02,53,0.017,60,3.319,730,4.608,776,3.107,780,4.608,781,5.411]],["title/index.html",[7,0.239,782,2.937,783,2.937]],["body/index.html",[4,0.191,13,0.022,51,0.012,52,0.016,53,0.012,124,2.851,157,2.172,286,1.877,407,2.851,716,2.851,784,3.781,785,3.781,786,5.045,787,3.781,788,3.781,789,3.781,790,3.781,791,3.781,792,5.678,793,3.781,794,3.781,795,3.781,796,6.627,797,3.781,798,3.781,799,3.781,800,6.492,801,3.781,802,3.781,803,5.045,804,3.781,805,3.781,806,3.781,807,5.045,808,5.045,809,3.781,810,3.781,811,3.781,812,5.045,813,5.045,814,3.781,815,3.781,816,3.781,817,3.781,818,3.781,819,3.22,820,3.781,821,3.781,822,3.781,823,3.781,824,3.781,825,3.781,826,3.781,827,3.781,828,3.781,829,3.781,830,3.781,831,3.781,832,3.781,833,3.781,834,3.781,835,3.781,836,3.781,837,3.781]],["title/modules.html",[56,2.231]],["body/modules.html",[13,0.018,51,0.015,52,0.018,53,0.015,55,3.028,56,2.257,166,3.311,169,3.028,170,3.028,171,3.028,172,3.028,819,5.806,838,6.817,839,6.817,840,6.933,841,4.862,842,4.862]],["title/overview.html",[843,4.093]],["body/overview.html",[2,1.251,13,0.022,51,0.011,52,0.015,53,0.011,54,1.326,55,3.889,56,1.7,57,1.818,58,2.104,59,2.104,60,1.818,61,2.104,62,2.104,63,3.12,64,3.12,65,3.209,66,2.836,67,2.104,68,2.104,150,1.497,166,4.739,167,3.12,168,3.12,169,4.095,170,3.48,171,3.889,172,4.006,197,1.952,212,3.12,213,3.12,214,2.774,215,3.48,348,2.495,456,1.952,547,3.209,587,3.12,588,3.12,696,3.776,706,3.12,707,3.12,708,3.12,843,3.12,844,4.939,845,3.663,846,3.663]],["title/miscellaneous/variables.html",[776,1.687,847,3.605]],["body/miscellaneous/variables.html",[7,0.238,12,0.49,13,0.023,14,0.888,19,1.192,51,0.009,52,0.013,53,0.009,80,2.203,102,2.667,122,3.732,126,1.724,127,1.451,133,1.962,181,3.18,185,3.083,200,2.094,247,3.592,259,3.18,310,4.515,311,5.1,312,1.451,400,2.203,401,2.489,402,2.489,403,2.489,404,3.18,406,3.592,407,3.18,408,2.489,409,2.203,410,2.489,411,2.489,412,2.489,413,2.489,414,2.203,415,2.489,416,2.489,417,2.489,418,2.489,419,2.489,420,2.489,480,3.18,485,2.203,486,2.203,554,3.18,647,2.489,663,3.592,720,2.489,721,4.215,725,3.592,733,2.489,734,4.215,776,1.678,847,2.489,848,4.218,849,4.218,850,2.922,851,2.922,852,2.922,853,2.922,854,2.922,855,2.922,856,2.922,857,2.922,858,2.922,859,2.922,860,2.922,861,2.922,862,2.922,863,4.218,864,4.218,865,2.922,866,2.922,867,2.922,868,2.922,869,2.922,870,2.922,871,4.218,872,4.218,873,2.922,874,2.922]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":768,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":755,"title":{},"body":{"dependencies.html":{}}}],["0.2.29",{"_index":775,"title":{},"body":{"dependencies.html":{}}}],["0.3.1",{"_index":754,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":761,"title":{},"body":{"dependencies.html":{}}}],["0.6.1",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":729,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":728,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":735,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":732,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":731,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":764,"title":{},"body":{"dependencies.html":{}}}],["1.0.33",{"_index":750,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":348,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"controllers/ProductsController.html":{},"overview.html":{}}}],["100",{"_index":23,"title":{},"body":{"classes/Animal.html":{},"classes/User.html":{}}}],["1000",{"_index":266,"title":{},"body":{"classes/AuthResolver.html":{}}}],["13",{"_index":846,"title":{},"body":{"overview.html":{}}}],["15.4.0",{"_index":756,"title":{},"body":{"dependencies.html":{}}}],["150",{"_index":514,"title":{},"body":{"classes/Product.html":{},"classes/User.html":{}}}],["1h",{"_index":396,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["2.0.0",{"_index":762,"title":{},"body":{"dependencies.html":{}}}],["2.19.0",{"_index":751,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":693,"title":{},"body":{"controllers/UsersController.html":{}}}],["22",{"_index":859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":268,"title":{},"body":{"classes/AuthResolver.html":{}}}],["3",{"_index":845,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":770,"title":{},"body":{"dependencies.html":{}}}],["3000",{"_index":413,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["365.25",{"_index":270,"title":{},"body":{"classes/AuthResolver.html":{}}}],["4.0.0",{"_index":763,"title":{},"body":{"dependencies.html":{}}}],["4.1.5",{"_index":774,"title":{},"body":{"dependencies.html":{}}}],["4.7.5",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["5.0.0",{"_index":752,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":647,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["6",{"_index":844,"title":{},"body":{"overview.html":{}}}],["6.6.3",{"_index":772,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":267,"title":{},"body":{"classes/AuthResolver.html":{}}}],["7.0.1",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":758,"title":{},"body":{"dependencies.html":{}}}],["7.1.5",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["7.5.1",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["7.9.1",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["8.5.1",{"_index":760,"title":{},"body":{"dependencies.html":{}}}],["a.owner",{"_index":673,"title":{},"body":{"classes/User.html":{}}}],["accesstoken",{"_index":429,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["actual",{"_index":375,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["admin",{"_index":294,"title":{},"body":{"classes/AuthResolver.html":{}}}],["age",{"_index":229,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["age(@root",{"_index":262,"title":{},"body":{"classes/AuthResolver.html":{}}}],["age(user",{"_index":234,"title":{},"body":{"classes/AuthResolver.html":{}}}],["amazing",{"_index":820,"title":{},"body":{"index.html":{}}}],["animal",{"_index":1,"title":{"classes/Animal.html":{}},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/User.html":{},"coverage.html":{}}}],["animal.entity",{"_index":662,"title":{},"body":{"classes/User.html":{}}}],["animal.input",{"_index":120,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/UpdateAnimalInput.html":{}}}],["animal.input.ts",{"_index":352,"title":{},"body":{"classes/CreateAnimalInput.html":{},"classes/UpdateAnimalInput.html":{},"coverage.html":{}}}],["animal.input.ts:13",{"_index":355,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["animal.input.ts:16",{"_index":360,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["animal.input.ts:19",{"_index":359,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["animal.input.ts:7",{"_index":637,"title":{},"body":{"classes/UpdateAnimalInput.html":{}}}],["animal.input.ts:9",{"_index":357,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["animal_type",{"_index":29,"title":{},"body":{"classes/Animal.html":{},"classes/CreateAnimalInput.html":{},"miscellaneous/enumerations.html":{}}}],["animaladded",{"_index":82,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["animalrepo",{"_index":153,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["animals",{"_index":49,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["animals.resolver",{"_index":73,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["animals.service",{"_index":71,"title":{},"body":{"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{}}}],["animalsmodule",{"_index":55,"title":{"modules/AnimalsModule.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["animalsresolver",{"_index":72,"title":{"classes/AnimalsResolver.html":{}},"body":{"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"coverage.html":{}}}],["animalsservice",{"_index":65,"title":{"injectables/AnimalsService.html":{}},"body":{"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"coverage.html":{},"overview.html":{}}}],["api",{"_index":560,"title":{},"body":{"controllers/ProductsController.html":{}}}],["api.herokuapp.com",{"_index":410,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":551,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apibearerauth('bearerjwt",{"_index":572,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apioperation",{"_index":698,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":377,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apiproperty({description",{"_index":370,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["apiresponse",{"_index":699,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":552,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["apitags('products",{"_index":556,"title":{},"body":{"controllers/ProductsController.html":{}}}],["apitags('users",{"_index":700,"title":{},"body":{"controllers/UsersController.html":{}}}],["aplicacion",{"_index":625,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["apollo",{"_index":123,"title":{},"body":{"classes/AnimalsResolver.html":{},"dependencies.html":{}}}],["apolloconfig",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":798,"title":{},"body":{"index.html":{}}}],["applications",{"_index":791,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":166,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apps",{"_index":618,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["args",{"_index":113,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{}}}],["args('password",{"_index":290,"title":{},"body":{"classes/AuthResolver.html":{}}}],["argstype",{"_index":361,"title":{},"body":{"classes/CreateAnimalInput.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["array.isarray(data",{"_index":869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":83,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["auth",{"_index":617,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["auth.guard",{"_index":258,"title":{},"body":{"classes/AuthResolver.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["auth.guard.ts",{"_index":479,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"coverage.html":{}}}],["auth.guard.ts:10",{"_index":489,"title":{},"body":{"injectables/JwtAuthGraphQL.html":{}}}],["auth.resolver",{"_index":219,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":217,"title":{},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/JwtStrategy.html":{}}}],["auth/decorators/current",{"_index":555,"title":{},"body":{"controllers/ProductsController.html":{}}}],["auth/guards/jwt",{"_index":553,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["auth_apps",{"_index":611,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"miscellaneous/enumerations.html":{}}}],["authcontext",{"_index":196,"title":{"interfaces/AuthContext.html":{}},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["authguard",{"_index":481,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{}}}],["authguard('jwt",{"_index":483,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{}}}],["authmodule",{"_index":169,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":830,"title":{},"body":{"index.html":{}}}],["authresolver",{"_index":218,"title":{"classes/AuthResolver.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"coverage.html":{}}}],["authservice",{"_index":214,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authuser",{"_index":201,"title":{"interfaces/AuthUser.html":{}},"body":{"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["autoloadentities",{"_index":419,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["autoschemafile",{"_index":853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":842,"title":{},"body":{"modules.html":{}}}],["await",{"_index":131,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["backers",{"_index":821,"title":{},"body":{"index.html":{}}}],["baseentity",{"_index":512,"title":{},"body":{"classes/Product.html":{},"classes/User.html":{}}}],["bcrypt",{"_index":323,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"dependencies.html":{}}}],["bcrypt.compare(inputpassword",{"_index":349,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["bcrypt.hash(finalpass",{"_index":347,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["body",{"_index":541,"title":{},"body":{"controllers/ProductsController.html":{}}}],["boolean",{"_index":652,"title":{},"body":{"classes/User.html":{}}}],["bootstrap",{"_index":60,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["borndate",{"_index":601,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{}}}],["bro",{"_index":578,"title":{},"body":{"controllers/ProductsController.html":{}}}],["browse",{"_index":840,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":838,"title":{},"body":{"modules.html":{}}}],["building",{"_index":787,"title":{},"body":{"index.html":{}}}],["callbackurl",{"_index":440,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["cat",{"_index":45,"title":{},"body":{"classes/Animal.html":{},"miscellaneous/enumerations.html":{}}}],["check",{"_index":460,"title":{},"body":{"controllers/HealthController.html":{}}}],["class",{"_index":0,"title":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{}},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{},"overview.html":{}}}],["clientid",{"_index":436,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["clientsecret",{"_index":438,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["cluster_animalsmodule",{"_index":63,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_animalsmodule_providers",{"_index":64,"title":{},"body":{"modules/AnimalsModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":212,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":213,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_productsmodule",{"_index":587,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_productsmodule_providers",{"_index":588,"title":{},"body":{"modules/ProductsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":706,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":707,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":708,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["column",{"_index":38,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["como",{"_index":627,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["config/apollo",{"_index":182,"title":{},"body":{"modules/AppModule.html":{}}}],["config/global.config",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["config/services.config",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["configmodule.forroot",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":154,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"controllers/HealthController.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/ProductsService.html":{}}}],["connection",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":126,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":89,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["constructor(animalrepo",{"_index":156,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["constructor(animalsservice",{"_index":90,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["constructor(authservice",{"_index":232,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/JwtStrategy.html":{}}}],["constructor(configservice",{"_index":303,"title":{},"body":{"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["constructor(private",{"_index":128,"title":{},"body":{"classes/AnimalsResolver.html":{},"modules/AppModule.html":{},"classes/AuthResolver.html":{},"injectables/DatabaseConfig.html":{},"controllers/HealthController.html":{},"injectables/JWTConfig.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["constructor(productsrepo",{"_index":594,"title":{},"body":{"injectables/ProductsService.html":{}}}],["constructor(usersrepo",{"_index":713,"title":{},"body":{"injectables/UsersService.html":{}}}],["context",{"_index":200,"title":{"interfaces/Context.html":{}},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"injectables/JwtAuthGraphQL.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.switchtohttp().getrequest().user",{"_index":873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contraseña",{"_index":330,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["controller",{"_index":454,"title":{"controllers/HealthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/HealthController.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('health",{"_index":467,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('users",{"_index":701,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":456,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":716,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":580,"title":{},"body":{"controllers/ProductsController.html":{},"classes/UpdateAnimalInput.html":{}}}],["createanimal",{"_index":84,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["createanimal(@args",{"_index":130,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["createanimal(createanimal",{"_index":98,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["createanimalinput",{"_index":99,"title":{"classes/CreateAnimalInput.html":{}},"body":{"classes/AnimalsResolver.html":{},"classes/CreateAnimalInput.html":{},"classes/UpdateAnimalInput.html":{},"coverage.html":{}}}],["createjwtoptions",{"_index":393,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["createone",{"_index":522,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createone(@body",{"_index":573,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createone(createproductdto",{"_index":526,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createparamdecorator((data",{"_index":871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":367,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"coverage.html":{}}}],["createproductdto.name",{"_index":574,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createproductdto.stock",{"_index":575,"title":{},"body":{"controllers/ProductsController.html":{}}}],["createreadstream",{"_index":211,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["createtypeormoptions",{"_index":387,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["createuserdto",{"_index":382,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["ctx",{"_index":485,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"miscellaneous/variables.html":{}}}],["ctx.getcontext().req",{"_index":487,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{}}}],["ctx.getcontext().req.user",{"_index":874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentuser",{"_index":554,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["currentusergql",{"_index":259,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":247,"title":{},"body":{"classes/AuthResolver.html":{},"miscellaneous/variables.html":{}}}],["data.description",{"_index":287,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.email",{"_index":278,"title":{},"body":{"classes/AuthResolver.html":{}}}],["data.join",{"_index":870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":401,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["databaseconfig",{"_index":179,"title":{"injectables/DatabaseConfig.html":{}},"body":{"modules/AppModule.html":{},"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{},"coverage.html":{}}}],["date",{"_index":602,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{}}}],["date.now",{"_index":264,"title":{},"body":{"classes/AuthResolver.html":{}}}],["datos",{"_index":619,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["db/models/animal.entity",{"_index":76,"title":{},"body":{"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/CreateAnimalInput.html":{}}}],["db/models/product.entity",{"_index":550,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{}}}],["db/models/user.entity",{"_index":77,"title":{},"body":{"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"classes/LoginResponse.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["de",{"_index":339,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateProductDto.html":{},"interfaces/IVerifyPassword.html":{}}}],["declarations",{"_index":59,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":15,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"controllers/HealthController.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["decorators/current",{"_index":260,"title":{},"body":{"classes/AuthResolver.html":{}}}],["default",{"_index":310,"title":{},"body":{"injectables/AuthService.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":17,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["definidas",{"_index":343,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["delete",{"_index":542,"title":{},"body":{"controllers/ProductsController.html":{}}}],["delete('/products/:id",{"_index":582,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteone",{"_index":523,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteone(@param('id",{"_index":583,"title":{},"body":{"controllers/ProductsController.html":{}}}],["deleteone(id",{"_index":529,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dependencies",{"_index":57,"title":{"dependencies.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":286,"title":{},"body":{"classes/AuthResolver.html":{},"classes/CreateProductDto.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["development",{"_index":799,"title":{},"body":{"index.html":{}}}],["diff",{"_index":263,"title":{},"body":{"classes/AuthResolver.html":{}}}],["dns",{"_index":468,"title":{},"body":{"controllers/HealthController.html":{}}}],["dnshealthindicator",{"_index":463,"title":{},"body":{"controllers/HealthController.html":{}}}],["documentation",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["dog",{"_index":46,"title":{},"body":{"classes/Animal.html":{},"miscellaneous/enumerations.html":{}}}],["dropschema",{"_index":420,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["dto/create",{"_index":119,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["dto/createproduct.dto",{"_index":549,"title":{},"body":{"controllers/ProductsController.html":{}}}],["dto/register.input",{"_index":249,"title":{},"body":{"classes/AuthResolver.html":{}}}],["dto/update",{"_index":121,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["e2e",{"_index":809,"title":{},"body":{"index.html":{}}}],["editone",{"_index":524,"title":{},"body":{"controllers/ProductsController.html":{}}}],["editone(@param('id",{"_index":586,"title":{},"body":{"controllers/ProductsController.html":{}}}],["editone(id",{"_index":532,"title":{},"body":{"controllers/ProductsController.html":{}}}],["editor.fontsize",{"_index":858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["efficient",{"_index":788,"title":{},"body":{"index.html":{}}}],["email",{"_index":204,"title":{},"body":{"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{}}}],["emails",{"_index":445,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["emails[0].value",{"_index":447,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["encoding",{"_index":210,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["encryptedpassword",{"_index":325,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["entity",{"_index":39,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["entorno",{"_index":340,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["enum",{"_index":31,"title":{},"body":{"classes/Animal.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["enumerations",{"_index":777,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["error",{"_index":861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error('variables",{"_index":338,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["error.extensions?.exception?.response?.statuscode",{"_index":867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.extensions?.exception?.status",{"_index":868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error.message",{"_index":866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":633,"title":{},"body":{"classes/Todo.html":{}}}],["examplefield",{"_index":632,"title":{},"body":{"classes/Todo.html":{}}}],["executioncontext",{"_index":480,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"miscellaneous/variables.html":{}}}],["existe",{"_index":568,"title":{},"body":{"controllers/ProductsController.html":{}}}],["expiresin",{"_index":395,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["export",{"_index":44,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":62,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":125,"title":{},"body":{"classes/AnimalsResolver.html":{},"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{},"dependencies.html":{}}}],["extends",{"_index":199,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/Product.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{}}}],["externa",{"_index":626,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["external",{"_index":616,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["external_auth_apps",{"_index":613,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["extractjwt",{"_index":494,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":497,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":312,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["false})@isemail",{"_index":605,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["field",{"_index":34,"title":{},"body":{"classes/Animal.html":{},"classes/CreateAnimalInput.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{}}}],["field()@column",{"_index":516,"title":{},"body":{"classes/Product.html":{}}}],["field()@column({default",{"_index":653,"title":{},"body":{"classes/User.html":{}}}],["field()@column({length",{"_index":649,"title":{},"body":{"classes/User.html":{}}}],["field()@column({type",{"_index":20,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{}}}],["field()@min(18",{"_index":354,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["field()@minlength(4",{"_index":356,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["field(undefined",{"_index":358,"title":{},"body":{"classes/CreateAnimalInput.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{}}}],["field(undefined)@column({default",{"_index":646,"title":{},"body":{"classes/User.html":{}}}],["field(undefined)@column({type",{"_index":30,"title":{},"body":{"classes/Animal.html":{}}}],["field(undefined)@manytoone(undefined",{"_index":26,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{}}}],["field(undefined)@onetomany(undefined",{"_index":643,"title":{},"body":{"classes/User.html":{}}}],["field(undefined)@primarygeneratedcolumn",{"_index":16,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["field({nullable",{"_index":507,"title":{},"body":{"classes/LoginResponse.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filename",{"_index":208,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["finalpass",{"_index":344,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["findall",{"_index":85,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["findone",{"_index":86,"title":{},"body":{"classes/AnimalsResolver.html":{},"controllers/ProductsController.html":{}}}],["findone(@args('id",{"_index":140,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["findone(@param('id",{"_index":565,"title":{},"body":{"controllers/ProductsController.html":{}}}],["findone(id",{"_index":106,"title":{},"body":{"classes/AnimalsResolver.html":{},"controllers/ProductsController.html":{}}}],["firstname",{"_index":448,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["formatederror",{"_index":863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formaterror",{"_index":860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["framework",{"_index":786,"title":{},"body":{"index.html":{}}}],["friendrequest",{"_index":666,"title":{},"body":{"classes/User.html":{}}}],["friendrequest/friendrequest",{"_index":667,"title":{},"body":{"classes/User.html":{}}}],["friends",{"_index":680,"title":{},"body":{"classes/User.html":{}}}],["fucking",{"_index":577,"title":{},"body":{"controllers/ProductsController.html":{}}}],["function",{"_index":640,"title":{},"body":{"interfaces/Upload.html":{},"coverage.html":{}}}],["functions",{"_index":780,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get('/products",{"_index":538,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get('/products/:id",{"_index":535,"title":{},"body":{"controllers/ProductsController.html":{}}}],["get()@healthcheck",{"_index":461,"title":{},"body":{"controllers/HealthController.html":{}}}],["getall",{"_index":525,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getall(@query('limit",{"_index":562,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getall(limit",{"_index":537,"title":{},"body":{"controllers/ProductsController.html":{}}}],["getencryptedcredentials",{"_index":299,"title":{},"body":{"injectables/AuthService.html":{}}}],["getencryptedcredentials(password",{"_index":306,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["geterrorsasstring",{"_index":725,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["geterrorsasstring(error.extensions?.exception?.response?.message",{"_index":865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getrequest",{"_index":488,"title":{},"body":{"injectables/JwtAuthGraphQL.html":{}}}],["getrequest(context",{"_index":484,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{}}}],["getting",{"_index":782,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":300,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["gettoken(undefined",{"_index":313,"title":{},"body":{"injectables/AuthService.html":{}}}],["getusers",{"_index":690,"title":{},"body":{"controllers/UsersController.html":{}}}],["github",{"_index":307,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{},"miscellaneous/enumerations.html":{}}}],["global",{"_index":710,"title":{},"body":{"modules/UsersModule.html":{}}}],["globalconfig",{"_index":185,"title":{"interfaces/GlobalConfig.html":{}},"body":{"modules/AppModule.html":{},"interfaces/GlobalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["google",{"_index":308,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{}}}],["googlestrategy",{"_index":421,"title":{"injectables/GoogleStrategy.html":{}},"body":{"injectables/GoogleStrategy.html":{},"coverage.html":{}}}],["gqlexecutioncontext",{"_index":482,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{}}}],["gqlexecutioncontext.create(context",{"_index":486,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"miscellaneous/variables.html":{}}}],["gqlmoduleoptions",{"_index":852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graph",{"_index":841,"title":{},"body":{"modules.html":{}}}],["graphql",{"_index":561,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["graphqlerror",{"_index":862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["graphqlmodule",{"_index":177,"title":{},"body":{"modules/AppModule.html":{}}}],["graphqlmodule.forroot(apolloconfig",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["grow",{"_index":816,"title":{},"body":{"index.html":{}}}],["guards/jwt",{"_index":257,"title":{},"body":{"classes/AuthResolver.html":{}}}],["health",{"_index":459,"title":{},"body":{"controllers/HealthController.html":{}}}],["health.controller",{"_index":473,"title":{},"body":{"modules/HealthModule.html":{}}}],["healthcheck",{"_index":464,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":465,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":455,"title":{"controllers/HealthController.html":{}},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"coverage.html":{}}}],["healthmodule",{"_index":170,"title":{"modules/HealthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HealthModule.html":{},"modules.html":{},"overview.html":{}}}],["here",{"_index":827,"title":{},"body":{"index.html":{}}}],["http://localhost:3000",{"_index":411,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:3000/google/redirect",{"_index":441,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["httpexception",{"_index":250,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{}}}],["httpexception('bad",{"_index":576,"title":{},"body":{"controllers/ProductsController.html":{}}}],["httpexception('invalid",{"_index":501,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["httpexception('producto",{"_index":567,"title":{},"body":{"controllers/ProductsController.html":{}}}],["httpexception('usuario",{"_index":280,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["https://nestjs.com",{"_index":834,"title":{},"body":{"index.html":{}}}],["https://sales",{"_index":408,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":251,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{}}}],["httpstatus.bad_request",{"_index":283,"title":{},"body":{"classes/AuthResolver.html":{},"controllers/ProductsController.html":{}}}],["httpstatus.conflict",{"_index":332,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["httpstatus.not_found",{"_index":569,"title":{},"body":{"controllers/ProductsController.html":{}}}],["httpstatus.unauthorized",{"_index":502,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["id",{"_index":9,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{}}}],["identifier",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["ignoreexpiration",{"_index":498,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":392,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["import",{"_index":33,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":78,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["incorrectos",{"_index":331,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexroute",{"_index":557,"title":{},"body":{"controllers/ProductsController.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["ingresar",{"_index":622,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["injectable",{"_index":149,"title":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":150,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectrepository",{"_index":164,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["injectrepository(animal",{"_index":159,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["injectrepository(product",{"_index":597,"title":{},"body":{"injectables/ProductsService.html":{}}}],["injectrepository(user",{"_index":162,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["inputpassword",{"_index":324,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["inputtype",{"_index":609,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/UpdateAnimalInput.html":{}}}],["installation",{"_index":795,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":797,"title":{},"body":{"index.html":{}}}],["installsubscriptionhandlers",{"_index":855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["int",{"_index":114,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/CreateAnimalInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{}}}],["interface",{"_index":195,"title":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"interfaces/Upload.html":{}},"body":{"interfaces/AuthContext.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["interfaces",{"_index":197,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"interfaces/Upload.html":{},"overview.html":{}}}],["introspection",{"_index":854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isemail",{"_index":610,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["isglobal",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["isint",{"_index":379,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isint()@apiproperty({description",{"_index":374,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring",{"_index":380,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["iverifypassword",{"_index":319,"title":{"interfaces/IVerifyPassword.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"coverage.html":{}}}],["join",{"_index":823,"title":{},"body":{"index.html":{}}}],["jsonwebtoken",{"_index":759,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":495,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwtauth",{"_index":477,"title":{"injectables/JwtAuth.html":{}},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["jwtauthgraphql",{"_index":256,"title":{"injectables/JwtAuthGraphQL.html":{}},"body":{"classes/AuthResolver.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"coverage.html":{}}}],["jwtconfig",{"_index":225,"title":{"injectables/JWTConfig.html":{}},"body":{"modules/AuthModule.html":{},"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":496,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":222,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtoptionsfactory",{"_index":391,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["jwtsecret",{"_index":402,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["jwtservice",{"_index":304,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["jwtstrategy",{"_index":215,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":831,"title":{},"body":{"index.html":{}}}],["lastname",{"_index":450,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["legend",{"_index":58,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":22,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["license",{"_index":837,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":813,"title":{},"body":{"index.html":{}}}],["limit",{"_index":540,"title":{},"body":{"controllers/ProductsController.html":{}}}],["literal",{"_index":316,"title":{},"body":{"injectables/AuthService.html":{}}}],["load",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["local",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["logging",{"_index":417,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":230,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/GoogleStrategy.html":{}}}],["login(@args('email",{"_index":289,"title":{},"body":{"classes/AuthResolver.html":{}}}],["login(email",{"_index":237,"title":{},"body":{"classes/AuthResolver.html":{}}}],["loginresponse",{"_index":253,"title":{"classes/LoginResponse.html":{}},"body":{"classes/AuthResolver.html":{},"classes/LoginResponse.html":{},"coverage.html":{}}}],["lucas.vergara@usm.cl",{"_index":293,"title":{},"body":{"classes/AuthResolver.html":{}}}],["management",{"_index":409,"title":{},"body":{"interfaces/GlobalConfig.html":{},"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["mandatory",{"_index":615,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["manytoone",{"_index":40,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{}}}],["matching",{"_index":52,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.abs(math.trunc(diff",{"_index":269,"title":{},"body":{"classes/AuthResolver.html":{}}}],["me(@currentusergql",{"_index":272,"title":{},"body":{"classes/AuthResolver.html":{}}}],["me(user",{"_index":241,"title":{},"body":{"classes/AuthResolver.html":{}}}],["mediante",{"_index":623,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["message",{"_index":663,"title":{},"body":{"classes/User.html":{},"miscellaneous/variables.html":{}}}],["message/message",{"_index":664,"title":{},"body":{"classes/User.html":{}}}],["metadata",{"_index":767,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":81,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["mimetype",{"_index":209,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["min",{"_index":362,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["min(18",{"_index":366,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["minlength",{"_index":363,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["minlength(4",{"_index":365,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["miscellaneous",{"_index":776,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":812,"title":{},"body":{"index.html":{}}}],["mode",{"_index":803,"title":{},"body":{"index.html":{}}}],["module",{"_index":54,"title":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":56,"title":{"modules.html":{}},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/HealthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/animals/animals.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/auth.module",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/health/health.module",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/products/products.module",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/users.module",{"_index":176,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":826,"title":{},"body":{"index.html":{}}}],["mutation",{"_index":115,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{}}}],["mutation(undefined",{"_index":100,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{}}}],["myśliwiec",{"_index":832,"title":{},"body":{"index.html":{}}}],["name",{"_index":10,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["name.familyname",{"_index":451,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["name.givenname",{"_index":449,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["necesarios",{"_index":620,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["nest",{"_index":792,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":836,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":70,"title":{},"body":{"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":165,"title":{},"body":{"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"controllers/HealthController.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/ProductsService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["nestjs/graphql",{"_index":37,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"modules/AppModule.html":{},"classes/AuthResolver.html":{},"classes/CreateAnimalInput.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"classes/User.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":223,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":221,"title":{},"body":{"modules/AuthModule.html":{},"injectables/GoogleStrategy.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":378,"title":{},"body":{"classes/CreateProductDto.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":466,"title":{},"body":{"controllers/HealthController.html":{},"modules/HealthModule.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":75,"title":{},"body":{"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["new",{"_index":127,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newanimal",{"_index":135,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["node.js",{"_index":785,"title":{},"body":{"index.html":{}}}],["nombre",{"_index":371,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["npm",{"_index":796,"title":{},"body":{"index.html":{}}}],["null",{"_index":134,"title":{},"body":{"classes/AnimalsResolver.html":{},"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"interfaces/Upload.html":{}}}],["nullable",{"_index":101,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/LoginResponse.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{}}}],["number",{"_index":14,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"interfaces/GlobalConfig.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["o",{"_index":329,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["oauth20",{"_index":433,"title":{},"body":{"injectables/GoogleStrategy.html":{},"dependencies.html":{}}}],["objecttype",{"_index":35,"title":{},"body":{"classes/Animal.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"classes/Todo.html":{},"classes/User.html":{}}}],["one",{"_index":614,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["onetomany",{"_index":660,"title":{},"body":{"classes/User.html":{}}}],["open",{"_index":814,"title":{},"body":{"index.html":{}}}],["optional",{"_index":93,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":68,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":843,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":11,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{}}}],["ownerid",{"_index":353,"title":{},"body":{"classes/CreateAnimalInput.html":{}}}],["p",{"_index":671,"title":{},"body":{"classes/User.html":{}}}],["p.user",{"_index":672,"title":{},"body":{"classes/User.html":{}}}],["package",{"_index":738,"title":{"dependencies.html":{}},"body":{}}],["para",{"_index":621,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["param",{"_index":543,"title":{},"body":{"controllers/ProductsController.html":{}}}],["parameters",{"_index":92,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["parseintpipe",{"_index":544,"title":{},"body":{"controllers/ProductsController.html":{}}}],["partialtype",{"_index":638,"title":{},"body":{"classes/UpdateAnimalInput.html":{}}}],["partialtype(createanimalinput",{"_index":639,"title":{},"body":{"classes/UpdateAnimalInput.html":{}}}],["pass",{"_index":341,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["passport",{"_index":432,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":220,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":430,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":434,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["password",{"_index":238,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{}}}],["passwordsmatches",{"_index":333,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["payload",{"_index":147,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":504,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.id",{"_index":503,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.roles",{"_index":505,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pg",{"_index":765,"title":{},"body":{"dependencies.html":{}}}],["photos",{"_index":446,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["photos[0].value",{"_index":453,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["picture",{"_index":452,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["placeholder",{"_index":634,"title":{},"body":{"classes/Todo.html":{}}}],["platypus",{"_index":47,"title":{},"body":{"classes/Animal.html":{},"miscellaneous/enumerations.html":{}}}],["playground",{"_index":856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["please",{"_index":824,"title":{},"body":{"index.html":{}}}],["port",{"_index":403,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":545,"title":{},"body":{"controllers/ProductsController.html":{}}}],["post('/products",{"_index":571,"title":{},"body":{"controllers/ProductsController.html":{}}}],["postgres",{"_index":415,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":458,"title":{},"body":{"controllers/HealthController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":41,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["private",{"_index":326,"title":{},"body":{"injectables/AuthService.html":{},"controllers/HealthController.html":{},"interfaces/IVerifyPassword.html":{}}}],["process.env.database_url",{"_index":416,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.github_pass",{"_index":345,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["process.env.google_client_id",{"_index":437,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["process.env.google_pass",{"_index":346,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["process.env.google_secret",{"_index":439,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["process.env.jwt_secret",{"_index":414,"title":{},"body":{"interfaces/GlobalConfig.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":406,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":412,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["product",{"_index":510,"title":{"classes/Product.html":{}},"body":{"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/User.html":{},"coverage.html":{}}}],["product.entity",{"_index":661,"title":{},"body":{"classes/User.html":{}}}],["production",{"_index":407,"title":{},"body":{"interfaces/GlobalConfig.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["producto",{"_index":381,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["producto'})@isstring",{"_index":372,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["products",{"_index":274,"title":{},"body":{"classes/AuthResolver.html":{},"classes/Product.html":{},"classes/User.html":{},"controllers/UsersController.html":{}}}],["products.controller",{"_index":590,"title":{},"body":{"modules/ProductsModule.html":{}}}],["products.service",{"_index":548,"title":{},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{}}}],["productscontroller",{"_index":520,"title":{"controllers/ProductsController.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"coverage.html":{}}}],["productsmodule",{"_index":171,"title":{"modules/ProductsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductsModule.html":{},"modules.html":{},"overview.html":{}}}],["productsrepo",{"_index":593,"title":{},"body":{"injectables/ProductsService.html":{}}}],["productsservice",{"_index":547,"title":{"injectables/ProductsService.html":{}},"body":{"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"coverage.html":{},"overview.html":{}}}],["profile",{"_index":427,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["progressive",{"_index":784,"title":{},"body":{"index.html":{}}}],["project",{"_index":815,"title":{},"body":{"index.html":{}}}],["projects",{"_index":687,"title":{},"body":{"classes/User.html":{}}}],["promise",{"_index":240,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"controllers/ProductsController.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"interfaces/AuthContext.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"interfaces/GlobalConfig.html":{},"interfaces/IVerifyPassword.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"injectables/UsersService.html":{}}}],["providers",{"_index":61,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":152,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["pubsub",{"_index":122,"title":{},"body":{"classes/AnimalsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pubsub.asynciterator('animals",{"_index":148,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["pubsub.publish('animals",{"_index":139,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["put",{"_index":546,"title":{},"body":{"controllers/ProductsController.html":{}}}],["put('/products/:id",{"_index":585,"title":{},"body":{"controllers/ProductsController.html":{}}}],["query",{"_index":116,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"controllers/ProductsController.html":{}}}],["query(undefined",{"_index":104,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["read",{"_index":825,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":129,"title":{},"body":{"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["receivedfriendrequests",{"_index":679,"title":{},"body":{"classes/User.html":{}}}],["receivedmessages",{"_index":682,"title":{},"body":{"classes/User.html":{}}}],["receiver",{"_index":677,"title":{},"body":{"classes/User.html":{}}}],["receiver.receiver",{"_index":678,"title":{},"body":{"classes/User.html":{}}}],["reflect",{"_index":766,"title":{},"body":{"dependencies.html":{}}}],["refreshtoken",{"_index":426,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["register",{"_index":231,"title":{},"body":{"classes/AuthResolver.html":{}}}],["register(@args",{"_index":275,"title":{},"body":{"classes/AuthResolver.html":{}}}],["register(data",{"_index":244,"title":{},"body":{"classes/AuthResolver.html":{}}}],["registerargs",{"_index":245,"title":{"classes/RegisterArgs.html":{}},"body":{"classes/AuthResolver.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"coverage.html":{}}}],["registered",{"_index":669,"title":{},"body":{"classes/User.html":{}}}],["registerenumtype",{"_index":36,"title":{},"body":{"classes/Animal.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["registerenumtype(animal_type",{"_index":48,"title":{},"body":{"classes/Animal.html":{}}}],["registerenumtype(auth_apps",{"_index":612,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["registrado",{"_index":282,"title":{},"body":{"classes/AuthResolver.html":{}}}],["relations",{"_index":138,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"controllers/UsersController.html":{}}}],["removeanimal",{"_index":87,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["removeanimal(@args('id",{"_index":145,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["removeanimal(id",{"_index":108,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["repository",{"_index":157,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["req",{"_index":206,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["request",{"_index":202,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"controllers/ProductsController.html":{},"interfaces/Upload.html":{}}}],["reset",{"_index":67,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolve",{"_index":95,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["resolvefield",{"_index":235,"title":{},"body":{"classes/AuthResolver.html":{}}}],["resolver",{"_index":117,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{}}}],["result",{"_index":51,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":53,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":133,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":97,"title":{},"body":{"classes/AnimalsResolver.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"injectables/DatabaseConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["rimraf",{"_index":769,"title":{},"body":{"dependencies.html":{}}}],["roles",{"_index":205,"title":{},"body":{"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"interfaces/Upload.html":{}}}],["root",{"_index":248,"title":{},"body":{"classes/AuthResolver.html":{}}}],["run",{"_index":800,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":771,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":288,"title":{},"body":{"classes/AuthResolver.html":{},"controllers/ProductsController.html":{}}}],["scalable",{"_index":789,"title":{},"body":{"index.html":{}}}],["scope",{"_index":442,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["secret",{"_index":397,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["secretorkey",{"_index":499,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["sender",{"_index":674,"title":{},"body":{"classes/User.html":{}}}],["sender.sender",{"_index":675,"title":{},"body":{"classes/User.html":{}}}],["sentfriendrequests",{"_index":676,"title":{},"body":{"classes/User.html":{}}}],["sentmessages",{"_index":681,"title":{},"body":{"classes/User.html":{}}}],["server",{"_index":124,"title":{},"body":{"classes/AnimalsResolver.html":{},"dependencies.html":{},"index.html":{}}}],["server.config",{"_index":183,"title":{},"body":{"modules/AppModule.html":{}}}],["server.config.ts",{"_index":721,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settings",{"_index":857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":790,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":394,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["socialregisterinput",{"_index":628,"title":{"classes/SocialRegisterInput.html":{}},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"coverage.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"controllers/HealthController.html":{},"modules/HealthModule.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":818,"title":{},"body":{"index.html":{}}}],["src/.../animal.entity.ts",{"_index":778,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../animals.resolver.ts",{"_index":851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../apollo",{"_index":848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../current",{"_index":849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../global.config.ts",{"_index":850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":781,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../register.input.ts",{"_index":779,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.module.ts",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["src/config/apollo",{"_index":720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/global.config.ts",{"_index":400,"title":{},"body":{"interfaces/GlobalConfig.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/services.config.ts",{"_index":386,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{},"coverage.html":{}}}],["src/config/services.config.ts:10",{"_index":476,"title":{},"body":{"injectables/JWTConfig.html":{}}}],["src/config/services.config.ts:21",{"_index":388,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/config/services.config.ts:24",{"_index":389,"title":{},"body":{"injectables/DatabaseConfig.html":{}}}],["src/config/services.config.ts:7",{"_index":475,"title":{},"body":{"injectables/JWTConfig.html":{}}}],["src/db/models/animal.entity.ts",{"_index":6,"title":{},"body":{"classes/Animal.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/db/models/animal.entity.ts:20",{"_index":18,"title":{},"body":{"classes/Animal.html":{}}}],["src/db/models/animal.entity.ts:24",{"_index":24,"title":{},"body":{"classes/Animal.html":{}}}],["src/db/models/animal.entity.ts:28",{"_index":32,"title":{},"body":{"classes/Animal.html":{}}}],["src/db/models/animal.entity.ts:32",{"_index":28,"title":{},"body":{"classes/Animal.html":{}}}],["src/db/models/product.entity.ts",{"_index":511,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/db/models/product.entity.ts:10",{"_index":513,"title":{},"body":{"classes/Product.html":{}}}],["src/db/models/product.entity.ts:14",{"_index":515,"title":{},"body":{"classes/Product.html":{}}}],["src/db/models/product.entity.ts:18",{"_index":517,"title":{},"body":{"classes/Product.html":{}}}],["src/db/models/product.entity.ts:22",{"_index":518,"title":{},"body":{"classes/Product.html":{}}}],["src/db/models/todo.entity.ts",{"_index":631,"title":{},"body":{"classes/Todo.html":{},"coverage.html":{}}}],["src/db/models/todo.entity.ts:6",{"_index":635,"title":{},"body":{"classes/Todo.html":{}}}],["src/db/models/user.entity.ts",{"_index":641,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/db/models/user.entity.ts:16",{"_index":656,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:20",{"_index":657,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:23",{"_index":642,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:26",{"_index":645,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:30",{"_index":648,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:34",{"_index":655,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:38",{"_index":654,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:42",{"_index":651,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:45",{"_index":658,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:49",{"_index":659,"title":{},"body":{"classes/User.html":{}}}],["src/db/models/user.entity.ts:53",{"_index":644,"title":{},"body":{"classes/User.html":{}}}],["src/main.ts",{"_index":730,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/animals/animals.module.ts",{"_index":69,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["src/modules/animals/animals.resolver.ts",{"_index":80,"title":{},"body":{"classes/AnimalsResolver.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/animals/animals.resolver.ts:11",{"_index":91,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:15",{"_index":103,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:27",{"_index":105,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:36",{"_index":107,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:41",{"_index":112,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:46",{"_index":109,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.resolver.ts:57",{"_index":96,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["src/modules/animals/animals.service.ts",{"_index":151,"title":{},"body":{"injectables/AnimalsService.html":{},"coverage.html":{}}}],["src/modules/animals/animals.service.ts:11",{"_index":160,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/modules/animals/animals.service.ts:12",{"_index":163,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/modules/animals/animals.service.ts:13",{"_index":161,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/modules/animals/animals.service.ts:9",{"_index":158,"title":{},"body":{"injectables/AnimalsService.html":{}}}],["src/modules/animals/dto/create",{"_index":351,"title":{},"body":{"classes/CreateAnimalInput.html":{},"coverage.html":{}}}],["src/modules/animals/dto/update",{"_index":636,"title":{},"body":{"classes/UpdateAnimalInput.html":{},"coverage.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":216,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.resolver.ts",{"_index":228,"title":{},"body":{"classes/AuthResolver.html":{},"coverage.html":{}}}],["src/modules/auth/auth.resolver.ts:12",{"_index":233,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/modules/auth/auth.resolver.ts:16",{"_index":236,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/modules/auth/auth.resolver.ts:24",{"_index":243,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/modules/auth/auth.resolver.ts:31",{"_index":246,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/modules/auth/auth.resolver.ts:45",{"_index":239,"title":{},"body":{"classes/AuthResolver.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":298,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:16",{"_index":305,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:18",{"_index":321,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:20",{"_index":322,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:24",{"_index":317,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:39",{"_index":309,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:50",{"_index":320,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:54",{"_index":314,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/decorators/current",{"_index":733,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/dto/register.input.ts",{"_index":600,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/modules/auth/dto/register.input.ts:18",{"_index":606,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["src/modules/auth/dto/register.input.ts:21",{"_index":607,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["src/modules/auth/dto/register.input.ts:24",{"_index":604,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["src/modules/auth/dto/register.input.ts:27",{"_index":608,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["src/modules/auth/dto/register.input.ts:30",{"_index":603,"title":{},"body":{"classes/RegisterArgs.html":{}}}],["src/modules/auth/dto/register.input.ts:38",{"_index":629,"title":{},"body":{"classes/SocialRegisterInput.html":{}}}],["src/modules/auth/dto/register.input.ts:41",{"_index":630,"title":{},"body":{"classes/SocialRegisterInput.html":{}}}],["src/modules/auth/guards/jwt",{"_index":478,"title":{},"body":{"injectables/JwtAuth.html":{},"injectables/JwtAuthGraphQL.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/google.strategy.ts",{"_index":422,"title":{},"body":{"injectables/GoogleStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/google.strategy.ts:18",{"_index":428,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["src/modules/auth/strategies/google.strategy.ts:7",{"_index":424,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts",{"_index":490,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts:17",{"_index":493,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts:8",{"_index":491,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/types/auth.types.ts",{"_index":506,"title":{},"body":{"classes/LoginResponse.html":{},"coverage.html":{}}}],["src/modules/auth/types/auth.types.ts:10",{"_index":508,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/modules/auth/types/auth.types.ts:7",{"_index":509,"title":{},"body":{"classes/LoginResponse.html":{}}}],["src/modules/health/health.controller.ts",{"_index":457,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/health/health.controller.ts:11",{"_index":462,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/modules/health/health.module.ts",{"_index":472,"title":{},"body":{"modules/HealthModule.html":{}}}],["src/modules/products/dto/createproduct.dto.ts",{"_index":368,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/modules/products/dto/createproduct.dto.ts:15",{"_index":376,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/modules/products/dto/createproduct.dto.ts:9",{"_index":373,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["src/modules/products/products.controller.ts",{"_index":521,"title":{},"body":{"controllers/ProductsController.html":{},"coverage.html":{}}}],["src/modules/products/products.controller.ts:38",{"_index":539,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:45",{"_index":536,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:54",{"_index":528,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:69",{"_index":531,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.controller.ts:80",{"_index":534,"title":{},"body":{"controllers/ProductsController.html":{}}}],["src/modules/products/products.module.ts",{"_index":589,"title":{},"body":{"modules/ProductsModule.html":{}}}],["src/modules/products/products.service.ts",{"_index":592,"title":{},"body":{"injectables/ProductsService.html":{},"coverage.html":{}}}],["src/modules/products/products.service.ts:11",{"_index":598,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:12",{"_index":599,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:13",{"_index":596,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/products/products.service.ts:9",{"_index":595,"title":{},"body":{"injectables/ProductsService.html":{}}}],["src/modules/users/dto/createuser.dto.ts",{"_index":383,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/createuser.dto.ts:2",{"_index":385,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/dto/createuser.dto.ts:3",{"_index":384,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["src/modules/users/users.controller.ts",{"_index":689,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/modules/users/users.controller.ts:16",{"_index":695,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/modules/users/users.module.ts",{"_index":709,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/modules/users/users.service.ts",{"_index":712,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/modules/users/users.service.ts:10",{"_index":715,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/modules/users/users.service.ts:7",{"_index":714,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/utils/types/graphql.ts",{"_index":198,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["start",{"_index":801,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":804,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":805,"title":{},"body":{"index.html":{}}}],["started",{"_index":783,"title":{"index.html":{}},"body":{}}],["starter",{"_index":794,"title":{},"body":{"index.html":{}}}],["statements",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":703,"title":{},"body":{"controllers/UsersController.html":{}}}],["statuscode",{"_index":864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stay",{"_index":828,"title":{},"body":{"index.html":{}}}],["stock",{"_index":369,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["strategies/jwt.strategy",{"_index":224,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":431,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["stream",{"_index":203,"title":{},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{}}}],["string",{"_index":19,"title":{},"body":{"classes/Animal.html":{},"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["subscription",{"_index":118,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["subscription(undefined",{"_index":94,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["success",{"_index":704,"title":{},"body":{"controllers/UsersController.html":{}}}],["success.'})@get()@apibearerauth('bearerjwt",{"_index":694,"title":{},"body":{"controllers/UsersController.html":{}}}],["summary",{"_index":702,"title":{},"body":{"controllers/UsersController.html":{}}}],["super",{"_index":435,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["support",{"_index":819,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":839,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":559,"title":{},"body":{"controllers/ProductsController.html":{},"dependencies.html":{}}}],["synchronize",{"_index":418,"title":{},"body":{"interfaces/GlobalConfig.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":737,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":736,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":564,"title":{},"body":{"controllers/ProductsController.html":{}}}],["teams",{"_index":683,"title":{},"body":{"classes/User.html":{}}}],["teams.user",{"_index":684,"title":{},"body":{"classes/User.html":{}}}],["terminar",{"_index":444,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["terminusmodule",{"_index":474,"title":{},"body":{"modules/HealthModule.html":{}}}],["test",{"_index":808,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":811,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":810,"title":{},"body":{"index.html":{}}}],["tests",{"_index":807,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":817,"title":{},"body":{"index.html":{}}}],["this.animalsservice.animalrepo.delete",{"_index":146,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.animalsservice.animalrepo.find",{"_index":137,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.animalsservice.animalrepo.findone(id",{"_index":141,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.animalsservice.animalrepo.insert(newanimal",{"_index":136,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.animalsservice.animalrepo.update",{"_index":143,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.animalsservice.usersrepo.findone(createanimal.ownerid",{"_index":132,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["this.authservice.getencryptedcredentials(data.password",{"_index":284,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.gettoken",{"_index":296,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.user.create",{"_index":285,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.user.findone",{"_index":277,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.user.findone(payload.id",{"_index":500,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.authservice.user.findone(user.id",{"_index":273,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.authservice.validateuser",{"_index":291,"title":{},"body":{"classes/AuthResolver.html":{}}}],["this.configservice.get('database",{"_index":399,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["this.configservice.get('github_pass",{"_index":337,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["this.configservice.get('google_pass",{"_index":336,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["this.configservice.get('jwtsecret",{"_index":398,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["this.configservice.get('url",{"_index":471,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.dns.pingcheck('sales",{"_index":470,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.health.check",{"_index":469,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.jwtservice.sign",{"_index":350,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["this.productsservice.configservice.get('url",{"_index":558,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.productsrepo",{"_index":579,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.productsrepo.delete",{"_index":584,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.productsrepo.find",{"_index":563,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.productsrepo.findone(id",{"_index":566,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.productsservice.usersrepo.findone(user.id",{"_index":581,"title":{},"body":{"controllers/ProductsController.html":{}}}],["this.user.findone",{"_index":328,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["this.usersservice.usersrepo.find",{"_index":705,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.verifypassword",{"_index":334,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["throw",{"_index":279,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{}}}],["todo",{"_index":443,"title":{"classes/Todo.html":{}},"body":{"injectables/GoogleStrategy.html":{},"classes/Todo.html":{},"coverage.html":{}}}],["token",{"_index":295,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["tools",{"_index":757,"title":{},"body":{"dependencies.html":{}}}],["touch",{"_index":829,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":753,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":102,"title":{},"body":{"classes/AnimalsResolver.html":{},"modules/AppModule.html":{},"interfaces/GlobalConfig.html":{},"classes/LoginResponse.html":{},"controllers/ProductsController.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/User.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":835,"title":{},"body":{"index.html":{}}}],["type",{"_index":12,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"injectables/AnimalsService.html":{},"interfaces/AuthContext.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/DatabaseConfig.html":{},"interfaces/GlobalConfig.html":{},"injectables/GoogleStrategy.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JWTConfig.html":{},"injectables/JwtAuthGraphQL.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"injectables/ProductsService.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"classes/Todo.html":{},"classes/UpdateAnimalInput.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":42,"title":{},"body":{"classes/Animal.html":{},"injectables/AnimalsService.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"classes/Product.html":{},"injectables/ProductsService.html":{},"classes/User.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":74,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([animal",{"_index":79,"title":{},"body":{"modules/AnimalsModule.html":{}}}],["typeormmodule.forfeature([product",{"_index":591,"title":{},"body":{"modules/ProductsModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":226,"title":{},"body":{"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forrootasync",{"_index":193,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":405,"title":{},"body":{"interfaces/GlobalConfig.html":{}}}],["typeormoptionsfactory",{"_index":390,"title":{},"body":{"injectables/DatabaseConfig.html":{},"injectables/JWTConfig.html":{}}}],["types/auth.types",{"_index":254,"title":{},"body":{"classes/AuthResolver.html":{}}}],["types/passport",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":793,"title":{},"body":{"index.html":{}}}],["ui",{"_index":773,"title":{},"body":{"dependencies.html":{}}}],["una",{"_index":624,"title":{},"body":{"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{}}}],["undefined",{"_index":27,"title":{},"body":{"classes/Animal.html":{},"classes/AnimalsResolver.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["unique",{"_index":650,"title":{},"body":{"classes/User.html":{}}}],["unit",{"_index":806,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updateanimal",{"_index":88,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["updateanimal(@args('updateanimalinput",{"_index":142,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["updateanimal(updateanimalinput",{"_index":110,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["updateanimalinput",{"_index":111,"title":{"classes/UpdateAnimalInput.html":{}},"body":{"classes/AnimalsResolver.html":{},"classes/UpdateAnimalInput.html":{},"coverage.html":{}}}],["updateanimalinput.id",{"_index":144,"title":{},"body":{"classes/AnimalsResolver.html":{}}}],["upload",{"_index":207,"title":{"interfaces/Upload.html":{}},"body":{"interfaces/AuthContext.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["url",{"_index":404,"title":{},"body":{"interfaces/GlobalConfig.html":{},"controllers/ProductsController.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{}}}],["useguards",{"_index":252,"title":{},"body":{"classes/AuthResolver.html":{},"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauth",{"_index":570,"title":{},"body":{"controllers/ProductsController.html":{},"controllers/UsersController.html":{}}}],["useguards(jwtauth)@apioperation({summary",{"_index":691,"title":{},"body":{"controllers/UsersController.html":{}}}],["useguards(jwtauth)@delete('/products/:id')@apibearerauth('bearerjwt",{"_index":530,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useguards(jwtauth)@post('/products')@apibearerauth('bearerjwt",{"_index":527,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useguards(jwtauth)@put('/products/:id')@apibearerauth('bearerjwt",{"_index":533,"title":{},"body":{"controllers/ProductsController.html":{}}}],["useguards(jwtauthgraphql",{"_index":271,"title":{},"body":{"classes/AuthResolver.html":{}}}],["useguards(jwtauthgraphql)@query(undefined",{"_index":242,"title":{},"body":{"classes/AuthResolver.html":{}}}],["user",{"_index":25,"title":{"classes/User.html":{}},"body":{"classes/Animal.html":{},"modules/AnimalsModule.html":{},"injectables/AnimalsService.html":{},"interfaces/AuthContext.html":{},"modules/AuthModule.html":{},"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/AuthUser.html":{},"interfaces/Context.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponse.html":{},"classes/Product.html":{},"controllers/ProductsController.html":{},"modules/ProductsModule.html":{},"injectables/ProductsService.html":{},"interfaces/Upload.html":{},"classes/User.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user.animals",{"_index":50,"title":{},"body":{"classes/Animal.html":{}}}],["user.borndate.gettime",{"_index":265,"title":{},"body":{"classes/AuthResolver.html":{}}}],["user.decorators",{"_index":261,"title":{},"body":{"classes/AuthResolver.html":{},"controllers/ProductsController.html":{}}}],["user.decorators.ts",{"_index":734,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.email",{"_index":292,"title":{},"body":{"classes/AuthResolver.html":{}}}],["user.entity",{"_index":43,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{}}}],["user.id",{"_index":297,"title":{},"body":{"classes/AuthResolver.html":{}}}],["user.products",{"_index":519,"title":{},"body":{"classes/Product.html":{}}}],["userdb",{"_index":327,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["userdb.password",{"_index":335,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["userregistered",{"_index":276,"title":{},"body":{"classes/AuthResolver.html":{}}}],["users",{"_index":670,"title":{},"body":{"classes/User.html":{},"controllers/UsersController.html":{}}}],["users'})@apiresponse({status",{"_index":692,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":711,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":697,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["userscontroller",{"_index":688,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["usersmodule",{"_index":172,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersrepo",{"_index":155,"title":{},"body":{"injectables/AnimalsService.html":{},"injectables/ProductsService.html":{},"injectables/UsersService.html":{}}}],["usersservice",{"_index":696,"title":{"injectables/UsersService.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usertoproject",{"_index":668,"title":{},"body":{"classes/User.html":{}}}],["usertoteam",{"_index":665,"title":{},"body":{"classes/User.html":{}}}],["utils/types/graphql",{"_index":255,"title":{},"body":{"classes/AuthResolver.html":{},"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductsController.html":{}}}],["utp",{"_index":685,"title":{},"body":{"classes/User.html":{}}}],["utp.user",{"_index":686,"title":{},"body":{"classes/User.html":{}}}],["validate",{"_index":423,"title":{},"body":{"injectables/GoogleStrategy.html":{},"injectables/JwtStrategy.html":{}}}],["validate(accesstoken",{"_index":425,"title":{},"body":{"injectables/GoogleStrategy.html":{}}}],["validate(payload",{"_index":492,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuser",{"_index":301,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["validateuser(undefined",{"_index":315,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":364,"title":{},"body":{"classes/CreateAnimalInput.html":{},"classes/CreateProductDto.html":{},"classes/RegisterArgs.html":{},"classes/SocialRegisterInput.html":{},"dependencies.html":{}}}],["value",{"_index":311,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["varchar",{"_index":21,"title":{},"body":{"classes/Animal.html":{},"classes/Product.html":{}}}],["variable",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":847,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifypassword",{"_index":302,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["verifypassword(undefined",{"_index":318,"title":{},"body":{"injectables/AuthService.html":{}}}],["watch",{"_index":802,"title":{},"body":{"index.html":{}}}],["website",{"_index":833,"title":{},"body":{"index.html":{}}}],["y",{"_index":342,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/IVerifyPassword.html":{}}}],["ya",{"_index":281,"title":{},"body":{"classes/AuthResolver.html":{}}}],["you'd",{"_index":822,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":66,"title":{},"body":{"modules/AnimalsModule.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/ProductsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Animal.html":{"url":"classes/Animal.html","title":"class - Animal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Animal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/animal.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                owner\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/animal.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({type: 'varchar', length: 100})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/animal.entity.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            owner\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/animal.entity.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ANIMAL_TYPE\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@Column({type: 'enum', enum: ANIMAL_TYPE})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/animal.entity.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ID, ObjectType, registerEnumType } from '@nestjs/graphql';\nimport { Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { User } from './user.entity';\n\nexport enum ANIMAL_TYPE {\n  CAT,\n  DOG,\n  PLATYPUS,\n}\n\nregisterEnumType(ANIMAL_TYPE, {\n  name: 'ANIMAL_TYPE',\n});\n\n@ObjectType()\n@Entity({ name: 'animals' })\nexport class Animal {\n  @Field(() => ID)\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Field()\n  @Column({ type: 'varchar', length: 100 })\n  name: string;\n\n  @Field(() => ANIMAL_TYPE)\n  @Column({ type: 'enum', enum: ANIMAL_TYPE })\n  type: ANIMAL_TYPE;\n\n  @Field(() => User)\n  @ManyToOne(() => User, user => user.animals)\n  owner: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AnimalsModule.html":{"url":"modules/AnimalsModule.html","title":"module - AnimalsModule","body":"\n                   \n\n\n\n\n    Modules\n    AnimalsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnimalsModule\n\n\n\ncluster_AnimalsModule_providers\n\n\n\n\nAnimalsService\n\nAnimalsService\n\n\n\nAnimalsModule\n\nAnimalsModule\n\nAnimalsModule -->\n\nAnimalsService->AnimalsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/animals/animals.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AnimalsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AnimalsService } from './animals.service';\nimport { AnimalsResolver } from './animals.resolver';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Animal } from '../../db/models/animal.entity';\nimport { User } from '../../db/models/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Animal, User])],\n  providers: [AnimalsResolver, AnimalsService],\n})\nexport class AnimalsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AnimalsResolver.html":{"url":"classes/AnimalsResolver.html","title":"class - AnimalsResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AnimalsResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/animals/animals.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animalAdded\n                            \n                            \n                                    Async\n                                createAnimal\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                removeAnimal\n                            \n                            \n                                updateAnimal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animalsService: AnimalsService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/animals/animals.resolver.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalsService\n                                                  \n                                                        \n                                                                        AnimalsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            animalAdded\n                        \n                        \n                    \n                \n            \n            \n                \nanimalAdded()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Subscription(undefined, {resolve: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createAnimal\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAnimal(createAnimal: CreateAnimalInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined, {nullable: true})\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createAnimal\n                                    \n                                                CreateAnimalInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'animals'})\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \nfindOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Query(undefined, {name: 'animal'})\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            removeAnimal\n                        \n                        \n                    \n                \n            \n            \n                \nremoveAnimal(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateAnimal\n                        \n                        \n                    \n                \n            \n            \n                \nupdateAnimal(updateAnimalInput: UpdateAnimalInput)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/animals/animals.resolver.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateAnimalInput\n                                    \n                                                UpdateAnimalInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Int, Mutation, Query, Resolver, Subscription } from '@nestjs/graphql';\nimport { AnimalsService } from './animals.service';\nimport { Animal } from '../../db/models/animal.entity';\nimport { CreateAnimalInput } from './dto/create-animal.input';\nimport { UpdateAnimalInput } from './dto/update-animal.input';\nimport { PubSub } from 'apollo-server-express';\n\nconst pubSub = new PubSub();\n\n@Resolver(() => Animal)\nexport class AnimalsResolver {\n  constructor(private readonly animalsService: AnimalsService) {}\n\n  @Mutation(() => Animal, { nullable: true })\n  async createAnimal(@Args() createAnimal: CreateAnimalInput) {\n    const owner = await this.animalsService.usersRepo.findOne(createAnimal.ownerId);\n    if (!owner) return null;\n    const newAnimal = {\n      ...createAnimal,\n      owner,\n    };\n    await this.animalsService.animalRepo.insert(newAnimal);\n    return newAnimal;\n  }\n\n  @Query(() => [Animal], { name: 'animals' })\n  async findAll() {\n    const animals = await this.animalsService.animalRepo.find({\n      relations: ['owner'],\n    });\n    await pubSub.publish('animals', animals);\n    return animals;\n  }\n\n  @Query(() => Animal, { name: 'animal' })\n  findOne(@Args('id', { type: () => Int }) id: number) {\n    return this.animalsService.animalRepo.findOne(id);\n  }\n\n  @Mutation(() => Animal)\n  updateAnimal(@Args('updateAnimalInput') updateAnimalInput: UpdateAnimalInput) {\n    return this.animalsService.animalRepo.update({ id: updateAnimalInput.id }, updateAnimalInput);\n  }\n\n  @Mutation(() => Animal)\n  removeAnimal(@Args('id', { type: () => Int }) id: number) {\n    return this.animalsService.animalRepo.delete({\n      id,\n    });\n  }\n\n  @Subscription(() => [Animal], {\n    resolve: payload => {\n      return payload;\n    },\n  })\n  animalAdded() {\n    return pubSub.asyncIterator('animals');\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AnimalsService.html":{"url":"injectables/AnimalsService.html","title":"injectable - AnimalsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AnimalsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/animals/animals.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                animalRepo\n                            \n                            \n                                    Public\n                                    Readonly\n                                configService\n                            \n                            \n                                    Public\n                                    Readonly\n                                usersRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(animalRepo: Repository, usersRepo: Repository, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/animals/animals.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        animalRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            animalRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(Animal)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/animals.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/animals.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            usersRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(User)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/animals.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Animal } from '../../db/models/animal.entity';\nimport { User } from '../../db/models/user.entity';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class AnimalsService {\n  constructor(\n    @InjectRepository(Animal) public readonly animalRepo: Repository,\n    @InjectRepository(User) public readonly usersRepo: Repository,\n    public readonly configService: ConfigService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAnimalsModule\n\nAnimalsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnimalsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            AnimalsModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            HealthModule\n                        \n                        \n                            ProductsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Connection } from 'typeorm';\nimport { ProductsModule } from './modules/products/products.module';\nimport { UsersModule } from './modules/users/users.module';\nimport { GraphQLModule } from '@nestjs/graphql';\nimport { AnimalsModule } from './modules/animals/animals.module';\nimport { DatabaseConfig } from './config/services.config';\nimport { apolloConfig } from './config/apollo-server.config';\nimport { ConfigModule } from '@nestjs/config';\nimport { globalConfig } from './config/global.config';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { HealthModule } from './modules/health/health.module';\n\n@Module({\n  imports: [\n    ProductsModule,\n    HealthModule,\n    UsersModule,\n    AnimalsModule,\n    AuthModule,\n    GraphQLModule.forRoot(apolloConfig),\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [globalConfig],\n    }),\n    TypeOrmModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: DatabaseConfig,\n    }),\n  ],\n})\nexport class AppModule {\n  constructor(private connection: Connection) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthContext.html":{"url":"interfaces/AuthContext.html","title":"interface - AuthContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/types/graphql.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Context\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         AuthUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { Stream } from 'stream';\n\nexport interface AuthUser {\n  id: number;\n  email: string;\n  roles: string[];\n}\n\nexport interface Context {\n  req: Request;\n  user: AuthUser | null;\n}\n\nexport interface AuthContext extends Context {\n  user: AuthUser;\n}\n\nexport interface Upload {\n  filename: string;\n  mimetype: string;\n  encoding: string;\n  createReadStream: () => Stream;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthResolver } from './auth.resolver';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../../db/models/user.entity';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { ConfigModule } from '@nestjs/config';\nimport { JWTConfig } from '../../config/services.config';\n\n@Module({\n  imports: [\n    TypeOrmModule.forFeature([User]),\n    PassportModule,\n    JwtModule.registerAsync({\n      imports: [ConfigModule],\n      useClass: JWTConfig,\n    }),\n  ],\n  providers: [AuthService, AuthResolver, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResolver.html":{"url":"classes/AuthResolver.html","title":"class - AuthResolver","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResolver\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.resolver.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                me\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.resolver.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            age\n                        \n                        \n                    \n                \n            \n            \n                \nage(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ResolveField()\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.resolver.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(email: string, password: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.resolver.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            me\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    me(user: AuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGraphQL)@Query(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.resolver.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            register\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    register(data: RegisterArgs)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Mutation(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.resolver.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                RegisterArgs\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Args, Mutation, Query, ResolveField, Resolver, Root } from '@nestjs/graphql';\nimport { RegisterArgs } from './dto/register.input';\nimport { HttpException, HttpStatus, UseGuards } from '@nestjs/common';\nimport { User } from '../../db/models/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponse } from './types/auth.types';\nimport { AuthUser } from '../../utils/types/graphql';\nimport { JwtAuthGraphQL } from './guards/jwt-auth.guard';\nimport { CurrentUserGQL } from './decorators/current-user.decorators';\n\n@Resolver(() => User)\nexport class AuthResolver {\n  constructor(private readonly authService: AuthService) {}\n\n  @ResolveField()\n  age(@Root() user: User) {\n    let diff = (Date.now() - user.bornDate.getTime()) / 1000;\n    diff /= 60 * 60 * 24;\n    return Math.abs(Math.trunc(diff / 365.25));\n  }\n\n  @UseGuards(JwtAuthGraphQL)\n  @Query(() => User)\n  async me(@CurrentUserGQL() user: AuthUser) {\n    return this.authService.User.findOne(user.id, {\n      relations: ['products', 'animals'],\n    });\n  }\n\n  @Mutation(() => User)\n  async register(@Args() data: RegisterArgs): Promise {\n    const userRegistered = await this.authService.User.findOne({\n      where: { email: data.email },\n    });\n    if (userRegistered) throw new HttpException('Usuario ya registrado.', HttpStatus.BAD_REQUEST);\n    const password = await this.authService.getEncryptedCredentials(data.password);\n    return this.authService.User.create({\n      ...data,\n      description: data.description || '',\n      password,\n    }).save();\n  }\n\n  @Mutation(() => LoginResponse)\n  async login(@Args('email') email: string, @Args('password') password: string): Promise {\n    const user = await this.authService.validateUser({ email, password });\n    const roles = user.email === 'lucas.vergara@usm.cl' ? ['ADMIN'] : ['USER'];\n    return {\n      token: this.authService.getToken({ id: user.id, email: user.email, roles }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                configService\n                            \n                            \n                                    Public\n                                    Readonly\n                                User\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getEncryptedCredentials\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                    Async\n                                validateUser\n                            \n                            \n                                    Public\n                                    Async\n                                verifyPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService, User: Repository, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        User\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getEncryptedCredentials\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEncryptedCredentials(password: string, github, google)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    github\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                                \n                                    google\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        false\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken(undefined: AuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            validateUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(undefined: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            verifyPassword\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    verifyPassword(undefined: IVerifyPassword)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    \n                                                IVerifyPassword\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.service.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            User\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(User)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/auth.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../db/models/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { AuthUser } from '../../utils/types/graphql';\n\ninterface IVerifyPassword {\n  inputPassword: string;\n  encryptedPassword: string;\n}\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    public readonly configService: ConfigService,\n    @InjectRepository(User)\n    public readonly User: Repository,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  public async validateUser({ email, password }: { email: string; password: string }): Promise {\n    const userDB = await this.User.findOne({\n      where: {\n        email,\n      },\n    });\n    if (!userDB) throw new HttpException('Usuario o contraseña incorrectos', HttpStatus.CONFLICT);\n    const passwordsMatches = await this.verifyPassword({\n      inputPassword: password,\n      encryptedPassword: userDB.password,\n    });\n    if (!passwordsMatches) throw new HttpException('Usuario o contraseña incorrectos', HttpStatus.CONFLICT);\n    return userDB;\n  }\n\n  public async getEncryptedCredentials(password: string, github = false, google = false): Promise {\n    if (!this.configService.get('GOOGLE_PASS') || !this.configService.get('GITHUB_PASS')) {\n      throw new Error('Variables de entorno google pass y github pass no definidas...');\n    }\n    let finalPass = password;\n    if (github) finalPass = process.env.GITHUB_PASS;\n    else if (google) finalPass = process.env.GOOGLE_PASS;\n    else finalPass = await bcrypt.hash(finalPass, 10);\n    return finalPass;\n  }\n\n  public async verifyPassword({ inputPassword, encryptedPassword }: IVerifyPassword): Promise {\n    return await bcrypt.compare(inputPassword, encryptedPassword);\n  }\n\n  public getToken({ id, email, roles = [] }: AuthUser): string {\n    return this.jwtService.sign({ id, email, roles });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthUser.html":{"url":"interfaces/AuthUser.html","title":"interface - AuthUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/types/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                                \n                                        id\n                                \n                                \n                                        roles\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                    \n                                \n                                \n                                    \n                                        roles:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { Stream } from 'stream';\n\nexport interface AuthUser {\n  id: number;\n  email: string;\n  roles: string[];\n}\n\nexport interface Context {\n  req: Request;\n  user: AuthUser | null;\n}\n\nexport interface AuthContext extends Context {\n  user: AuthUser;\n}\n\nexport interface Upload {\n  filename: string;\n  mimetype: string;\n  encoding: string;\n  createReadStream: () => Stream;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Context.html":{"url":"interfaces/Context.html","title":"interface - Context","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Context\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/types/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        req\n                                \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        req\n                                    \n                                \n                                \n                                    \n                                        req:     Request\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Request\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         AuthUser | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AuthUser | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { Stream } from 'stream';\n\nexport interface AuthUser {\n  id: number;\n  email: string;\n  roles: string[];\n}\n\nexport interface Context {\n  req: Request;\n  user: AuthUser | null;\n}\n\nexport interface AuthContext extends Context {\n  user: AuthUser;\n}\n\nexport interface Upload {\n  filename: string;\n  mimetype: string;\n  encoding: string;\n  createReadStream: () => Stream;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateAnimalInput.html":{"url":"classes/CreateAnimalInput.html","title":"class - CreateAnimalInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateAnimalInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/animals/dto/create-animal.input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                name\n                            \n                            \n                                ownerId\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Min(18)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/dto/create-animal.input.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@MinLength(4)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/dto/create-animal.input.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ownerId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/dto/create-animal.input.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ANIMAL_TYPE\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/dto/create-animal.input.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, Int } from '@nestjs/graphql';\nimport { ANIMAL_TYPE } from '../../../db/models/animal.entity';\nimport { Min, MinLength } from 'class-validator';\n\n@ArgsType()\nexport class CreateAnimalInput {\n  @Field()\n  @MinLength(4)\n  name: string;\n\n  @Field()\n  @Min(18)\n  age: number;\n\n  @Field(() => ANIMAL_TYPE)\n  type: ANIMAL_TYPE;\n\n  @Field(() => Int)\n  ownerId: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/dto/createProduct.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                stock\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({description: 'Nombre de producto'})@IsString()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/products/dto/createProduct.dto.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsInt()@ApiProperty({description: 'Stock actual'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/products/dto/createProduct.dto.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsInt, IsString } from 'class-validator';\n\nexport class CreateProductDto {\n  @ApiProperty({\n    description: 'Nombre de producto',\n  })\n  @IsString()\n  name: string;\n\n  @IsInt()\n  @ApiProperty({\n    description: 'Stock actual',\n  })\n  stock: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/createUser.dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                age\n                            \n                            \n                                    Readonly\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/createUser.dto.ts:3\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/dto/createUser.dto.ts:2\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateUserDto {\n  readonly name: string;\n  readonly age: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseConfig.html":{"url":"injectables/DatabaseConfig.html","title":"injectable - DatabaseConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/services.config.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTypeOrmOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/services.config.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTypeOrmOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTypeOrmOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/services.config.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtOptionsFactory } from '@nestjs/jwt';\n\n@Injectable()\nexport class JWTConfig implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createJwtOptions() {\n    return {\n      signOptions: {\n        expiresIn: '1h',\n      },\n      secret: this.configService.get('jwtSecret'),\n    };\n  }\n}\n\n@Injectable()\nexport class DatabaseConfig implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createTypeOrmOptions() {\n    return this.configService.get('database');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GlobalConfig.html":{"url":"interfaces/GlobalConfig.html","title":"interface - GlobalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GlobalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/global.config.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        database\n                                \n                                \n                                        jwtSecret\n                                \n                                \n                                        port\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        database\n                                    \n                                \n                                \n                                    \n                                        database:     TypeOrmModuleOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TypeOrmModuleOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        jwtSecret\n                                    \n                                \n                                \n                                    \n                                        jwtSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                    \n                                \n                                \n                                    \n                                        port:     string | number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { TypeOrmModuleOptions } from '@nestjs/typeorm';\n\ninterface GlobalConfig {\n  port: string | number;\n  url: string;\n  jwtSecret: string;\n  database: TypeOrmModuleOptions;\n}\n\nexport const globalConfig = (): GlobalConfig => ({\n  url: process.env.NODE_ENV === 'production' ? 'https://sales-management-api.herokuapp.com' : 'http://localhost:3000',\n  port: process.env.PORT || 3000,\n  jwtSecret: process.env.JWT_SECRET,\n  database: {\n    type: 'postgres',\n    url: process.env.DATABASE_URL,\n    logging: false,\n    synchronize: true,\n    autoLoadEntities: true,\n    dropSchema: process.env.NODE_ENV !== 'production',\n  },\n});\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GoogleStrategy.html":{"url":"injectables/GoogleStrategy.html","title":"injectable - GoogleStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GoogleStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategies/google.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategies/google.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(accessToken: string, refreshToken: string, profile: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategies/google.strategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Strategy } from 'passport-google-oauth20';\n\nimport { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class GoogleStrategy extends PassportStrategy(Strategy, 'google') {\n  constructor() {\n    super({\n      clientID: process.env.GOOGLE_CLIENT_ID,\n      clientSecret: process.env.GOOGLE_SECRET,\n      callbackURL: 'http://localhost:3000/google/redirect',\n      scope: ['email', 'profile'],\n    });\n  }\n\n  // todo: Terminar google login strategy\n  async validate(accessToken: string, refreshToken: string, profile: any): Promise {\n    const { name, emails, photos } = profile;\n    return {\n      email: emails[0].value,\n      firstName: name.givenName,\n      lastName: name.familyName,\n      picture: photos[0].value,\n      accessToken,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                check\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            check\n                        \n                        \n                    \n                \n            \n            \n                \ncheck()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health/health.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { DNSHealthIndicator, HealthCheck, HealthCheckService } from '@nestjs/terminus';\nimport { ConfigService } from '@nestjs/config';\n\n@Controller('health')\nexport class HealthController {\n  constructor(private health: HealthCheckService, private dns: DNSHealthIndicator, private configService: ConfigService) {}\n\n  @Get()\n  @HealthCheck()\n  check() {\n    return this.health.check([() => this.dns.pingCheck('sales-management', this.configService.get('url'))]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HealthModule.html":{"url":"modules/HealthModule.html","title":"module - HealthModule","body":"\n                   \n\n\n\n\n    Modules\n    HealthModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/health/health.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HealthController } from './health.controller';\nimport { TerminusModule } from '@nestjs/terminus';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IVerifyPassword.html":{"url":"interfaces/IVerifyPassword.html","title":"interface - IVerifyPassword","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IVerifyPassword\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        encryptedPassword\n                                \n                                \n                                        inputPassword\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        encryptedPassword\n                                    \n                                \n                                \n                                    \n                                        encryptedPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inputPassword\n                                    \n                                \n                                \n                                    \n                                        inputPassword:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../db/models/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { AuthUser } from '../../utils/types/graphql';\n\ninterface IVerifyPassword {\n  inputPassword: string;\n  encryptedPassword: string;\n}\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    public readonly configService: ConfigService,\n    @InjectRepository(User)\n    public readonly User: Repository,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  public async validateUser({ email, password }: { email: string; password: string }): Promise {\n    const userDB = await this.User.findOne({\n      where: {\n        email,\n      },\n    });\n    if (!userDB) throw new HttpException('Usuario o contraseña incorrectos', HttpStatus.CONFLICT);\n    const passwordsMatches = await this.verifyPassword({\n      inputPassword: password,\n      encryptedPassword: userDB.password,\n    });\n    if (!passwordsMatches) throw new HttpException('Usuario o contraseña incorrectos', HttpStatus.CONFLICT);\n    return userDB;\n  }\n\n  public async getEncryptedCredentials(password: string, github = false, google = false): Promise {\n    if (!this.configService.get('GOOGLE_PASS') || !this.configService.get('GITHUB_PASS')) {\n      throw new Error('Variables de entorno google pass y github pass no definidas...');\n    }\n    let finalPass = password;\n    if (github) finalPass = process.env.GITHUB_PASS;\n    else if (google) finalPass = process.env.GOOGLE_PASS;\n    else finalPass = await bcrypt.hash(finalPass, 10);\n    return finalPass;\n  }\n\n  public async verifyPassword({ inputPassword, encryptedPassword }: IVerifyPassword): Promise {\n    return await bcrypt.compare(inputPassword, encryptedPassword);\n  }\n\n  public getToken({ id, email, roles = [] }: AuthUser): string {\n    return this.jwtService.sign({ id, email, roles });\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JWTConfig.html":{"url":"injectables/JWTConfig.html","title":"injectable - JWTConfig","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JWTConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/services.config.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createJwtOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/config/services.config.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createJwtOptions\n                        \n                        \n                    \n                \n            \n            \n                \ncreateJwtOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/config/services.config.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     { signOptions: { expiresIn: string; }; secret: any; }\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { TypeOrmOptionsFactory } from '@nestjs/typeorm';\nimport { ConfigService } from '@nestjs/config';\nimport { JwtOptionsFactory } from '@nestjs/jwt';\n\n@Injectable()\nexport class JWTConfig implements JwtOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createJwtOptions() {\n    return {\n      signOptions: {\n        expiresIn: '1h',\n      },\n      secret: this.configService.get('jwtSecret'),\n    };\n  }\n}\n\n@Injectable()\nexport class DatabaseConfig implements TypeOrmOptionsFactory {\n  constructor(private configService: ConfigService) {}\n\n  createTypeOrmOptions() {\n    return this.configService.get('database');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuth.html":{"url":"injectables/JwtAuth.html","title":"injectable - JwtAuth","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuth\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { GqlExecutionContext } from '@nestjs/graphql';\n\n@Injectable()\nexport class JwtAuth extends AuthGuard('jwt') {}\n\n@Injectable()\nexport class JwtAuthGraphQL extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGraphQL.html":{"url":"injectables/JwtAuthGraphQL.html","title":"injectable - JwtAuthGraphQL","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGraphQL\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/guards/jwt-auth.guard.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \ngetRequest(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/guards/jwt-auth.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { GqlExecutionContext } from '@nestjs/graphql';\n\n@Injectable()\nexport class JwtAuth extends AuthGuard('jwt') {}\n\n@Injectable()\nexport class JwtAuthGraphQL extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategies/jwt.strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: AuthUser)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategies/jwt.strategy.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { AuthUser } from '../../../utils/types/graphql';\nimport { AuthService } from '../auth.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly authService: AuthService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: AuthUser) {\n    const user = await this.authService.User.findOne(payload.id);\n    if (!user) throw new HttpException('Invalid Token', HttpStatus.UNAUTHORIZED);\n    return { id: payload.id, email: payload.email, roles: payload.roles };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponse.html":{"url":"classes/LoginResponse.html","title":"class - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/types/auth.types.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                token\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/types/auth.types.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/types/auth.types.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, ObjectType } from '@nestjs/graphql';\nimport { User } from '../../../db/models/user.entity';\n\n@ObjectType()\nexport class LoginResponse {\n  @Field({ nullable: true })\n  user?: User;\n\n  @Field({ nullable: true })\n  token?: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/product.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                stock\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/product.entity.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({type: 'varchar', length: 150})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/product.entity.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stock\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/product.entity.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         User\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@ManyToOne(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/product.entity.ts:22\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column, Entity, ManyToOne, PrimaryGeneratedColumn } from 'typeorm';\nimport { User } from './user.entity';\nimport { Field, ID, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\n@Entity({ name: 'products' })\nexport class Product extends BaseEntity {\n  @Field(() => ID)\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Field()\n  @Column({ type: 'varchar', length: 150 })\n  name: string;\n\n  @Field()\n  @Column()\n  stock: number;\n\n  @Field(() => User)\n  @ManyToOne(() => User, user => user.products)\n  user: User;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductsController.html":{"url":"controllers/ProductsController.html","title":"controller - ProductsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOne\n                            \n                            \n                                    Async\n                                deleteOne\n                            \n                            \n                                    Async\n                                editOne\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                getAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOne(createProductDto: CreateProductDto, user: AuthUser)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuth)@Post('/products')@ApiBearerAuth('BearerJWT')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                AuthUser\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuth)@Delete('/products/:id')@ApiBearerAuth('BearerJWT')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            editOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    editOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuth)@Put('/products/:id')@ApiBearerAuth('BearerJWT')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findOne\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/products/:id')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAll\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/products')\n                \n            \n\n            \n                \n                    Defined in src/modules/products/products.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpException,\n  HttpStatus,\n  Param,\n  ParseIntPipe,\n  Post,\n  Put,\n  Query,\n  UseGuards,\n} from '@nestjs/common';\nimport { ProductsService } from './products.service';\nimport { CreateProductDto } from './dto/createProduct.dto';\nimport { Product } from '../../db/models/product.entity';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { JwtAuth } from '../auth/guards/jwt-auth.guard';\nimport { CurrentUser } from '../auth/decorators/current-user.decorators';\nimport { AuthUser } from '../../utils/types/graphql';\n\n@ApiTags('Products')\n@Controller()\nexport class ProductsController {\n  constructor(private readonly productsService: ProductsService) {}\n\n  /*@Get('/')\n  async indexRoute() {\n    const url = this.productsService.configService.get('url');\n    return {\n      swagger: url + '/api',\n      graphql: url + '/graphql',\n    };\n  }*/\n\n  @Get('/products')\n  async getAll(@Query('limit', ParseIntPipe) limit: number): Promise {\n    return await this.productsService.productsRepo.find({\n      take: limit || 10,\n    });\n  }\n\n  @Get('/products/:id')\n  async findOne(@Param('id', ParseIntPipe) id: number) {\n    const product = await this.productsService.productsRepo.findOne(id);\n    if (!product) throw new HttpException('Producto no existe', HttpStatus.NOT_FOUND);\n    return product;\n  }\n\n  @UseGuards(JwtAuth)\n  @Post('/products')\n  @ApiBearerAuth('BearerJWT')\n  async createOne(@Body() createProductDto: CreateProductDto, @CurrentUser() user: AuthUser): Promise {\n    if (!createProductDto.name || !createProductDto.stock) {\n      throw new HttpException('Bad fucking request bro!', HttpStatus.BAD_REQUEST);\n    }\n    return this.productsService.productsRepo\n      .create({\n        ...createProductDto,\n        user: await this.productsService.usersRepo.findOne(user.id),\n      })\n      .save();\n  }\n\n  @UseGuards(JwtAuth)\n  @Delete('/products/:id')\n  @ApiBearerAuth('BearerJWT')\n  async deleteOne(@Param('id', ParseIntPipe) id: number) {\n    const product = await this.productsService.productsRepo.delete({\n      id,\n    });\n    if (!product) throw new HttpException('Producto no existe', HttpStatus.NOT_FOUND);\n    return true;\n  }\n\n  @UseGuards(JwtAuth)\n  @Put('/products/:id')\n  @ApiBearerAuth('BearerJWT')\n  async editOne(@Param('id', ParseIntPipe) id: number) {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductsModule.html":{"url":"modules/ProductsModule.html","title":"module - ProductsModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\n\nProductsService\n\nProductsService\n\n\n\nProductsModule\n\nProductsModule\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/products/products.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductsController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { ProductsService } from './products.service';\nimport { ProductsController } from './products.controller';\nimport { Product } from '../../db/models/product.entity';\nimport { User } from '../../db/models/user.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Product, User])],\n  providers: [ProductsService],\n  controllers: [ProductsController],\n})\nexport class ProductsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductsService.html":{"url":"injectables/ProductsService.html","title":"injectable - ProductsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProductsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/products/products.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                configService\n                            \n                            \n                                    Public\n                                    Readonly\n                                productsRepo\n                            \n                            \n                                    Public\n                                    Readonly\n                                usersRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(productsRepo: Repository, usersRepo: Repository, configService: ConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/products/products.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        productsRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        usersRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        configService\n                                                  \n                                                        \n                                                                    ConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            configService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/modules/products/products.service.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            productsRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(Product)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/products/products.service.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            usersRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(User)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/products/products.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Product } from '../../db/models/product.entity';\nimport { Repository } from 'typeorm';\nimport { User } from '../../db/models/user.entity';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class ProductsService {\n  constructor(\n    @InjectRepository(Product) public readonly productsRepo: Repository,\n    @InjectRepository(User) public readonly usersRepo: Repository,\n    public readonly configService: ConfigService,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterArgs.html":{"url":"classes/RegisterArgs.html","title":"class - RegisterArgs","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterArgs\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                bornDate\n                            \n                            \n                                description\n                            \n                            \n                                email\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bornDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | null\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: false})@IsEmail()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, InputType, registerEnumType } from '@nestjs/graphql';\nimport { IsEmail } from 'class-validator';\n\nexport enum AUTH_APPS {\n  Google,\n  GitHub,\n}\n\nregisterEnumType(AUTH_APPS, {\n  name: 'EXTERNAL_AUTH_APPS', // this one is mandatory\n  description: 'External auth apps like GitHub or Google', // this one is optional\n});\n\n@ArgsType()\nexport class RegisterArgs {\n  @Field({ nullable: false })\n  @IsEmail()\n  email: string;\n\n  @Field({ nullable: false })\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  description: string | null;\n\n  @Field({ nullable: true })\n  password: string;\n\n  @Field({ nullable: false })\n  bornDate: Date;\n}\n\n@InputType({\n  description: 'Datos necesarios para ingresar mediante una aplicacion externa como GitHub o Google',\n})\nexport class SocialRegisterInput {\n  @Field({ nullable: false })\n  token!: string;\n\n  @Field(() => AUTH_APPS)\n  type!: AUTH_APPS;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SocialRegisterInput.html":{"url":"classes/SocialRegisterInput.html","title":"class - SocialRegisterInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SocialRegisterInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/register.input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field({nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AUTH_APPS\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/auth/dto/register.input.ts:41\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ArgsType, Field, InputType, registerEnumType } from '@nestjs/graphql';\nimport { IsEmail } from 'class-validator';\n\nexport enum AUTH_APPS {\n  Google,\n  GitHub,\n}\n\nregisterEnumType(AUTH_APPS, {\n  name: 'EXTERNAL_AUTH_APPS', // this one is mandatory\n  description: 'External auth apps like GitHub or Google', // this one is optional\n});\n\n@ArgsType()\nexport class RegisterArgs {\n  @Field({ nullable: false })\n  @IsEmail()\n  email: string;\n\n  @Field({ nullable: false })\n  name: string;\n\n  @Field(() => String, { nullable: true })\n  description: string | null;\n\n  @Field({ nullable: true })\n  password: string;\n\n  @Field({ nullable: false })\n  bornDate: Date;\n}\n\n@InputType({\n  description: 'Datos necesarios para ingresar mediante una aplicacion externa como GitHub o Google',\n})\nexport class SocialRegisterInput {\n  @Field({ nullable: false })\n  token!: string;\n\n  @Field(() => AUTH_APPS)\n  type!: AUTH_APPS;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Todo.html":{"url":"classes/Todo.html","title":"class - Todo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Todo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/todo.entity.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                exampleField\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exampleField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined, {description: 'Example field (placeholder)'})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/todo.entity.ts:6\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Int, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Todo {\n  @Field(() => Int, { description: 'Example field (placeholder)' })\n  exampleField: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateAnimalInput.html":{"url":"classes/UpdateAnimalInput.html","title":"class - UpdateAnimalInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateAnimalInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/animals/dto/update-animal.input.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/animals/dto/update-animal.input.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { CreateAnimalInput } from './create-animal.input';\nimport { Field, InputType, Int, PartialType } from '@nestjs/graphql';\n\n@InputType()\nexport class UpdateAnimalInput extends PartialType(CreateAnimalInput) {\n  @Field(() => Int)\n  id: number;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/utils/types/graphql.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        createReadStream\n                                \n                                \n                                        encoding\n                                \n                                \n                                        filename\n                                \n                                \n                                        mimetype\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createReadStream\n                                    \n                                \n                                \n                                    \n                                        createReadStream:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        encoding\n                                    \n                                \n                                \n                                    \n                                        encoding:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mimetype\n                                    \n                                \n                                \n                                    \n                                        mimetype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Request } from 'express';\nimport { Stream } from 'stream';\n\nexport interface AuthUser {\n  id: number;\n  email: string;\n  roles: string[];\n}\n\nexport interface Context {\n  req: Request;\n  user: AuthUser | null;\n}\n\nexport interface AuthContext extends Context {\n  user: AuthUser;\n}\n\nexport interface Upload {\n  filename: string;\n  mimetype: string;\n  encoding: string;\n  createReadStream: () => Stream;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/db/models/user.entity.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseEntity\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                age\n                            \n                            \n                                animals\n                            \n                            \n                                bornDate\n                            \n                            \n                                description\n                            \n                            \n                                email\n                            \n                            \n                                github\n                            \n                            \n                                google\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                products\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            age\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            animals\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Animal[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            bornDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@Column({default: '', length: 500})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({length: 150, unique: true, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            github\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({default: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@PrimaryGeneratedColumn()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field()@Column({length: 100, nullable: false})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Column()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Product[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Field(undefined)@OneToMany(undefined, undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/db/models/user.entity.ts:49\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { BaseEntity, Column, Entity, OneToMany, PrimaryGeneratedColumn } from 'typeorm';\nimport { Field, ID, ObjectType } from '@nestjs/graphql';\nimport { Product } from './product.entity';\nimport { Animal } from './animal.entity';\n\n/*import { Message } from '../Message/Message';\nimport { UserToTeam } from './UserToTeam';\nimport { FriendRequest } from '../FriendRequest/FriendRequest';\nimport { UserToProject } from './UserToProject';*/\n\n@ObjectType({ description: 'Registered users' })\n@Entity({ name: 'users' })\nexport class User extends BaseEntity {\n  @Field(() => ID)\n  @PrimaryGeneratedColumn()\n  id!: number;\n\n  @Field()\n  @Column({ length: 100, nullable: false })\n  name!: string;\n\n  @Field()\n  age!: number;\n\n  @Column()\n  bornDate!: Date;\n\n  @Field(() => String)\n  @Column({ default: '', length: 500 })\n  description!: string;\n\n  @Field()\n  @Column({ default: false })\n  google!: boolean;\n\n  @Field()\n  @Column({ default: false })\n  github!: boolean;\n\n  @Field()\n  @Column({ length: 150, unique: true, nullable: false })\n  email!: string;\n\n  @Column()\n  password!: string;\n\n  @Field(() => [Product])\n  @OneToMany(() => Product, p => p.user)\n  products: Product[];\n\n  @Field(() => [Animal])\n  @OneToMany(() => Animal, a => a.owner)\n  animals: Animal[];\n\n  /*@OneToMany(() => FriendRequest, sender => sender.sender)\n  sentFriendRequests!: FriendRequest[];\n\n  @OneToMany(() => FriendRequest, receiver => receiver.receiver)\n  receivedFriendRequests!: FriendRequest[];\n\n  @Field(() => [User])\n  friends!: this[];\n\n  @Field(() => [Message])\n  @OneToMany(() => Message, sender => sender.sender)\n  sentMessages!: Message[];\n\n  @Field(() => [Message])\n  @OneToMany(() => Message, receiver => receiver.receiver)\n  receivedMessages!: Message[];\n\n  @Field(() => [UserToTeam])\n  @OneToMany(() => UserToTeam, teams => teams.user)\n  teams!: UserToTeam[];\n\n  @Field(() => [UserToProject])\n  @OneToMany(() => UserToProject, utp => utp.user)\n  projects!: UserToProject[];*/\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuth)@ApiOperation({summary: 'Get all users'})@ApiResponse({status: 200, description: 'Success.'})@Get()@ApiBearerAuth('BearerJWT')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/users.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, UseGuards } from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { ApiBearerAuth, ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { JwtAuth } from '../auth/guards/jwt-auth.guard';\n\n@ApiTags('Users')\n@Controller('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @UseGuards(JwtAuth)\n  @ApiOperation({ summary: 'Get all users' })\n  @ApiResponse({ status: 200, description: 'Success.' })\n  @Get()\n  @ApiBearerAuth('BearerJWT')\n  async getUsers() {\n    return await this.usersService.usersRepo.find({\n      relations: ['animals', 'products'],\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from '../../db/models/user.entity';\nimport { UsersService } from './users.service';\nimport { UsersController } from './users.controller';\n\n@Global()\n@Module({\n  imports: [TypeOrmModule.forFeature([User])],\n  providers: [UsersService],\n  controllers: [UsersController],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/users.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Readonly\n                                usersRepo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersRepo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/users.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersRepo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            usersRepo\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Repository\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @InjectRepository(User)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/modules/users/users.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { User } from '../../db/models/user.entity';\n\n@Injectable()\nexport class UsersService {\n  constructor(\n    @InjectRepository(User)\n    public readonly usersRepo: Repository,\n  ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/config/apollo-server.config.ts\n            \n            variable\n            apolloConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/apollo-server.config.ts\n            \n            variable\n            getErrorsAsString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/global.config.ts\n            \n            interface\n            GlobalConfig\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/config/global.config.ts\n            \n            variable\n            globalConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/services.config.ts\n            \n            injectable\n            DatabaseConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/config/services.config.ts\n            \n            injectable\n            JWTConfig\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/db/models/animal.entity.ts\n            \n            class\n            Animal\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/db/models/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/db/models/todo.entity.ts\n            \n            class\n            Todo\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/db/models/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/animals/animals.resolver.ts\n            \n            class\n            AnimalsResolver\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/animals/animals.resolver.ts\n            \n            variable\n            pubSub\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/animals/animals.service.ts\n            \n            injectable\n            AnimalsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/animals/dto/create-animal.input.ts\n            \n            class\n            CreateAnimalInput\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/animals/dto/update-animal.input.ts\n            \n            class\n            UpdateAnimalInput\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.resolver.ts\n            \n            class\n            AuthResolver\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            interface\n            IVerifyPassword\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/decorators/current-user.decorators.ts\n            \n            variable\n            CurrentUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/decorators/current-user.decorators.ts\n            \n            variable\n            CurrentUserGQL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.input.ts\n            \n            class\n            RegisterArgs\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/register.input.ts\n            \n            class\n            SocialRegisterInput\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuth\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGraphQL\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/strategies/google.strategy.ts\n            \n            injectable\n            GoogleStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/types/auth.types.ts\n            \n            class\n            LoginResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/products/dto/createProduct.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/products/products.controller.ts\n            \n            controller\n            ProductsController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/products/products.service.ts\n            \n            injectable\n            ProductsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/dto/createUser.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/types/graphql.ts\n            \n            interface\n            AuthContext\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/utils/types/graphql.ts\n            \n            interface\n            AuthUser\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/utils/types/graphql.ts\n            \n            interface\n            Context\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/types/graphql.ts\n            \n            interface\n            Upload\n            \n                0 %\n                (0/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.5.1\n        \n            @nestjs/config : ^0.6.1\n        \n            @nestjs/core : ^7.5.1\n        \n            @nestjs/graphql : ^7.9.1\n        \n            @nestjs/jwt : ^7.2.0\n        \n            @nestjs/passport : ^7.1.5\n        \n            @nestjs/platform-express : ^7.5.1\n        \n            @nestjs/swagger : ^4.7.5\n        \n            @nestjs/terminus : ^7.0.1\n        \n            @nestjs/typeorm : ^7.1.5\n        \n            @types/passport-local : ^1.0.33\n        \n            apollo-server-express : ^2.19.0\n        \n            bcrypt : ^5.0.0\n        \n            class-transformer : ^0.3.1\n        \n            class-validator : ^0.12.2\n        \n            graphql : ^15.4.0\n        \n            graphql-tools : ^7.0.2\n        \n            jsonwebtoken : ^8.5.1\n        \n            passport : ^0.4.1\n        \n            passport-google-oauth20 : ^2.0.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.5.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.6.3\n        \n            swagger-ui-express : ^4.1.5\n        \n            typeorm : ^0.2.29\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ANIMAL_TYPE   (src/.../animal.entity.ts)\n                        \n                        \n                            AUTH_APPS   (src/.../register.input.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/db/models/animal.entity.ts\n    \n        \n            \n                \n                    \n                        \n                        ANIMAL_TYPE\n                    \n                \n                        \n                            \n                                 CAT\n                            \n                        \n                        \n                            \n                                 DOG\n                            \n                        \n                        \n                            \n                                 PLATYPUS\n                            \n                        \n            \n        \n\n    src/modules/auth/dto/register.input.ts\n    \n        \n            \n                \n                    \n                        \n                        AUTH_APPS\n                    \n                \n                        \n                            \n                                 Google\n                            \n                        \n                        \n                            \n                                 GitHub\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AnimalsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HealthModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AnimalsModule\n\n\n\ncluster_AnimalsModule_providers\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_ProductsModule\n\n\n\ncluster_ProductsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAnimalsService\n\nAnimalsService\n\n\n\nAnimalsModule\n\nAnimalsModule\n\nAnimalsModule -->\n\nAnimalsService->AnimalsModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAnimalsModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nHealthModule\n\nHealthModule\n\nAppModule -->\n\nHealthModule->AppModule\n\n\n\n\n\nProductsModule\n\nProductsModule\n\nAppModule -->\n\nProductsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nProductsService\n\nProductsService\n\nProductsModule -->\n\nProductsService->ProductsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    10 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    13 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    6 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apolloConfig   (src/.../apollo-server.config.ts)\n                        \n                        \n                            CurrentUser   (src/.../current-user.decorators.ts)\n                        \n                        \n                            CurrentUserGQL   (src/.../current-user.decorators.ts)\n                        \n                        \n                            getErrorsAsString   (src/.../apollo-server.config.ts)\n                        \n                        \n                            globalConfig   (src/.../global.config.ts)\n                        \n                        \n                            pubSub   (src/.../animals.resolver.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/apollo-server.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            apolloConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GqlModuleOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  autoSchemaFile: true,\n  introspection: true,\n  installSubscriptionHandlers: true,\n  playground: {\n    settings: { 'editor.fontSize': 22 },\n  },\n  formatError: (error: GraphQLError) => {\n    const formatedError: { message: string; statusCode: number } = {\n      message: getErrorsAsString(error.extensions?.exception?.response?.message || error.message),\n      statusCode: error.extensions?.exception?.response?.statusCode || error.extensions?.exception?.status || 500,\n    };\n    return formatedError;\n  },\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getErrorsAsString\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (data: string | string[]) => {\n  if (Array.isArray(data)) {\n    return data.join(', ');\n  }\n  return data;\n}\n                        \n                    \n\n\n            \n        \n\n    src/modules/auth/decorators/current-user.decorators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, context: ExecutionContext) => {\n  return context.switchToHttp().getRequest().user;\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CurrentUserGQL\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createParamDecorator((data: unknown, context: ExecutionContext) => {\n  const ctx = GqlExecutionContext.create(context);\n  return ctx.getContext().req.user;\n})\n                        \n                    \n\n\n            \n        \n\n    src/config/global.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            globalConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (): GlobalConfig => ({\n  url: process.env.NODE_ENV === 'production' ? 'https://sales-management-api.herokuapp.com' : 'http://localhost:3000',\n  port: process.env.PORT || 3000,\n  jwtSecret: process.env.JWT_SECRET,\n  database: {\n    type: 'postgres',\n    url: process.env.DATABASE_URL,\n    logging: false,\n    synchronize: true,\n    autoLoadEntities: true,\n    dropSchema: process.env.NODE_ENV !== 'production',\n  },\n})\n                        \n                    \n\n\n            \n        \n\n    src/modules/animals/animals.resolver.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            pubSub\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new PubSub()\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
